{"version":3,"file":"static/js/7918.596902d5.chunk.js","mappings":"8PAUA,MA4FA,EA5FsBA,IAClB,MAAM,QAAEC,EAAO,OAAEC,EAAM,UAAEC,EAAS,cAAEC,EAAa,KAAEC,EAAI,KAAEC,EAAI,aAAEC,EAAY,YAAEC,EAAW,kBAAEC,EAAiB,eAAEC,EAAc,cAAEC,GAAkBX,GAKxIY,EAAUC,KAHAC,EAAAA,EAAAA,OAGeC,EAAAA,EAAAA,WAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAsB/CK,IArBkB,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,QAAS,IAAS,OAAJhB,QAAI,IAAJA,GAAAA,EAAMiB,MAAMC,IAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,OAAQN,KAqBtD,CACjB,CAAEO,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAOC,MAAO,IAC1D,CAAEH,OAAQ,eAAgBC,SAAU,QACpC,CAAED,OAAQ,eAAgBC,SAAU,eACpC,CAAED,OAAQ,MAAOC,SAAU,OAC3B,CAAED,OAAQ,gBAAiBC,SAAU,kBAmBzC,OACIG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAC7B,QAASA,EAAS8B,KAAK,OAAO7B,OAAQA,EAAO8B,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,KACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAY,CAAAH,SAAA,EACTC,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAJ,SAAC,oBACbC,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAAAN,SACLpB,GACGqB,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUb,MAAM,OAAMI,UAC9DC,EAAAA,EAAAA,KAACS,EAAAA,EAAO,OAEZT,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,CACbC,MAhEV,UAiEUhC,SAAUA,EACViC,WAAwB,OAAZzB,QAAY,IAAZA,EAAAA,EAAgB,GAE5B0B,QAAa,OAAJzC,QAAI,IAAJA,EAAAA,EAAQ,GACjB0C,UAAW1C,EACX2C,cAAeA,IAAM,GACrBC,YAAY,EACZC,YAAY,EACZhC,eAAgBA,EAChBC,kBAAmBA,EACnBgC,WAAW,SACXC,cAAc,OAI1BvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAW,CAAArB,SAAA,EACRH,EAAAA,EAAAA,MAACyB,EAAAA,OAAM,CAACC,QAAQ,QAAQxB,KAAK,KAAKyB,GAAI,EAAGC,WAAU7C,EAAyB8C,UAAUzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAO,IAAKC,QAzE9FC,UACjB,IACIhD,GAAY,GACZT,EAAcD,EAAWe,GAQzBjB,GACJ,CACA,MAAO6D,GACHC,QAAQC,IAAIF,EAChB,CAAC,QAEGjD,GAAY,EAChB,GAuDqImB,SAAA,CAAC,IAAEpB,GAAWqB,EAAAA,EAAAA,KAACS,EAAAA,EAAO,IAAM,aACrJT,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACC,QAAQ,UAAUxB,KAAK,KAAKkC,YAAY,MAAML,QAASA,IAAM3D,IAAU+B,SAAC,kBAGpF,C,8JCxFhB,MAqFA,EArFmBhC,IACf,MAAM,QAAEC,EAAO,OAAEC,EAAM,UAAEC,EAAS,cAAEC,EAAa,KAAEC,EAAI,SAAEO,EAAQ,YAAEC,GAAgBb,GAM5EgB,EAAUC,KAJAH,EAAAA,EAAAA,OAIeC,EAAAA,EAAAA,UAAS,MAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAe/CK,EAAe,CACjB,CAAEK,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAOC,MAAO,IAC1D,CACIH,OAAQ,WAAYC,SAAU,YAElC,CAAED,OAAQ,aAAcC,SAAU,aAClC,CAAED,OAAQ,YAAaC,SAAU,YACjC,CAAED,OAAQ,OAAQC,SAAU,SAiBhC,OACIG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAC7B,QAASA,EAAS8B,KAAK,OAAO7B,OAAQA,EAAO8B,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,KACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAY,CAAAH,SAAA,EACTC,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAJ,SAAC,iBACbC,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAAAN,SACLpB,GACGqB,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUb,MAAM,OAAMI,UAC9DC,EAAAA,EAAAA,KAACS,EAAAA,EAAO,OAEZT,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,CACbC,MAzDV,QA0DUhC,SAAUA,EACViC,WAAwB,OAAZzB,QAAY,IAAZA,EAAAA,EAAgB,GAE5B0B,QAAa,OAAJzC,QAAI,IAAJA,EAAAA,EAAQ,GACjB0C,UAAW1C,EACX2C,cAAeA,IAAM,GACrBC,YAAY,EACZC,YAAY,EACZhC,eAAgBA,EAChBC,kBAAmBA,EACnBgC,WAAW,SACXC,cAAc,OAI1BvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAW,CAAArB,SAAA,EACRH,EAAAA,EAAAA,MAACyB,EAAAA,OAAM,CAACC,QAAQ,QAAQxB,KAAK,KAAKyB,GAAI,EAAGC,WAAU7C,EAAyB8C,UAAUzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAO,IAAKC,QAlE9FC,UACjB,IACIhD,GAAY,GACZT,EAAcD,EAAWe,GACzBjB,GACJ,CACA,MAAO6D,GACHC,QAAQC,IAAIF,EAChB,CAAC,QAEGjD,GAAY,EAChB,GAuDqImB,SAAA,CAAC,IAAEpB,GAAWqB,EAAAA,EAAAA,KAACS,EAAAA,EAAO,IAAM,aACrJT,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACC,QAAQ,UAAUxB,KAAK,KAAKkC,YAAY,MAAML,QAASA,IAAM3D,IAAU+B,SAAC,kBAGpF,C,kDCvFT,MAAMkC,EAAqBC,EAAAA,GAAW,CACzCC,gBAAiBD,EAAAA,KAAaE,SAAS,gCACvC/D,KAAM6D,EAAAA,KACNG,WAAYH,EAAAA,KACZI,SAAUJ,EAAAA,KACVK,kBAAmBL,EAAAA,KAAaE,SAAS,kCACzCI,OAAQN,EAAAA,KACRO,kBAAmBP,EAAAA,KAAaE,SAAS,mCACzCM,SAAUR,EAAAA,KACVS,WAAYT,EAAAA,KAAaE,SAAS,2BAClCQ,YAAaV,EAAAA,KACbW,YAAaX,EAAAA,KACbY,SAAUZ,EAAAA,M,yLCHd,MAsGA,EAtGyBnE,IACrB,MAAM,QAAEC,EAAO,OAAEC,EAAM,UAAEC,EAAS,cAAEC,EAAa,KAAEC,GAASL,GAKrDY,EAAUC,KAHAC,EAAAA,EAAAA,OAGeC,EAAAA,EAAAA,WAAS,KAClCG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAe/CK,EAAe,CACjB,CAAEK,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAOC,MAAO,IAC1D,CACIH,OAAQ,mBAAoBC,SAAU,mBAE1C,CACID,OAAQ,eAAgBC,SAAU,eAEtC,CACID,OAAQ,qBAAsBC,SAAU,qBAE5C,CACID,OAAQ,sBAAuBC,SAAU,oBAAqBsD,KAAOA,IACjE/C,EAAAA,EAAAA,KAAA,OAAAD,SAAMiD,IAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,OAAOC,OAAO,iBAGzC,CACI1D,OAAQ,cAAeC,SAAU,gBAKlC0D,EAASC,IAActE,EAAAA,EAAAA,UAAS,IAAIK,KACpCkE,EAAiBC,IAAsBxE,EAAAA,EAAAA,UAAS,IAAIK,IAC5B,OAAZA,QAAY,IAAZA,GAAAA,EAAcoE,QAAOjE,GAAuB,OAAf+D,QAAe,IAAfA,OAAe,EAAfA,EAAiBhE,MAAKmE,IAAc,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOhE,UAAWF,EAAKE,WAkBtG,OACII,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAC7B,QAASA,EAAS8B,KAAK,OAAO7B,OAAQA,EAAO8B,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,KACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAY,CAAAH,SAAA,EACTC,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAJ,SAAC,wBACbC,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAAAN,SACLpB,GACGqB,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUb,MAAM,OAAMI,UAC9DC,EAAAA,EAAAA,KAACS,EAAAA,EAAO,OAEZT,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,CACbC,MA1EV,eA2EUhC,SAAUA,EACViC,WAAmB,OAAPuC,QAAO,IAAPA,EAAAA,EAAW,GAEvBtC,QAAa,OAAJzC,QAAI,IAAJA,EAAAA,EAAQ,GACjB0C,UAAW1C,EACX2C,cAAeA,IAAM,GACrBC,YAAY,EACZC,YAAY,EACZhC,eAAgBA,EAChBC,kBAAmBA,EACnBgC,WAAW,SACXC,cAAc,OAI1BvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAW,CAAArB,SAAA,EACRH,EAAAA,EAAAA,MAACyB,EAAAA,OAAM,CAACC,QAAQ,QAAQxB,KAAK,KAAKyB,GAAI,EAAGC,WAAU7C,EAAyB8C,UAAUzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAO,IAAKC,QApF9FC,UACjB,IACIhD,GAAY,GACZT,EAAcD,EAAWe,GACzBjB,GACJ,CACA,MAAO6D,GACHC,QAAQC,IAAIF,EAChB,CAAC,QAEGjD,GAAY,EAChB,GAyEqImB,SAAA,CAAC,IAAEpB,GAAWqB,EAAAA,EAAAA,KAACS,EAAAA,EAAO,IAAM,aACrJT,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACC,QAAQ,UAAUxB,KAAK,KAAKkC,YAAY,MAAML,QAASA,IAAM3D,IAAU+B,SAAC,kBAGpF,C,+JCjFD,SAAS0D,EAAa1F,GACnC,MAAM,YAAE2F,EAAW,UAAE5C,EAAS,MAAEH,EAAK,KAAEtC,EAAI,eAAEY,EAAc,kBAAEC,GAAsBnB,EAE7EoF,GAAUQ,EAAAA,EAAAA,UAAQ,IAAMD,GAAa,CAACA,IACtCtF,GAAOuF,EAAAA,EAAAA,UAAQ,IAAM7C,GAAW,CAACA,KAEhC8C,EAAaC,IADPC,KAAKC,MAAMC,aAAaC,QAAQ,UACPnF,EAAAA,EAAAA,aAEhCoF,GAAgBC,EAAAA,EAAAA,UACpB,CACEhB,UAAS/E,OACTgG,aAAc,CAAEC,UAAW,IAE7BC,EAAAA,gBACAC,EAAAA,UACAC,EAAAA,gBAGI,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,WACZC,EAAU,KACVC,EAAI,gBACJC,EAAe,YACfC,EAAW,YACXC,EAAW,UACXC,EAAS,SACTC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EACAC,OAAO,UAAEjB,EAAS,SAAEkB,IAClBrB,EAEAc,EAAY5F,OAASwE,GACvBC,EAAemB,EAAY5F,QAG7B,MAAMoG,GAAYC,EAAAA,EAAAA,IAAkB,WAAY,SAC1CC,GAAcD,EAAAA,EAAAA,IAAkB,WAAY,kBAE5CE,EAAuBA,CAACC,EAAO3C,KACtB,UAAT5E,EACEuH,EAAMC,OAAOC,QACf5G,GAAmB6G,GAAuB,IAAIA,EAAoB9C,KAElE/D,GAAmB6G,GACjBA,EAAmBxC,QAAQyC,GAAkBA,IAAkB/C,MAI/D2C,EAAMC,OAAOC,QACf5G,EAAkB+D,GAElB/D,EAAkB,KAEtB,EAIF,OACEU,EAAAA,EAAAA,MAACqG,EAAAA,EAAI,CACHC,UAAU,SACVC,EAAE,OACFC,GAAG,MACHC,MAAO,CAAEC,OAAQ,sBACjBC,UAAW,CAAEC,GAAI,SAAUC,GAAI,UAAW1G,SAAA,EAC1CC,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAAC8F,GAAG,OAAOM,QAAQ,gBAAgBC,GAAG,OAAOC,MAAM,SAAQ7G,UAC9DH,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CACHC,MAAOtB,EACPuB,SAAS,OACTC,WAAW,MACXC,WAAW,OAAMlH,SAAA,CAChBY,EAAM,OAAGX,EAAAA,EAAAA,KAACkH,EAAAA,EAAgB,CAAoBC,aAAkB,OAAJ/I,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,QAA9B,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,QAAsC,UAGjFQ,EAAAA,EAAAA,MAACwH,EAAAA,IAAG,CAACC,UAAW,OAAQC,UAAU,2BAA0BvH,SAAA,CAAE,eAE3DH,EAAAA,EAAAA,MAAC2H,EAAAA,GAAK,IAAM9C,IAAiBnD,QAAQ,SAASwF,MAAM,WAAWH,GAAG,OAAM5G,SAAA,EACvEC,EAAAA,EAAAA,KAACwH,EAAAA,GAAK,CAACC,OAAQ,EAAE1H,SACF,OAAZ4E,QAAY,IAAZA,OAAY,EAAZA,EAAc+C,KAAI,CAACC,EAAaC,KAC/BC,EAAAA,EAAAA,eAACC,EAAAA,GAAE,IAAKH,EAAYI,sBAAuBC,IAAKJ,GAC7CD,EAAYM,QAAQP,KAAI,CAACQ,EAAQN,KAEhCC,EAAAA,EAAAA,eAACM,EAAAA,GAAE,IACGD,EAAOE,gBAAqC,IAAtBF,EAAOxI,YAAwBwI,EAAOG,wBAChEC,GAAG,OACHN,IAAKJ,EACLlC,YAAaA,IAEb9F,EAAAA,EAAAA,MAACU,EAAAA,KAAI,CACHsG,MAAM,SACNrG,eAAgB2H,EAAOK,OAAS,SAAW,QAC3CxB,SAAU,CAAEP,GAAI,OAAQC,GAAI,QAC5BK,MAAM,qBAAoB/G,SAAA,EAE1BC,EAAAA,EAAAA,KAAA,QAAMqG,MAAO,CAAEmC,cAAe,aAAcC,YAAa,OAAQ1I,SAC9DmI,EAAOQ,OAAO,aAGM,IAAtBR,EAAOxI,aACNM,EAAAA,EAAAA,KAAA,QAAAD,SACGmI,EAAOS,SAAYT,EAAOU,cAAe5I,EAAAA,EAAAA,KAAC6I,EAAAA,IAAU,KAAM7I,EAAAA,EAAAA,KAAC8I,EAAAA,IAAQ,KAAO9I,EAAAA,EAAAA,KAAC+I,EAAAA,IAAM,kBASlGnJ,EAAAA,EAAAA,MAACoJ,EAAAA,GAAK,IAAMtE,IAAmB3E,SAAA,CACX,KAAb,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,aAEJY,EAAAA,EAAAA,KAAC8H,EAAAA,GAAE,CAAA/H,UACFC,EAAAA,EAAAA,KAACiJ,EAAAA,GAAE,CAACC,QAAS/F,EAAQ/D,OAAOW,SAAC,UAK5B,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,KAAI,CAACyB,EAAKvB,KAAW,IAADwB,EAEzB,OADAxE,EAAWuE,IAETtB,EAAAA,EAAAA,eAACC,EAAAA,GAAE,IAAQ,OAAHqB,QAAG,IAAHA,OAAG,EAAHA,EAAKE,cAAerB,IAAKJ,GAC3B,OAAHuB,QAAG,IAAHA,GAAU,QAAPC,EAAHD,EAAKG,aAAK,IAAAF,OAAP,EAAHA,EAAY1B,KAAI,CAAC3E,EAAM6E,KACtB,IAAIxJ,EAAO,GACuB,IAADmL,EAAL,OAApB,OAAJxG,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,QACfpB,GACEwB,EAAAA,EAAAA,MAACU,EAAAA,KAAI,CAACsG,MAAM,SAAQ7G,SAAA,CACR,UAAT1B,GAAmB2B,EAAAA,EAAAA,KAACwJ,EAAAA,GAAQ,CAACxH,YAAY,cAAciB,MAAOhE,EAAgBwK,UAAWxK,EAAeyK,SAAa,OAAJ3G,QAAI,IAAJA,OAAI,EAAJA,EAAME,OAAQ0G,SAAW/D,GAAUD,EAAqBC,EAAW,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAME,OAAQ1B,GAAG,UAChMvB,EAAAA,EAAAA,KAACwJ,EAAAA,GAAQ,CAACxH,YAAY,cAAciB,MAAOhE,EAAgBwK,UAAWxK,KAAuB,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAME,OAAO0G,SAAW/D,GAAUD,EAAqBC,EAAW,OAAJ7C,QAAI,IAAJA,OAAI,EAAJA,EAAME,OAAQ1B,GAAG,UAC1KvB,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAOtB,EAAWuB,SAAS,KAAKC,WAAW,MAAKjH,UAC/C,OAAJgD,QAAI,IAAJA,GAAS,QAALwG,EAAJxG,EAAMoG,WAAG,IAAAI,OAAL,EAAJA,EAAW3B,OAAQ,OAIO,WAApB,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,SAWW,gBAApB,OAAJuD,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,SAcW,eAApB,OAAJuD,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,QAxBtBpB,GACE4B,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CACHtF,GAAG,OACHuF,MAAOtB,EACPuB,SAAS,KACTC,WAAW,MAAKjH,SAEX,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAME,QA4BsB,kBAApB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,SAOW,mBAApB,OAAJuD,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,QANtBpB,GACE4B,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,MAC7BF,MAAOtB,EAAUzF,SACZ,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAUsB,sBAApB,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,SAMW,qBAApB,OAAJuD,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,SAMW,oBAApB,OAAJuD,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAO1I,WAXtBpB,GACE4B,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAOtB,EAAWuB,SAAS,KAAKC,WAAW,MAAKjH,SAC/C,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAME,SAgBb,OACE4E,EAAAA,EAAAA,eAACoB,EAAAA,GAAE,IACO,OAAJlG,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,eACV5B,IAAKJ,EACLb,SAAU,CAAEP,GAAI,QAChBqD,KAAM,CAAErD,GAAI,QAASsD,GAAI,QAASrD,GAAI,QACtCf,YAAY,eACXtH,EACE,IAGN,cAMV,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,QAAS,IAAKY,EAAAA,EAAAA,KAAC+J,EAAAA,EAAU,CAAC7E,SAAUA,EAAUtB,YAAaA,EAAaC,eAAgBA,EAAgBoB,UAAWA,EAAWH,gBAAiBA,EAAiBM,aAAcA,EAAcL,YAAaA,EAAaC,YAAaA,EAAaK,YAAaA,EAAaF,SAAUA,EAAUI,SAAUA,EAAUlB,UAAWA,MAI1U,C,yKCpPA,MAgFA,EAhFsBtG,IAAW,IAADiM,EAAAC,EAC5B,MAAM,QAAEjM,EAAO,OAAEC,EAAM,UAAEC,EAAS,cAAEC,EAAa,KAAEC,GAASL,GACrDkB,EAAgBC,IAAqBJ,EAAAA,EAAAA,aACrCoL,EAAaC,IAAkBrL,EAAAA,EAAAA,UAAS,KACxCH,EAAUC,IAAeE,EAAAA,EAAAA,WAAS,IAClCqE,EAASC,IAActE,EAAAA,EAAAA,UAAS,IACjCsL,GAAWvL,EAAAA,EAAAA,MAkCjB,OAJAwL,EAAAA,EAAAA,YAAUzI,gBACAwI,GAASE,EAAAA,EAAAA,MAhBW1I,WAAa,IAAD2I,EAAAC,EAAAC,EAAAC,EACtC9L,GAAY,GACZ,MAAM+L,QAAeP,GAASQ,EAAAA,EAAAA,MAC9BT,EAAqB,OAANQ,QAAM,IAANA,GAAe,QAATJ,EAANI,EAAQE,eAAO,IAAAN,OAAT,EAANA,EAAiBnM,MAEhC,MAAM0M,EAAmB,CACrB,CAAEtL,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAOC,MAAO,SAChD,OAANgL,QAAM,IAANA,GAAe,QAATH,EAANG,EAAQE,eAAO,IAAAL,GAAM,QAANC,EAAfD,EAAiBpM,YAAI,IAAAqM,GAAK,QAALC,EAArBD,EAAwB,UAAE,IAAAC,OAApB,EAANA,EAA4BK,SAAU,IACrCxH,QAAOyH,IAAiC,KAAnB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,gBACvBvD,KAAIsD,IAAK,CAAOxL,OAAa,OAALwL,QAAK,IAALA,OAAK,EAALA,EAAOE,MAAOzL,SAAe,OAALuL,QAAK,IAALA,OAAK,EAALA,EAAOG,UAGhE/H,EAAW0H,GACXlM,GAAY,EAAM,EAIlBwM,EAAuB,GACxB,KAECxL,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAC7B,QAASA,EAAS8B,KAAK,OAAO7B,OAAQA,EAAO8B,SAAA,EAChDC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,KACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAY,CAAAH,SAAA,EACTC,EAAAA,EAAAA,KAACG,EAAAA,GAAW,CAAAJ,SAAC,oBACbC,EAAAA,EAAAA,KAACI,EAAAA,GAAgB,KACjBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAAAN,SACLpB,GACGqB,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,eAAgB,SAAUC,WAAY,SAAUb,MAAM,OAAMI,UAC9DC,EAAAA,EAAAA,KAACS,EAAAA,EAAO,OAGZT,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,CACbC,MAAO,WACPhC,SAAUA,EACViC,WAAmB,OAAPuC,QAAO,IAAPA,EAAAA,EAAW,GAEvBtC,QAAa,OAAJzC,QAAI,IAAJA,EAAAA,EAAQ,GACjB0C,UAAW1C,EACXiN,mBAA8B,OAAXnB,QAAW,IAAXA,GAAgB,QAALF,EAAXE,EAAc,UAAE,IAAAF,GAAQ,QAARC,EAAhBD,EAAkBe,cAAM,IAAAd,OAAb,EAAXA,EAA0B1G,QAAQyH,IAAkC,KAAnB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,kBAA0B,GAChGlK,cAAeA,IAAM,GACrBC,YAAY,EACZC,YAAY,EACZhC,eAAgBA,EAChBC,kBAAmBA,EACnBgC,WAAW,SACXC,cAAc,OAI1BvB,EAAAA,EAAAA,MAACwB,EAAAA,GAAW,CAAArB,SAAA,EACRH,EAAAA,EAAAA,MAACyB,EAAAA,OAAM,CAACC,QAAQ,QAAQxB,KAAK,KAAKyB,GAAI,EAAGI,QA/DpCC,UACjB,IACIhD,GAAY,GACZT,EAAcD,EAAWe,GACzBjB,GACJ,CACA,MAAO6D,GACHC,QAAQC,IAAIF,EAChB,CAAC,QAEGjD,GAAY,EAChB,GAoD4E4C,WAAU7C,EAAyB8C,UAAUzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAO,IAAI3B,SAAA,CAAC,IAAEpB,GAAWqB,EAAAA,EAAAA,KAACS,EAAAA,EAAO,IAAM,aACrJT,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACC,QAAQ,UAAUxB,KAAK,KAAKkC,YAAY,MAAML,QAASA,IAAM3D,IAAU+B,SAAC,kBAGpF,C,mFChFhB,SAASuL,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAU3F,GACpC,IAAK,IAAI4F,EAAI,EAAGA,EAAIC,UAAUtM,OAAQqM,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIzD,KAAO2D,EACVJ,OAAOK,UAAUC,eAAeC,KAAKH,EAAQ3D,KAC/CnC,EAAOmC,GAAO2D,EAAO3D,GAG3B,CAEA,OAAOnC,CACT,EAEOyF,EAASS,MAAMC,KAAMN,UAC9B,CAiBA,IAAIO,EAAY,CAAC,YAAa,QAM1BC,GAAwBC,EAAAA,EAAAA,KAAW,SAAUpO,EAAOqO,GACtD,IAAIC,GAASC,EAAAA,EAAAA,IAAe,WAAYvO,GAEpCwO,GAAoBC,EAAAA,EAAAA,IAAiBzO,GACrCuJ,EAAYiF,EAAkBjF,UAC9BmF,EAAOF,EAAkBE,KACzBC,EA3BN,SAAuCf,EAAQgB,GAC7C,GAAc,MAAVhB,EAAgB,MAAO,CAAC,EAC5B,IAEI3D,EAAKyD,EAFL5F,EAAS,CAAC,EACV+G,EAAarB,OAAOsB,KAAKlB,GAG7B,IAAKF,EAAI,EAAGA,EAAImB,EAAWxN,OAAQqM,IACjCzD,EAAM4E,EAAWnB,GACbkB,EAASG,QAAQ9E,IAAQ,IAC7BnC,EAAOmC,GAAO2D,EAAO3D,IAGvB,OAAOnC,CACT,CAcakH,CAA8BR,EAAmBN,GAExDe,GAAgBC,EAAAA,EAAAA,gBAAeP,GAE/BQ,EAAiBT,GAAOU,EAAAA,EAAAA,IAAKd,EADnB,CAAC,IAAK,OAAQ,SAAU,cACcA,EACpD,OAAoBe,EAAAA,cAAoBC,EAAAA,GAAOC,SAAUhC,EAAS,CAChEc,IAAKA,EACLK,KAAMA,GACLO,EAAe,CAChB1F,WAAWiG,EAAAA,EAAAA,IAAG,kBAAmBjG,GACjCkG,MAAON,IAEX,IAEIO,EAAAA,KACFvB,EAASwB,YAAc,W,iYCzCzB,MAoyBA,EApyBc3P,IAAW,IAAD4P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACpB,MAAMC,IAASC,EAAAA,EAAAA,MACT,GAAEC,IAAOF,GACTG,GAAO3L,KAAKC,MAAMC,aAAaC,QAAQ,UAEtCyL,GAAcC,GAAeC,GAAeC,GAAmBC,KAAkBC,EAAAA,EAAAA,GAAU,CAAC,SAAU,UAAW,WAAY,gBAAiB,cAE9I3R,GAAM4R,KAAWlR,EAAAA,EAAAA,aACjBmR,GAAaC,KAAkBpR,EAAAA,EAAAA,UAAS,KACzC,OAAEqR,GAAM,QAAEnS,KAAYoS,EAAAA,EAAAA,OACrBC,GAAMC,KAAWxR,EAAAA,EAAAA,WAAS,IAC1ByR,GAAaC,KAAa1R,EAAAA,EAAAA,WAAS,IACnC2R,GAAiBC,KAAsB5R,EAAAA,EAAAA,WAAS,IAChD6R,GAASC,KAAc9R,EAAAA,EAAAA,WAAS,IAChCH,GAAUC,KAAeE,EAAAA,EAAAA,WAAS,GACnC+R,IAAWC,EAAAA,EAAAA,OACVzS,GAAM0S,KAAWjS,EAAAA,EAAAA,UAAS,KAC1BkS,GAAeC,KAAoBnS,EAAAA,EAAAA,UAAS,OAC5CoS,GAAmBC,KAAwBrS,EAAAA,EAAAA,UAAS,OACpDsS,GAAcC,KAAmBvS,EAAAA,EAAAA,WAAS,GAK3CwS,KAHQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,IAChC,IAAIF,MAAOC,cAAcC,MAAM,KAAK,GAE9B,CACpB,CAAEjS,OAAQ,iBAAkBC,SAAU,gBAAiBC,YAAY,EAAOC,MAAO,IACjF,CACIH,OAAQ,QAASC,SAAU,QAASsD,KAAOA,IACvC/C,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,YAAWvH,UACtBC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CACDlF,QAASA,KAAA,IAAA4H,EAAA,OAAMsH,GAAS,iBAAqB,OAAJ9N,QAAI,IAAJA,GAAS,QAALwG,EAAJxG,EAAMoG,WAAG,IAAAI,OAAL,EAAJA,EAAWmI,SAASnS,MAAM,EACnEgC,GAAG,OACHoQ,GAAI,CAAE,UAAW,CAAE7K,MAAO,WAAY8K,eAAgB,aAAeC,OAAQ,WAC7E/K,MAAM,YACNC,SAAS,KACTC,WAAW,MAAKjH,SAEX,OAAJgD,QAAI,IAAJA,OAAI,EAAJA,EAAME,WAKvB,CACIzD,OAAQ,SAAUC,SAAU,UAEhC,CACID,OAAQ,UAAWC,SAAU,UAC7BsD,KAAOA,IAAI,IAAA+O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MACQ,eAAd5C,GAAK6C,MAAsC,OAAb1C,SAAa,IAAbA,IAAAA,GAAe2C,MAC1CvS,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,YAAWvH,UACtBC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CACDlF,QAASA,KAAA,IAAA6Q,EAAAC,EAAA,OAAM5B,GAAyC,QAA5B,OAAJ9N,QAAI,IAAJA,GAAS,QAALyP,EAAJzP,EAAMoG,WAAG,IAAAqJ,OAAL,EAAJA,EAAWd,SAASgB,UAAoB,gBAAoB,OAAJ3P,QAAI,IAAJA,GAAS,QAAL0P,EAAJ1P,EAAMoG,WAAG,IAAAsJ,OAAL,EAAJA,EAAWf,SAASgB,UAAU,EAC9GnR,GAAG,OACHoQ,GAAI,CAAE,UAAW,CAAE7K,MAAO,WAAY8K,eAAgB,aAAeC,OAAQ,WAC7E/K,MAAM,YACNC,SAAS,KACTC,WAAW,MAAKjH,SAEX,OAAJgD,QAAI,IAAJA,GAAS,QAAL+O,EAAJ/O,EAAMoG,WAAG,IAAA2I,GAAU,QAAVC,EAATD,EAAWJ,gBAAQ,IAAAK,GAAnBA,EAAqBY,YAAkB,OAAJ5P,QAAI,IAAJA,GAAS,QAALiP,EAAJjP,EAAMoG,WAAG,IAAA6I,GAAU,QAAVC,EAATD,EAAWN,gBAAQ,IAAAO,OAAf,EAAJA,EAAqBU,YAAc,SAI/E3S,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAEI,OAAJgD,QAAI,IAAJA,GAAS,QAALmP,EAAJnP,EAAMoG,WAAG,IAAA+I,GAAU,QAAVC,EAATD,EAAWR,gBAAQ,IAAAS,GAAnBA,EAAqBQ,YAAkB,OAAJ5P,QAAI,IAAJA,GAAS,QAALqP,EAAJrP,EAAMoG,WAAG,IAAAiJ,GAAU,QAAVC,EAATD,EAAWV,gBAAQ,IAAAW,OAAf,EAAJA,EAAqBM,YAAc,KACpE,GAGnB,CACInT,OAAQ,UAAWC,SAAU,UAC7BsD,KAAOA,IAAI,IAAA6P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MACQ,eAAd1D,GAAK6C,MAAsC,OAAb3C,SAAa,IAAbA,IAAAA,GAAe4C,MAC1CvS,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,YAAWvH,UACtBC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CACDlF,QAASA,KAAA,IAAAyR,EAAAC,EAAA,OAAMxC,GAAyC,QAA5B,OAAJ9N,QAAI,IAAJA,GAAS,QAALqQ,EAAJrQ,EAAMoG,WAAG,IAAAiK,OAAL,EAAJA,EAAW1B,SAAS4B,UAAoB,gBAAoB,OAAJvQ,QAAI,IAAJA,GAAS,QAALsQ,EAAJtQ,EAAMoG,WAAG,IAAAkK,OAAL,EAAJA,EAAW3B,SAAS4B,UAAU,EAC9G/R,GAAG,OACHoQ,GAAI,CAAE,UAAW,CAAE7K,MAAO,WAAY8K,eAAgB,aAAeC,OAAQ,WAC7E/K,MAAM,YACNC,SAAS,KACTC,WAAW,MAAKjH,SAEX,OAAJgD,QAAI,IAAJA,GAAS,QAAL6P,EAAJ7P,EAAMoG,WAAG,IAAAyJ,GAAU,QAAVC,EAATD,EAAWlB,gBAAQ,IAAAmB,GAAnBA,EAAqBU,YAAkB,OAAJxQ,QAAI,IAAJA,GAAS,QAAL+P,EAAJ/P,EAAMoG,WAAG,IAAA2J,GAAU,QAAVC,EAATD,EAAWpB,gBAAQ,IAAAqB,OAAf,EAAJA,EAAqBQ,YAAc,SAI/EvT,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAEI,OAAJgD,QAAI,IAAJA,GAAS,QAALiQ,EAAJjQ,EAAMoG,WAAG,IAAA6J,GAAU,QAAVC,EAATD,EAAWtB,gBAAQ,IAAAuB,GAAnBA,EAAqBM,YAAkB,OAAJxQ,QAAI,IAAJA,GAAS,QAALmQ,EAAJnQ,EAAMoG,WAAG,IAAA+J,GAAU,QAAVC,EAATD,EAAWxB,gBAAQ,IAAAyB,OAAf,EAAJA,EAAqBI,YAAc,KACpE,GAGnB,CACI/T,OAAQ,cACRC,SAAU,aACVsD,KAAOA,IAAI,IAAAyQ,EAAAC,EAAAC,EAAAC,EAAA,OACP3T,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,YAAWvH,UACtBC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SACI,OAAJgD,QAAI,IAAJA,GAAS,QAALyQ,EAAJzQ,EAAMoG,WAAG,IAAAqK,GAAU,QAAVC,EAATD,EAAW9B,gBAAQ,IAAA+B,GAAnBA,EAAqBG,WAAa,IAAQ,OAAJ7Q,QAAI,IAAJA,GAAS,QAAL2Q,EAAJ3Q,EAAMoG,WAAG,IAAAuK,GAAU,QAAVC,EAATD,EAAWhC,gBAAQ,IAAAiC,OAAf,EAAJA,EAAqBC,aAAe,OAE7E,GAGd,CACIpU,OAAQ,oBACRC,SAAU,qBACVsD,KAAOA,IAAI,IAAA8Q,EAAAC,EAAAC,EAAAC,EAAA,OACPhU,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,YAAWvH,UACtBC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SACI,OAAJgD,QAAI,IAAJA,GAAS,QAAL8Q,EAAJ9Q,EAAMoG,WAAG,IAAA0K,GAAU,QAAVC,EAATD,EAAWnC,gBAAQ,IAAAoC,GAAnBA,EAAqBG,mBAAqB,GAAGjR,IAAW,OAAJD,QAAI,IAAJA,GAAS,QAALgR,EAAJhR,EAAMoG,WAAG,IAAA4K,GAAU,QAAVC,EAATD,EAAWrC,gBAAQ,IAAAsC,OAAf,EAAJA,EAAqBC,oBAAoB/Q,OAAO,wBAA0B,OAEjI,KAIZgR,GAAgBtS,UAClB,GAAI4N,GAAI,CAAC,IAAD2E,EAAAC,EACJ,IAAIzJ,QAAe0J,EAAAA,EAAAA,IAAO,mBAAoB7E,IAC9CQ,GAAc,OAANrF,QAAM,IAANA,GAAY,QAANwJ,EAANxJ,EAAQvM,YAAI,IAAA+V,OAAN,EAANA,EAAcxJ,QACtBuF,GAAqB,OAANvF,QAAM,IAANA,GAAY,QAANyJ,EAANzJ,EAAQvM,YAAI,IAAAgW,OAAN,EAANA,EAAcE,eACjC,GA4CEC,GAAgB,CAClB5T,MAAW,OAAJvC,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,MACb6T,WAAgB,OAAJpW,SAAI,IAAJA,QAAI,EAAJA,GAAMoW,WAClBC,WAAgB,OAAJrW,SAAI,IAAJA,QAAI,EAAJA,GAAMqW,WAClBC,cAAmB,OAAJtW,SAAI,IAAJA,QAAI,EAAJA,GAAMsW,cACrBC,WAAgB,OAAJvW,SAAI,IAAJA,QAAI,EAAJA,GAAMuW,WAClBC,WAAgB,OAAJxW,SAAI,IAAJA,QAAI,EAAJA,GAAMwW,WAClBC,aAAkB,OAAJzW,SAAI,IAAJA,QAAI,EAAJA,GAAMyW,aACpBC,eAAoB,OAAJ1W,SAAI,IAAJA,QAAI,EAAJA,GAAM0W,eACtBC,gBAAqB,OAAJ3W,SAAI,IAAJA,QAAI,EAAJA,GAAM2W,gBACvBC,eAAoB,OAAJ5W,SAAI,IAAJA,QAAI,EAAJA,GAAM4W,eACtBC,MAAW,OAAJ7W,SAAI,IAAJA,QAAI,EAAJA,GAAM6W,MACbpS,YAAiB,OAAJzE,SAAI,IAAJA,QAAI,EAAJA,GAAMyE,YACnByQ,QAAa,OAAJlV,SAAI,IAAJA,QAAI,EAAJA,GAAMkV,QACfZ,QAAa,OAAJtU,SAAI,IAAJA,QAAI,EAAJA,GAAMsU,QACfhU,cAAmB,OAAJN,SAAI,IAAJA,QAAI,EAAJA,GAAMM,cACrBwW,eAAoB,OAAJ9W,SAAI,IAAJA,QAAI,EAAJA,GAAM8W,eACtB3W,YAAiB,OAAJH,SAAI,IAAJA,QAAI,EAAJA,GAAMG,YACnB4W,aAAkB,OAAJ/W,SAAI,IAAJA,QAAI,EAAJA,GAAM+W,aACpB7W,aAAkB,OAAJF,SAAI,IAAJA,QAAI,EAAJA,GAAME,aACpB8W,cAAmB,OAAJhX,SAAI,IAAJA,QAAI,EAAJA,GAAMgX,cACrB5W,kBAAuB,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMI,kBACzB6W,mBAAwB,OAAJjX,SAAI,IAAJA,QAAI,EAAJA,GAAMiX,mBAC1B5W,eAAoB,OAAJL,SAAI,IAAJA,QAAI,EAAJA,GAAMK,eACtB6W,gBAAqB,OAAJlX,SAAI,IAAJA,QAAI,EAAJA,GAAMkX,gBACvBC,QAAa,OAAJnX,SAAI,IAAJA,QAAI,EAAJA,GAAMmX,QACfjT,SAAc,OAAJlE,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,SAChBkT,MAAW,OAAJpX,SAAI,IAAJA,QAAI,EAAJA,GAAMoX,MACbC,SAAc,OAAJrX,SAAI,IAAJA,QAAI,EAAJA,GAAMqX,SAChBC,SAAc,OAAJtX,SAAI,IAAJA,QAAI,EAAJA,GAAMsX,SAChBC,SAAc,OAAJvX,SAAI,IAAJA,QAAI,EAAJA,GAAMuX,SAChBC,YAAiB,OAAJxX,SAAI,IAAJA,QAAI,EAAJA,GAAMwX,YACnBC,KAAU,OAAJzX,SAAI,IAAJA,QAAI,EAAJA,GAAMyX,KACZC,IAAS,OAAJ1X,SAAI,IAAJA,QAAI,EAAJA,GAAM0X,IACXlC,WAAgB,OAAJxV,SAAI,IAAJA,QAAI,EAAJA,GAAMwV,WAClBmC,WAAYjS,KAAKC,MAAMC,aAAaC,QAAQ,SAAS1E,KAGnDyW,IAASC,EAAAA,EAAAA,IAAU,CACrB1B,cAAeA,GACf2B,iBAAkBC,EAAAA,EAClBC,oBAAoB,EACpBC,SAAUzU,MAAO0U,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAClC,MAAM1L,EAAU,IACTyL,EACHG,aAAc,IAAIlF,MAGE,aADHmF,EAAAA,EAAAA,IAAO,mBAAmBlH,KAAM3E,IACxC8L,QACT1F,GAAiB,MACjBiD,KACA0C,EAAAA,GAAMC,QAAQ,GAAG3F,2BAEjB0F,EAAAA,GAAME,MAAM,GAAG5F,gBACnB,IAGF6F,GAAoBA,CAAC7Y,EAAW+E,EAAOkI,KACzC6K,GAAO7X,cAAcD,EAAW+E,GAChCgO,GAAiB/S,GACjBiT,GAAqBhG,EAAK,EAGxB6L,GAAcnV,IAChBmU,GAAOiB,cAAc,EAKzB,OAHA5M,EAAAA,EAAAA,YAAU,KACN6J,IAAe,GAChB,CAAC1E,GAAIa,MAEJzQ,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIH,EAAAA,EAAAA,MAACsX,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAG5H,GAAG,UAASzP,SAAA,EACvDC,EAAAA,EAAAA,KAACqX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,GAAIvX,UAC3BC,EAAAA,EAAAA,KAACuX,EAAAA,QAAO,CAACzX,KAAK,KAAK0X,EAAG,EAAEzX,UACf,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,QAAS,QAGxBX,EAAAA,EAAAA,KAACqX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,GAAIvX,UAC3BC,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CAAAlG,UACDH,EAAAA,EAAAA,MAACsX,EAAAA,KAAI,CAACE,IAAK,EAAErX,SAAA,EACTC,EAAAA,EAAAA,KAACqX,EAAAA,SAAQ,CAACnO,QAAS,EAAEnJ,UACjBH,EAAAA,EAAAA,MAACwH,EAAAA,IAAG,CAAArH,SAAA,EACAH,EAAAA,EAAAA,MAACwH,EAAAA,IAAG,CAACqQ,QAAS,OAAQlX,eAAgB,gBAAgBR,SAAA,EAClDC,EAAAA,EAAAA,KAACuX,EAAAA,QAAO,CAACzX,KAAK,KAAK6G,GAAI,EAAE5G,SAAC,oBAG1BH,EAAAA,EAAAA,MAACU,EAAAA,KAAI,CAACkP,GAAG,WAAUzP,SAAA,EACfH,EAAAA,EAAAA,MAAC8X,EAAAA,GAAI,CAAA3X,SAAA,EACe,eAAd0P,GAAK6C,OAAqC,OAAZ5C,SAAY,IAAZA,QAAY,EAAZA,GAAciI,UAAsB,OAAZjI,SAAY,IAAZA,QAAY,EAAZA,GAAckI,UAAsB,OAAZlI,SAAY,IAAZA,QAAY,EAAZA,GAAcmI,WAAW7X,EAAAA,EAAAA,KAAC8X,EAAAA,GAAU,CAACxW,QAAQ,UAAUU,YAAY,aAAalC,KAAK,KAAKiY,IAAE,EAACC,GAAI,IAAKC,GAAI5W,EAAAA,OAAQ6W,WAAWlY,EAAAA,EAAAA,KAACmY,EAAAA,gBAAe,IAAIpY,SAAC,aAGlOC,EAAAA,EAAAA,KAACoY,EAAAA,GAAW,KACZxY,EAAAA,EAAAA,MAACyY,EAAAA,GAAQ,CAACC,SAAU,EAAEvY,SAAA,EACF,eAAd0P,GAAK6C,OAAqC,OAAZ5C,SAAY,IAAZA,QAAY,EAAZA,GAAciI,WAAW3X,EAAAA,EAAAA,KAACuY,EAAAA,GAAQ,CAAC5W,QAASA,KAAQ2O,IAAQ,GAAOS,GAAQ,OAAQiF,GAAOQ,WAAW,EACnIhW,WAAY,QAASsG,MAAO,OAAQ0R,MAAMxY,EAAAA,EAAAA,KAACyY,EAAAA,QAAO,IAAI1Y,SAAC,SACzC,eAAd0P,GAAK6C,OAAqC,OAAZ5C,SAAY,IAAZA,QAAY,EAAZA,GAAckI,WAAW5X,EAAAA,EAAAA,KAACuY,EAAAA,GAAQ,CAAC5W,QAASA,KAAQ2O,IAAQ,GAAOS,GAAQ,OAAO,EAAIvQ,WAAY,QAASgY,MAAMxY,EAAAA,EAAAA,KAAC0Y,EAAAA,SAAQ,IAAI3Y,SAAC,UAC/JC,EAAAA,EAAAA,KAACuY,EAAAA,GAAQ,CAAC5W,QA1ItCgX,KAChB/H,IAAW,GACX,MAAMgI,EAAUC,SAASC,eAAe,WAClCC,EAAUF,SAASC,eAAe,YAEpCF,GACAG,EAAQ1S,MAAMoR,QAAU,OACxBuB,MACKC,KAAKL,GACLM,IAAI,CACDC,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBC,SAAU,kBAAkBpW,MAASE,OAAO,oBAC5CmW,MAAO,CAAEhb,KAAM,OAAQib,QAAS,KAChCC,YAAa,CAAEC,MAAO,EAAGC,SAAS,EAAMC,YAAY,GACpDC,MAAO,CAAEC,KAAM,KAAM1W,OAAQ,SAAU2W,YAAa,cAEvDC,OAAOC,MAAK,KACTnJ,IAAW,GACXmI,EAAQ1S,MAAMoR,QAAU,EAAE,MAIlC3V,QAAQgV,MAAM,wCACdlG,IAAW,GACf,EAkH4EpQ,WAAY,QAASgY,MAAMxY,EAAAA,EAAAA,KAACga,EAAAA,IAAS,IAAKvC,QAAS,OAAQpR,MAAO,CAAE7F,WAAY,UAAWT,SAAC,kBAE5G,eAAd0P,GAAK6C,OAAqC,OAAZ5C,SAAY,IAAZA,QAAY,EAAZA,GAAcmI,WAAWjY,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACrDC,EAAAA,EAAAA,KAACoY,EAAAA,GAAW,KACZpY,EAAAA,EAAAA,KAACuY,EAAAA,GAAQ,CAAC/X,WAAY,QAASmB,QAASA,IAAM+O,IAAmB,GAAO5J,MAAO,MAAO0R,MAAMxY,EAAAA,EAAAA,KAACka,EAAAA,WAAU,IAAIna,SAAC,qBAIxHC,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACI,UAAUzB,EAAAA,EAAAA,KAACma,EAAAA,IAAc,IAAKra,KAAK,KAAKwB,QAAQ,QAAQK,QAASA,IAAMkP,IAAU,GAAG9Q,SAAE,gBAKtGC,EAAAA,EAAAA,KAACoa,EAAAA,EAAU,UAInBxa,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,qBAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAO,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMic,YAAkB,OAAJjc,SAAI,IAAJA,QAAI,EAAJA,GAAMic,YAAc,YAEpDza,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,YAEzC,UAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACF9K,GAAG,OACHrE,KAAK,QACL9M,KAAK,OACLsL,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAO3V,MACrB+E,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARrI,EAANqI,GAAQyE,cAAM,IAAA9M,GAAdA,EAAgBhN,OAAe,OAANqV,SAAM,IAANA,IAAe,QAATpI,EAANoI,GAAQ0E,eAAO,IAAA9M,GAAfA,EAAiBjN,MAAQ,UAAY,KAC3Ega,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO9Z,SAAe,OAANqV,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ/Z,SAAe,OAANqV,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO9Z,cAGpGX,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,QAAa,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,MAAO,SAASZ,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMuC,MAAY,OAAJvC,SAAI,IAAJA,QAAI,EAAJA,GAAMuC,MAAQ,YAGtHf,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,iBAEvD,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMoW,YACFxU,EAAAA,EAAAA,KAAC6a,EAAAA,GAAI,CAACC,IAAqB,OAAjBjL,SAAiB,IAAjBA,QAAiB,EAAjBA,GAAmB0C,OAAQ,sBAA0B,OAAJnU,SAAI,IAAJA,QAAI,EAAJA,GAAMoW,aAAazU,UAC1EC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAwB,OAAjB+I,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAwB,OAAjB+I,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,WAAa,iBAAkBX,eAAiC,OAAjB/B,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,YAAc,SAAYlM,MAAO,CAAEwL,OAAQ,WAAY9R,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM2c,eAAqB,OAAJ3c,SAAI,IAAJA,QAAI,EAAJA,GAAM2c,eAAiB,WAG9S/a,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAwB,OAAjB+I,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAwB,OAAjB+I,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,WAAa,iBAAkBX,eAAiC,OAAjB/B,SAAiB,IAAjBA,IAAAA,GAAmB0C,KAAO,YAAc,SAAWxS,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM2c,eAAqB,OAAJ3c,SAAI,IAAJA,QAAI,EAAJA,GAAM2c,eAAiB,YAIxRnb,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,kBAEzC,eAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIH,EAAAA,EAAAA,MAACob,EAAAA,GAAM,CACH/X,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAO7B,WACtBtJ,KAAK,aACLxB,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBC,OAAQxD,GACRrQ,GAAU,OAANqP,SAAM,IAANA,IAAAA,GAAQyE,OAAOhG,YAAoB,OAANuB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQjG,gBAAawG,EAAY,OAC1EjU,WAAW,MACXkU,YAAa,cACbxV,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAOhG,YAAoB,OAANuB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQjG,WAAa,UAAY,KAAK1U,SAAA,EAExFC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,QAAOlD,SAAE,WACvBC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,cAAalD,SAAE,iBAC7BC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,YAAWlD,SAAE,eAC3BC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,UAASlD,SAAE,aACzBC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,YAAWlD,SAAE,eAC3BC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,kBAAiBlD,SAAE,qBACjCC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,cAAalD,SAAE,iBAC7BC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,cAAalD,SAAE,oBAEjCH,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOhG,cAAoB,OAANuB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQjG,cAAoB,OAANuB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOhG,mBAG9GzU,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,aAAkB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMqW,WAAY,eAAe1U,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMqW,WAAiB,OAAJrW,SAAI,IAAJA,QAAI,EAAJA,GAAMqW,WAAa,YAGhJ7U,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,qBAEzC,kBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIH,EAAAA,EAAAA,MAACob,EAAAA,GAAM,CACH/X,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAO5B,cACtBvJ,KAAK,gBACLxB,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBC,OAAQxD,GACRrQ,GAAU,OAANqP,SAAM,IAANA,IAAAA,GAAQyE,OAAO/F,eAAuB,OAANsB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQhG,mBAAgBuG,EAAY,OAChFjU,WAAW,MACXkU,YAAa,iBACbxV,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAO/F,eAAuB,OAANsB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQhG,cAAgB,UAAY,KAAK3U,SAAA,EAE9FC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,eAAclD,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,WAAUlD,SAAC,iBAE7BH,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO/F,iBAAuB,OAANsB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQhG,iBAAuB,OAANsB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO/F,sBAGpH1U,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,gBAAqB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMsW,cAAe,kBAAkB3U,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMsW,cAAoB,OAAJtW,SAAI,IAAJA,QAAI,EAAJA,GAAMsW,cAAgB,YAI/J9U,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,gBAEzC,eAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,aACL9M,KAAK,OACLsL,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAOkY,IAAMnF,GAAOM,OAAO3B,YAAYzR,OAAO,cAC9CwC,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARnI,EAANmI,GAAQyE,cAAM,IAAA5M,GAAdA,EAAgB8G,YAAoB,OAANqB,SAAM,IAANA,IAAe,QAATlI,EAANkI,GAAQ0E,eAAO,IAAA5M,GAAfA,EAAiB6G,WAAa,UAAY,KACrFgG,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO9F,cAAoB,OAANqB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ/F,cAAoB,OAANqB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO9F,mBAG9G3U,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,aAAkB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMuW,WAAY,eAAe5U,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMuW,WAAiB,OAAJvW,SAAI,IAAJA,QAAI,EAAJA,GAAMuW,WAAa,YAGhJ/U,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,kBAEzC,iBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIH,EAAAA,EAAAA,MAACob,EAAAA,GAAM,CACH/X,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOzB,aACtB1J,KAAK,eACLxB,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBC,OAAQxD,GACRrQ,GAAU,OAANqP,SAAM,IAANA,IAAAA,GAAQyE,OAAO5F,cAAsB,OAANmB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ7F,kBAAeoG,EAAY,OAC9EjU,WAAW,MACXkU,YAAa,gBACbxV,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAO5F,cAAsB,OAANmB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ7F,aAAe,UAAY,KAAK9U,SAAA,EAE5FC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,UAASlD,SAAE,aACzBC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,UAASlD,SAAE,gBAE7BH,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO5F,gBAAsB,OAANmB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ7F,gBAAsB,OAANmB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO5F,qBAGlH7U,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,eAAoB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMyW,aAAc,iBAAiB9U,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMyW,aAAmB,OAAJzW,SAAI,IAAJA,QAAI,EAAJA,GAAMyW,aAAe,YAG1JjV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,oBAEzC,mBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACgb,EAAAA,GAAM,CACH/X,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOxB,eACtB3J,KAAK,iBACLxB,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBC,OAAQxD,GACRrQ,GAAU,OAANqP,SAAM,IAANA,IAAAA,GAAQyE,OAAO3F,gBAAwB,OAANkB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ5F,oBAAiBmG,EAAY,OAClFjU,WAAW,MACXkU,YAAa,kBACbxV,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAO3F,gBAAwB,OAANkB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ5F,eAAiB,UAAY,KAAK/U,UAEhGC,EAAAA,EAAAA,KAAA,UAAQiD,MAAM,WAAUlD,SAAC,gBAE7BH,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO3F,kBAAwB,OAANkB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ5F,kBAAwB,OAANkB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO3F,uBAGtH9U,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,iBAAsB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAM0W,eAAgB,mBAAmB/U,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM0W,eAAqB,OAAJ1W,SAAI,IAAJA,QAAI,EAAJA,GAAM0W,eAAiB,YAGpKlV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,oBAEzC,mBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACkM,EAAAA,EAAQ,CACLnF,SAAS,KACT9D,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOtB,eACtB7J,KAAK,iBACLiQ,OAAQ,OACRZ,OAAQxD,GACRrN,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBW,YAAY,kBACZlU,WAAW,MACXtB,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAOzF,gBAAwB,OAANgB,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ1F,eAAiB,UAAY,QAE/FpV,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOzF,kBAAwB,OAANgB,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ1F,kBAAwB,OAANgB,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOzF,uBAGtHhV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,iBAAsB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAM4W,eAAgB,mBAAoB3O,MAAO,CAAE1G,MAAO,SAAUI,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM4W,eAAqB,OAAJ5W,SAAI,IAAJA,QAAI,EAAJA,GAAM4W,eAAiB,YAG/LpV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,UAEzC,UAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACkM,EAAAA,EAAQ,CACLnF,SAAS,KACT9D,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOrB,MACtB9J,KAAK,QACLiQ,OAAQ,OACRZ,OAAQxD,GACRrN,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBW,YAAY,QACZlU,WAAW,MACXtB,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAOxF,OAAe,OAANe,SAAM,IAANA,IAAAA,GAAQ0E,QAAQzF,MAAQ,UAAY,QAE7ErV,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOxF,SAAe,OAANe,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQzF,SAAe,OAANe,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOxF,cAGpGjV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,QAAa,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAM6W,MAAO,SAAU5O,MAAO,CAAE1G,MAAO,SAAUI,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM6W,MAAY,OAAJ7W,SAAI,IAAJA,QAAI,EAAJA,GAAM6W,MAAQ,YAGjJrV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,gBAEzC,gBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACkM,EAAAA,EAAQ,CACLnF,SAAS,KACT9D,MAAa,OAAN+S,SAAM,IAANA,QAAM,EAANA,GAAQM,OAAOzT,YACtBsI,KAAK,cACLiQ,OAAQ,OACRZ,OAAQxD,GACRrN,SAAgB,OAANqM,SAAM,IAANA,QAAM,EAANA,GAAQuE,aAClBW,YAAY,cACZlU,WAAW,MACXtB,YAAmB,OAANsQ,SAAM,IAANA,IAAAA,GAAQyE,OAAO5X,aAAqB,OAANmT,SAAM,IAANA,IAAAA,GAAQ0E,QAAQ7X,YAAc,UAAY,QAEzFjD,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO5X,eAAqB,OAANmT,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQ7X,eAAqB,OAANmT,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO5X,oBAGhH7C,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,cAAmB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMyE,YAAa,eAAgBwD,MAAO,CAAE1G,MAAO,SAAUI,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMyE,YAAkB,OAAJzE,SAAI,IAAJA,QAAI,EAAJA,GAAMyE,YAAc,YAG/KjD,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,YAEvD,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMkV,SACFtT,EAAAA,EAAAA,KAAC6a,EAAAA,GAAI,CAACC,IAAiB,OAAbnL,SAAa,IAAbA,QAAa,EAAbA,GAAe4C,OAAQ,gBAAoB,OAAJnU,SAAI,IAAJA,QAAI,EAAJA,GAAMkV,UAAUvT,UAC7DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAoB,OAAb6I,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAoB,OAAb6I,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,WAAa,iBAAkBX,eAA6B,OAAbjC,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,YAAc,SAAYlM,MAAO,CAAEwL,OAAQ,WAAY9R,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMmV,YAAkB,OAAJnV,SAAI,IAAJA,QAAI,EAAJA,GAAMmV,YAAc,WAG5RvT,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAoB,OAAb6I,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAoB,OAAb6I,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,WAAa,iBAAkBX,eAA6B,OAAbjC,SAAa,IAAbA,IAAAA,GAAe4C,KAAO,YAAc,SAAWxS,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMmV,YAAkB,OAAJnV,SAAI,IAAJA,QAAI,EAAJA,GAAMmV,YAAc,YAItQ3T,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,YAEvD,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMsU,SACF1S,EAAAA,EAAAA,KAAC6a,EAAAA,GAAI,CAACC,IAAiB,OAAblL,SAAa,IAAbA,QAAa,EAAbA,GAAe2C,OAAQ,gBAAoB,OAAJnU,SAAI,IAAJA,QAAI,EAAJA,GAAMsU,UAAU3S,UAC7DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAoB,OAAb8I,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAoB,OAAb8I,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,WAAa,iBAAkBX,eAA6B,OAAbhC,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,YAAc,SAAYlM,MAAO,CAAEwL,OAAQ,WAAY9R,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMuU,YAAkB,OAAJvU,SAAI,IAAJA,QAAI,EAAJA,GAAMuU,YAAc,WAG5R3S,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAoB,OAAb8I,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,WAAa,iBAAkBZ,GAAI,CAAE,UAAW,CAAE7K,MAAoB,OAAb8I,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,WAAa,iBAAkBX,eAA6B,OAAbhC,SAAa,IAAbA,IAAAA,GAAe2C,KAAO,YAAc,SAAWxS,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMuU,YAAkB,OAAJvU,SAAI,IAAJA,QAAI,EAAJA,GAAMuU,YAAc,YAItQ/S,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,mBAEzC,kBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,gBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAO5X,cACrBgH,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARjI,EAANiI,GAAQyE,cAAM,IAAA1M,GAAdA,EAAgBrP,eAAuB,OAANsX,SAAM,IAANA,IAAe,QAAThI,EAANgI,GAAQ0E,eAAO,IAAA1M,GAAfA,EAAiBtP,cAAgB,UAAY,KAC3Fic,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO/b,iBAAuB,OAANsX,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQhc,iBAAuB,OAANsX,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAO/b,sBAGpHsB,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,gBAAqB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMM,cAAe,kBAAkBqB,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMM,cAAoB,OAAJN,SAAI,IAAJA,QAAI,EAAJA,GAAMM,cAAgB,YAG/JkB,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,oBAEzC,mBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,iBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOpB,eACrBxP,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAAR/H,EAAN+H,GAAQyE,cAAM,IAAAxM,GAAdA,EAAgBiH,gBAAwB,OAANc,SAAM,IAANA,IAAe,QAAT9H,EAAN8H,GAAQ0E,eAAO,IAAAxM,GAAfA,EAAiBgH,eAAiB,UAAY,KAC7FyF,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOvF,kBAAwB,OAANc,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQxF,kBAAwB,OAANc,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOvF,uBAGtHlV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,iBAAsB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAM8W,eAAgB,mBAAmBnV,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM8W,eAAqB,OAAJ9W,SAAI,IAAJA,QAAI,EAAJA,GAAM8W,eAAiB,YAIpKtV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,iBAGzC,gBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,cACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAO/X,YACrBmH,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAAR7H,EAAN6H,GAAQyE,cAAM,IAAAtM,GAAdA,EAAgB5P,aAAqB,OAANyX,SAAM,IAANA,IAAe,QAAT5H,EAAN4H,GAAQ0E,eAAO,IAAAtM,GAAfA,EAAiB7P,YAAc,UAAY,KACvFoc,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOlc,eAAqB,OAANyX,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQnc,eAAqB,OAANyX,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOlc,oBAGhHyB,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,cAAmB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMG,YAAa,gBAAgBwB,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMG,YAAkB,OAAJH,SAAI,IAAJA,QAAI,EAAJA,GAAMG,YAAc,YAGrJqB,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,kBAGzC,iBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,eACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOnB,aACrBzP,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAAR3H,EAAN2H,GAAQyE,cAAM,IAAApM,GAAdA,EAAgB8G,cAAsB,OAANa,SAAM,IAANA,IAAe,QAAT1H,EAAN0H,GAAQ0E,eAAO,IAAApM,GAAfA,EAAiB6G,aAAe,UAAY,KACzFwF,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOtF,gBAAsB,OAANa,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQvF,gBAAsB,OAANa,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOtF,qBAGlHnV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,eAAoB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAM+W,aAAc,iBAAiBpV,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAM+W,aAAmB,OAAJ/W,SAAI,IAAJA,QAAI,EAAJA,GAAM+W,aAAe,YAG1JvV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,kBAEzC,iBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,eACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOhY,aACrBoH,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARzH,EAANyH,GAAQyE,cAAM,IAAAlM,GAAdA,EAAgBjQ,cAAsB,OAAN0X,SAAM,IAANA,IAAe,QAATxH,EAANwH,GAAQ0E,eAAO,IAAAlM,GAAfA,EAAiBlQ,aAAe,UAAY,KACzFqc,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOnc,gBAAsB,OAAN0X,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQpc,gBAAsB,OAAN0X,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOnc,qBAGlH0B,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,eAAoB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAME,aAAc,iBAAiByB,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAME,aAAmB,OAAJF,SAAI,IAAJA,QAAI,EAAJA,GAAME,aAAe,YAG1JsB,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,mBAEzC,kBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,gBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOlB,cACrB1P,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARvH,EAANuH,GAAQyE,cAAM,IAAAhM,GAAdA,EAAgB2G,eAAuB,OAANY,SAAM,IAANA,IAAe,QAATtH,EAANsH,GAAQ0E,eAAO,IAAAhM,GAAfA,EAAiB0G,cAAgB,UAAY,KAC3FuF,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOrF,iBAAuB,OAANY,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQtF,iBAAuB,OAANY,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOrF,sBAGpHpV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,gBAAqB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMgX,cAAe,kBAAkBrV,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMgX,cAAoB,OAAJhX,SAAI,IAAJA,QAAI,EAAJA,GAAMgX,cAAgB,YAG/JxV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,wBAEzC,sBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,oBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAO9X,kBACrBkH,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARrH,EAANqH,GAAQyE,cAAM,IAAA9L,GAAdA,EAAgBnQ,mBAA2B,OAANwX,SAAM,IAANA,IAAe,QAATpH,EAANoH,GAAQ0E,eAAO,IAAA9L,GAAfA,EAAiBpQ,kBAAoB,UAAY,KACnGmc,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOjc,qBAA2B,OAANwX,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQlc,qBAA2B,OAANwX,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOjc,0BAG5HwB,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,oBAAyB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMI,kBAAmB,uBAAuBuB,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMI,kBAAwB,OAAJJ,SAAI,IAAJA,QAAI,EAAJA,GAAMI,kBAAoB,YAGpLoB,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,yBAEzC,uBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,qBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOjB,mBACrB3P,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARnH,EAANmH,GAAQyE,cAAM,IAAA5L,GAAdA,EAAgBwG,oBAA4B,OAANW,SAAM,IAANA,IAAe,QAATlH,EAANkH,GAAQ0E,eAAO,IAAA5L,GAAfA,EAAiBuG,mBAAqB,UAAY,KACrGsF,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOpF,sBAA4B,OAANW,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQrF,sBAA4B,OAANW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOpF,2BAG9HrV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,qBAA0B,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMiX,mBAAoB,wBAAwBtV,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMiX,mBAAyB,OAAJjX,SAAI,IAAJA,QAAI,EAAJA,GAAMiX,mBAAqB,YAGzLzV,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,oBAEzC,mBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,iBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAO7X,eACrBiH,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAARjH,EAANiH,GAAQyE,cAAM,IAAA1L,GAAdA,EAAgBtQ,gBAAwB,OAANuX,SAAM,IAANA,IAAe,QAAThH,EAANgH,GAAQ0E,eAAO,IAAA1L,GAAfA,EAAiBvQ,eAAiB,UAAY,KAC7Fkc,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOhc,kBAAwB,OAANuX,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQjc,kBAAwB,OAANuX,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOhc,uBAGtHuB,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,iBAAsB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMK,eAAgB,mBAAmBsB,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMK,eAAqB,OAAJL,SAAI,IAAJA,QAAI,EAAJA,GAAMK,eAAiB,YAGpKmB,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,qBAEzC,oBAAlBiR,IACIpR,EAAAA,EAAAA,MAAAqa,EAAAA,SAAA,CAAAla,SAAA,EACIC,EAAAA,EAAAA,KAACsa,EAAAA,MAAK,CACFnP,KAAK,kBACLxB,SAAUqM,GAAOuE,aACjBC,OAAQxD,GACR/T,MAAO+S,GAAOM,OAAOhB,gBACrB5P,YAAmB,OAANsQ,SAAM,IAANA,IAAc,QAAR/G,EAAN+G,GAAQyE,cAAM,IAAAxL,GAAdA,EAAgBqG,iBAAyB,OAANU,SAAM,IAANA,IAAe,QAAT9G,EAAN8G,GAAQ0E,eAAO,IAAAxL,GAAfA,EAAiBoG,gBAAkB,UAAY,KAC/FqF,WAAS,KAEb/a,EAAAA,EAAAA,MAACiH,EAAAA,KAAI,CAACF,GAAG,OAAOG,MAAO,MAAM/G,SAAA,CAAC,KAAQ,OAANiW,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOnF,mBAAyB,OAANU,SAAM,IAANA,QAAM,EAANA,GAAQ0E,QAAQpF,mBAAyB,OAANU,SAAM,IAANA,QAAM,EAANA,GAAQyE,OAAOnF,wBAGxHtV,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAC+T,cAAeA,IAAM7D,GAAkB,kBAAuB,OAAJ3Y,SAAI,IAAJA,QAAI,EAAJA,GAAMkX,gBAAiB,oBAAoBvV,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMkX,gBAAsB,OAAJlX,SAAI,IAAJA,QAAI,EAAJA,GAAMkX,gBAAkB,YAIzK1V,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,iBAEvD,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMwW,YACF5U,EAAAA,EAAAA,KAAC6a,EAAAA,GAAI,CAACC,GAAkB,eAAdrL,GAAK6C,MAAyB,aAAiB,OAAJlU,SAAI,IAAJA,QAAI,EAAJA,GAAMwW,aAAa7U,UACpEC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAqB,eAAd2I,GAAK6C,KAAwB,WAAa,iBAAkBX,GAAI,CAAE,UAAW,CAAE7K,MAAqB,eAAd2I,GAAK6C,KAAwB,WAAa,iBAAkBV,eAA8B,eAAdnC,GAAK6C,KAAwB,YAAc,SAAYjM,MAAO,CAAEwL,OAAQ,WAAY9R,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMid,eAAqB,OAAJjd,SAAI,IAAJA,QAAI,EAAJA,GAAMid,eAAiB,WAGvTrb,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACC,MAAqB,eAAd2I,GAAK6C,KAAwB,WAAa,iBAAkBX,GAAI,CAAE,UAAW,CAAE7K,MAAqB,eAAd2I,GAAK6C,KAAwB,WAAa,iBAAkBV,eAA8B,eAAdnC,GAAK6C,KAAwB,YAAc,SAAWvS,SAAM,OAAJ3B,SAAI,IAAJA,IAAAA,GAAMid,eAAqB,OAAJjd,SAAI,IAAJA,QAAI,EAAJA,GAAMid,eAAiB,YAIjSzb,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,WAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAE,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAMoX,MAAY,OAAJpX,SAAI,IAAJA,QAAI,EAAJA,GAAMoX,MAAQ,YAE3D5V,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,cAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAG,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,YAAe,OAAJlE,SAAI,IAAJA,QAAI,EAAJA,GAAMqX,WAAY,YAElD7V,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,cAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAE,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAMsX,SAAe,OAAJtX,SAAI,IAAJA,QAAI,EAAJA,GAAMsX,SAAW,YAEjE9V,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,cAC/DC,EAAAA,EAAAA,KAAAia,EAAAA,SAAA,CAAAla,SAAG,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAMuX,SAAe,OAAJvX,SAAI,IAAJA,QAAI,EAAJA,GAAMuX,SAAW,YAE7D/V,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,kBAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAG,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAMwX,YAAkB,OAAJxX,SAAI,IAAJA,QAAI,EAAJA,GAAMwX,YAAc,YAExEhW,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,SAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAG,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAM0X,IAAU,OAAJ1X,SAAI,IAAJA,QAAI,EAAJA,GAAM0X,IAAM,YAExDlW,EAAAA,EAAAA,MAACyX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,EAAGxN,GAAI,GAAI/J,SAAA,EAClCC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAACE,SAAS,KAAKC,WAAW,OAAOF,MAAO,iBAAiB/G,SAAC,iBAC/DC,EAAAA,EAAAA,KAAC6G,EAAAA,KAAI,CAAA9G,SAAE,GAAO,OAAJ3B,SAAI,IAAJA,QAAI,EAAJA,GAAMkE,WAAe,OAAJlE,SAAI,IAAJA,IAAAA,GAAMwV,WAAiB,OAAJxV,SAAI,IAAJA,QAAI,EAAJA,GAAMwV,WAAa,sBAOtE,OAAd9D,SAAc,IAAdA,QAAc,EAAdA,GAAgByC,QACbvS,EAAAA,EAAAA,KAACqX,EAAAA,SAAQ,CAACnO,QAAS,CAAEoO,KAAM,IAAMgE,GAAI,EAAEvb,UACnCC,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CAACsV,SAAU,SAASxb,UACrBC,EAAAA,EAAAA,KAACU,EAAAA,EAAgB,CACbC,MAAO,WACPhC,SAAUA,GACViC,WAA2B,OAAf0Q,SAAe,IAAfA,GAAAA,GAAmB,GAC/BzQ,QAAoB,OAAXoP,SAAW,IAAXA,GAAAA,GAAe,GACxBnP,UAAsB,OAAXmP,SAAW,IAAXA,GAAAA,GAAe,GAC1BlP,eAAe,EACfsK,kBAAmB,GACnBmQ,UAAU,EACVva,YAAY,EACZD,YAAY,EACZya,QAAQ,UAOP,OAAZ/L,SAAY,IAAZA,QAAY,EAAZA,GAAckI,UAAsB,OAAZlI,SAAY,IAAZA,QAAY,EAAZA,GAAcmI,SAAyB,gBAAX,OAAJpI,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,SAA0BtS,EAAAA,EAAAA,KAACiG,EAAAA,EAAI,CAACqV,GAAI,EAAEvb,UACzFC,EAAAA,EAAAA,KAACkX,EAAAA,KAAI,CAACC,gBAAgB,iBAAiBC,IAAK,EAAErX,UAC1CC,EAAAA,EAAAA,KAACqX,EAAAA,SAAQ,CAACqE,SAAU,EAAE3b,UAClBH,EAAAA,EAAAA,MAACU,EAAAA,KAAI,CAACC,eAAgB,QAAQR,SAAA,GACZ,OAAZ2P,SAAY,IAAZA,QAAY,EAAZA,GAAckI,SAAyB,gBAAX,OAAJnI,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,SAA0BtS,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACvB,KAAK,KAAK6B,QAASA,KAAQ2O,IAAQ,GAAOS,GAAQ,OAAO,EAAItP,UAAUzB,EAAAA,EAAAA,KAAC0Y,EAAAA,SAAQ,IAAKV,GAAI,IAAK1W,QAAQ,UAAUU,YAAY,QAAOjC,SAAC,WACxL,OAAZ2P,SAAY,IAAZA,QAAY,EAAZA,GAAcmI,SAAyB,gBAAX,OAAJpI,SAAI,IAAJA,QAAI,EAAJA,GAAM6C,SAA0BtS,EAAAA,EAAAA,KAACqB,EAAAA,OAAM,CAACvB,KAAK,KAAKuG,MAAO,CAAEsV,WAAY,WAAaha,QAASA,IAAM+O,IAAmB,GAAOjP,UAAUzB,EAAAA,EAAAA,KAACka,EAAAA,WAAU,IAAKlY,YAAY,MAAKjC,SAAE,qBAMxNC,EAAAA,EAAAA,KAAC4b,EAAAA,EAAO,CAAC3d,OAAQoS,GAAMvQ,KAAK,KAAK9B,QAASA,IAAMsS,IAAQ,GAAQuL,UAAW7d,GAAS8d,WAAc,OAAFtM,SAAE,IAAFA,IAAAA,GAAI5J,MAAU,OAAF4J,SAAE,IAAFA,IAAS,QAAPL,EAAFK,GAAI5J,aAAK,IAAAuJ,GAAM,QAANC,EAATD,EAAW4M,YAAI,IAAA3M,GAAe,QAAfC,GAAfD,EAAiB4M,qBAAa,IAAA3M,QAA5B,EAAFA,GAAgC9P,IAAMiQ,GAAInR,KAAMA,MAC5J2B,EAAAA,EAAAA,KAACic,EAAAA,EAAiB,CAAChe,OAAQwS,GAAiBzS,QAASA,IAAM0S,IAAmB,GAAQrS,KAAK,UAAU6d,iBA1oBjFta,UACxB,IAE4B,aADHua,EAAAA,EAAAA,IAAc,wBAAyBC,IAC/CzF,SACT9F,GAAS,WACT+F,EAAAA,GAAMC,QAAQ,8BACdnG,IAAmB,GAE3B,CAAE,MAAOoG,GACLhV,QAAQC,IAAI+U,GACZF,EAAAA,GAAME,MAAM,eAEhB,GA8nBgJsF,IAAK,CAAC5M,QAGhJ,C","sources":["components/commonTableModel/AccountModel.js","components/commonTableModel/UserModel.js","schema/opprtunitiesSchema.js","components/commonTableModel/OpprtunityModel.js","components/commonTableModel/Contact.js","components/commonTableModel/ContactModel.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","views/admin/quotes/View.js"],"sourcesContent":["import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\nimport { fetchAccountData } from '../../redux/slices/accountSlice';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AccountModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data, type, billingState, billingCity, billingPostalCode, billingCountry, billingStreet } = props\r\n    const title = \"Account\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const accountData = data?.length > 0 && data?.find((item) => item?._id === selectedValues)\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            // if (type === \"quotes\") {\r\n            //     setFieldValue(billingStreet, accountData?.billingStreet)\r\n            //     setFieldValue(billingState, accountData?.billingState)\r\n            //     setFieldValue(billingCity, selectedValues?.billingCity)\r\n            //     setFieldValue(billingPostalCode, selectedValues?.billingPostalcode)\r\n            //     setFieldValue(billingCountry, selectedValues?.billingCountry)\r\n            // }\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        { Header: 'Account Name', accessor: 'name' },\r\n        { Header: 'Office Phone', accessor: 'officePhone', },\r\n        { Header: 'Fax', accessor: 'fax', },\r\n        { Header: 'Email Address', accessor: 'emailAddress', },\r\n    ];\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     const result = await dispatch(fetchAccountData())\r\n\r\n    //     if (result.payload.status === 200) {\r\n    //         setData(result?.payload?.data);\r\n    //     } else {\r\n    //         toast.error(\"Failed to fetch data\", \"error\");\r\n    //     }\r\n    //     setIsLoding(false)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Account</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={tableColumns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default AccountModel\r\n","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { fetchLeadCustomFiled } from '../../redux/slices/leadCustomFiledSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\n\r\nconst UserModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data, isLoding, setIsLoding } = props\r\n    const title = \"Users\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    // const [isLoding, setIsLoding] = useState(false);\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'email Id', accessor: 'username',\r\n        },\r\n        { Header: \"first Name\", accessor: \"firstName\", },\r\n        { Header: \"last Name\", accessor: \"lastName\", },\r\n        { Header: \"role\", accessor: \"role\", },\r\n    ];\r\n\r\n    // const [columns, setColumns] = useState([...tableColumns]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     let result = await getApi('api/user/');\r\n    //     setData(result?.data?.user);\r\n    //     setIsLoding(false)\r\n    // }\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select User</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={tableColumns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default UserModel\r\n","import * as yup from 'yup'\r\n\r\nexport const opprtunitiesSchema = yup.object({\r\n    opportunityName: yup.string().required(\"Opportunity Name Is required\"),\r\n    type: yup.string(),\r\n    leadSource: yup.string(),\r\n    currency: yup.string(),\r\n    opportunityAmount: yup.string().required(\"Opportunity Amount Is required\"),\r\n    amount: yup.string(),\r\n    expectedCloseDate: yup.string().required(\"Expected Close Date Is required\"),\r\n    nextStep: yup.string(),\r\n    salesStage: yup.string().required(\"Sales Stage Is required\"),\r\n    probability: yup.string(),\r\n    description: yup.string(),\r\n    createBy: yup.string(),\r\n})","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\nimport { fetchAccountData } from '../../redux/slices/accountSlice';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nconst OpprtunityModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data } = props\r\n    const title = \"Opprtunities\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Opportunity Name', accessor: 'opportunityName',\r\n        },\r\n        {\r\n            Header: 'Account Name', accessor: 'accountName'\r\n        },\r\n        {\r\n            Header: 'Opportunity Amount', accessor: 'opportunityAmount',\r\n        },\r\n        {\r\n            Header: 'Expected Close Date', accessor: 'expectedCloseDate', cell: (cell) => (\r\n                <div>{moment(cell?.value).format(\"YYYY-MM-DD\")}</div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Sales Stage', accessor: 'salesStage',\r\n        },\r\n\r\n    ];\r\n\r\n    const [columns, setColumns] = useState([...tableColumns]);\r\n    const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     const result = await dispatch(fetchAccountData())\r\n\r\n    //     if (result.payload.status === 200) {\r\n    //         setData(result?.payload?.data);\r\n    //     } else {\r\n    //         toast.error(\"Failed to fetch data\", \"error\");\r\n    //     }\r\n    //     setIsLoding(false)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Opportunity</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={columns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default OpprtunityModel\r\n","import {\r\n  Box, Checkbox,\r\n  Flex, Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\n\r\n// Custom components\r\nimport Card from \"components/card/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport Pagination from \"components/pagination/Pagination\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\n\r\nexport default function ContactTable(props) {\r\n  const { columnsData, tableData, title, type, selectedValues, setSelectedValues } = props;\r\n\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n  const data = useMemo(() => tableData, [tableData]);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n  const [gopageValue, setGopageValue] = useState()\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n  if (pageOptions.length < gopageValue) {\r\n    setGopageValue(pageOptions.length)\r\n  }\r\n\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n\r\n  const handleCheckboxChange = (event, value) => {\r\n    if (type === \"multi\") {\r\n      if (event.target.checked) {\r\n        setSelectedValues((prevSelectedValues) => [...prevSelectedValues, value]);\r\n      } else {\r\n        setSelectedValues((prevSelectedValues) =>\r\n          prevSelectedValues.filter((selectedValue) => selectedValue !== value)\r\n        );\r\n      }\r\n    } else {\r\n      if (event.target.checked) {\r\n        setSelectedValues(value);\r\n      } else {\r\n        setSelectedValues(null);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Card\r\n      direction='column'\r\n      w='100%'\r\n      px='0px'\r\n      style={{ border: '1px solid gray.200' }}\r\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n      <Flex px='25px' justify='space-between' mb='20px' align='center'>\r\n        <Text\r\n          color={textColor}\r\n          fontSize='22px'\r\n          fontWeight='700'\r\n          lineHeight='100%'>\r\n          {title}  (<CountUpComponent key={data?.length} targetNumber={data?.length} />)\r\n        </Text>\r\n      </Flex>\r\n      <Box overflowY={'auto'} className=\"table-container-property\" >\r\n+\r\n+        <Table  {...getTableProps()} variant='simple' color='gray.500' mb='24px'>\r\n          <Thead zIndex={1}>\r\n            {headerGroups?.map((headerGroup, index) => (\r\n              <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                {headerGroup.headers.map((column, index) => (\r\n\r\n                  <Th\r\n                    {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                    pe=\"10px\"\r\n                    key={index}\r\n                    borderColor={borderColor}\r\n                  >\r\n                    <Flex\r\n                      align=\"center\"\r\n                      justifyContent={column.center ? \"center\" : \"start\"}\r\n                      fontSize={{ sm: \"14px\", lg: \"16px\" }}\r\n                      color=\" secondaryGray.900\"\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\", marginRight: \"8px\" }}>\r\n                        {column.render(\"Header\")}\r\n                      </span>\r\n\r\n                      {column.isSortable !== false && (\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                        </span>\r\n                      )}\r\n                    </Flex>\r\n                  </Th>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Thead>\r\n          <Tbody  {...getTableBodyProps()}>\r\n            {data?.length === 0 && (\r\n +\r\n +             <Tr>\r\n                <Td colSpan={columns.length}>\r\n                  img\r\n                </Td>\r\n              </Tr>\r\n            )}\r\n            {page?.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <Tr {...row?.getRowProps()} key={index}>\r\n                  {row?.cells?.map((cell, index) => {\r\n                    let data = \"\";\r\n                    if (cell?.column.Header === \"#\") {\r\n                      data = (\r\n                        <Flex align=\"center\">\r\n                          {type === \"multi\" ? <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues.includes(cell?.value)} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" /> :\r\n                            <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues === cell?.value} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" />}\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.row?.index + 1}\r\n                          </Text>\r\n                        </Flex>\r\n                      );\r\n                    } else if (cell?.column.Header === \"title\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"first Name\") {\r\n                      data = (\r\n                        // <Link to={`/contactView/${cell?.row?.original._id}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          // sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                        // </Link>\r\n                      );\r\n                    } else if (cell?.column.Header === \"last Name\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"phone Number\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Email Address\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"physical Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"mailing Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Contact Method\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Td\r\n                        {...cell?.getCellProps()}\r\n                        key={index}\r\n                        fontSize={{ sm: \"14px\" }}\r\n                        minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                        borderColor='transparent'>\r\n                        {data}\r\n                      </Td>\r\n                    );\r\n                  })}\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      {data?.length > 5 && <Pagination gotoPage={gotoPage} gopageValue={gopageValue} setGopageValue={setGopageValue} pageCount={pageCount} canPreviousPage={canPreviousPage} previousPage={previousPage} canNextPage={canNextPage} pageOptions={pageOptions} setPageSize={setPageSize} nextPage={nextPage} pageSize={pageSize} pageIndex={pageIndex} />}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ContactTable from './Contact.js'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable.js';\r\nimport { fetchContactCustomFiled } from '../../redux/slices/contactCustomFiledSlice.js';\r\nimport { fetchContactData } from '../../redux/slices/contactSlice.js';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ContactModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data } = props\r\n    const [selectedValues, setSelectedValues] = useState();\r\n    const [contactData, setContactData] = useState([]);\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [columns, setColumns] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const fetchCustomDataFields = async () => {\r\n        setIsLoding(true);\r\n        const result = await dispatch(fetchContactCustomFiled());\r\n        setContactData(result?.payload?.data);\r\n\r\n        const tempTableColumns = [\r\n            { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n            ...(result?.payload?.data?.[0]?.fields || [])\r\n                .filter(field => field?.isTableField === true)\r\n                .map(field => ({ Header: field?.label, accessor: field?.name }))\r\n        ];\r\n\r\n        setColumns(tempTableColumns);\r\n        setIsLoding(false);\r\n    };\r\n    useEffect(async () => {\r\n        await dispatch(fetchContactData())\r\n        fetchCustomDataFields();\r\n    }, []);\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Contact</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex>\r\n                        :\r\n                        <CommonCheckTable\r\n                            title={'Contacts'}\r\n                            isLoding={isLoding}\r\n                            columnData={columns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            tableCustomFields={contactData?.[0]?.fields?.filter((field) => field?.isTableField === true) || []}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} onClick={handleSubmit} disabled={isLoding ? true : false} leftIcon={<GiClick />}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ContactModel\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select, Textarea } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport AddEdit from './AddEdit';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\r\nimport { useFormik } from 'formik';\r\nimport dayjs from 'dayjs';\r\nimport { toast } from 'react-toastify';\r\nimport { quoteSchema } from '../../../schema/quoteSchema';\r\nimport CommonCheckTable from \"components/reactTable/checktable\";\r\n\r\nconst View = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [quotesAccess, accountAccess, contactAccess, opportunityAccess, invoicesAccess] = HasAccess(['Quotes', 'Account', 'Contacts', 'Opportunities', 'Invoices'])\r\n\r\n    const [data, setData] = useState()\r\n    const [invoiceData, setInvoiceData] = useState([])\r\n    const { onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [type, setType] = useState(\"\")\r\n    const [editableField, setEditableField] = useState(null);\r\n    const [editableFieldName, setEditableFieldName] = useState(null);\r\n    const [showInvoices, setShowInvoices] = useState(false);\r\n\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const todayTime = new Date().toISOString().split('.')[0];\r\n\r\n    const invoicesColumns = [\r\n        { Header: \"Invoice Number\", accessor: \"invoiceNumber\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Title', accessor: 'title', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => navigate(`/invoicesView/${cell?.row?.original._id}`)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Status', accessor: 'status',\r\n        },\r\n        {\r\n            Header: 'Contact', accessor: 'contact',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || contactAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.contact !== null && `/contactView/${cell?.row?.original.contact}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Account', accessor: 'account',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || accountAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.account !== null && `/accountView/${cell?.row?.original.account}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Grand Total\",\r\n            accessor: \"grandTotal\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text>\r\n                        {cell?.row?.original?.grandTotal ? `$${cell?.row?.original?.grandTotal}` : '-'}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Convert Date&Time\",\r\n            accessor: \"invoiceConvertDate\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text>\r\n                        {cell?.row?.original?.invoiceConvertDate ? `${moment(cell?.row?.original?.invoiceConvertDate).format(\"DD-MM-YYYY HH:MM a\")}` : '-'}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            let result = await getApi('api/quotes/view/', id);\r\n            setData(result?.data?.result);\r\n            setInvoiceData(result?.data?.invoiceDetails)\r\n        }\r\n    }\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Quotes_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const handleDeleteAccount = async (ids) => {\r\n        try {\r\n            let response = await deleteManyApi('api/quotes/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                navigate('/quotes')\r\n                toast.success(`Quotes Delete successfully`)\r\n                setDeleteManyModel(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(`server error`)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        title: data?.title,\r\n        oppotunity: data?.oppotunity,\r\n        quoteStage: data?.quoteStage,\r\n        invoiceStatus: data?.invoiceStatus,\r\n        validUntil: data?.validUntil,\r\n        assignedTo: data?.assignedTo,\r\n        paymentTerms: data?.paymentTerms,\r\n        approvalStatus: data?.approvalStatus,\r\n        nonPrimaryEmail: data?.nonPrimaryEmail,\r\n        approvalIssues: data?.approvalIssues,\r\n        terms: data?.terms,\r\n        description: data?.description,\r\n        account: data?.account,\r\n        contact: data?.contact,\r\n        billingStreet: data?.billingStreet,\r\n        shippingStreet: data?.shippingStreet,\r\n        billingCity: data?.billingCity,\r\n        shippingCity: data?.shippingCity,\r\n        billingState: data?.billingState,\r\n        shippingState: data?.shippingState,\r\n        billingPostalCode: data?.billingPostalCode,\r\n        shippingPostalCode: data?.shippingPostalCode,\r\n        billingCountry: data?.billingCountry,\r\n        shippingCountry: data?.shippingCountry,\r\n        isCheck: data?.isCheck,\r\n        currency: data?.currency,\r\n        total: data?.total,\r\n        discount: data?.discount,\r\n        subtotal: data?.subtotal,\r\n        shipping: data?.shipping,\r\n        shippingTax: data?.shippingTax,\r\n        ptax: data?.ptax,\r\n        tax: data?.tax,\r\n        grandTotal: data?.grandTotal,\r\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: quoteSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (values, { resetForm }) => {\r\n            const payload = {\r\n                ...values,\r\n                modifiedDate: new Date()\r\n            }\r\n            let response = await putApi(`api/quotes/edit/${id}`, payload)\r\n            if (response.status === 200) {\r\n                setEditableField(null);\r\n                fetchViewData()\r\n                toast.success(`${editableFieldName} Update successfully`)\r\n            } else {\r\n                toast.error(`${editableFieldName} not Update`)\r\n            }\r\n        },\r\n    });\r\n    const handleDoubleClick = (fieldName, value, name) => {\r\n        formik.setFieldValue(fieldName, value);\r\n        setEditableField(fieldName)\r\n        setEditableFieldName(name)\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        formik.handleSubmit();\r\n    };\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Heading size=\"lg\" m={3}>\r\n                        {data?.title || \"\"}\r\n                    </Heading>\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Card >\r\n                        <Grid gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                        <Heading size=\"md\" mb={3}>\r\n                                            Quotes Details\r\n                                        </Heading>\r\n                                        <Flex id=\"hide-btn\" >\r\n                                            <Menu>\r\n                                                {(user.role === 'superAdmin' || quotesAccess?.create || quotesAccess?.update || quotesAccess?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                                    Actions\r\n                                                </MenuButton>}\r\n                                                <MenuDivider />\r\n                                                <MenuList minWidth={2}>\r\n                                                    {(user.role === 'superAdmin' || quotesAccess?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\r\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                                    {(user.role === 'superAdmin' || quotesAccess?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n\r\n                                                    {(user.role === 'superAdmin' || quotesAccess?.delete) && <>\r\n                                                        <MenuDivider />\r\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                                    </>}\r\n                                                </MenuList>\r\n                                            </Menu>\r\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\r\n                                                Back\r\n                                            </Button>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Quotes Number </Text>\r\n                                <Text >{data?.quoteNumber ? data?.quoteNumber : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Title </Text>\r\n                                {\r\n                                    editableField === \"title\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"title\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.title}\r\n                                                borderColor={formik?.errors?.title && formik?.touched?.title ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.title && formik?.touched.title && formik?.errors.title}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"title\", data?.title, \"Title\")}>{data?.title ? data?.title : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Opportunity</Text>\r\n                                {\r\n                                    data?.oppotunity ?\r\n                                        <Link to={opportunityAccess?.view && `/opportunitiesView/${data?.oppotunity}`}>\r\n                                            <Text color={opportunityAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: opportunityAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: opportunityAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.oppotunityName ? data?.oppotunityName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={opportunityAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: opportunityAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: opportunityAccess?.view ? 'underline' : 'none' } }}>{data?.oppotunityName ? data?.oppotunityName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Quote Stage </Text>\r\n                                {\r\n                                    editableField === \"quoteStage\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.quoteStage}\r\n                                                name=\"quoteStage\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.quoteStage && formik?.touched.quoteStage ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Quote Stage'}\r\n                                                borderColor={formik?.errors.quoteStage && formik?.touched.quoteStage ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Draft\" >Draft</option>\r\n                                                <option value=\"Negotiation\" >Negotiation</option>\r\n                                                <option value=\"Delivered\" >Delivered</option>\r\n                                                <option value=\"On Hold\" >On Hold</option>\r\n                                                <option value=\"Confirmed\" >Confirmed</option>\r\n                                                <option value=\"Closed Accepted\" >Closed Accepted</option>\r\n                                                <option value=\"Closed Lost\" >Closed Lost</option>\r\n                                                <option value=\"Closed Dead\" >Closed Dead</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.quoteStage && formik?.touched.quoteStage && formik?.errors.quoteStage}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"quoteStage\", data?.quoteStage, \"Quote Stage\")}>{data?.quoteStage ? data?.quoteStage : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Invoice Status </Text>\r\n                                {\r\n                                    editableField === \"invoiceStatus\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.invoiceStatus}\r\n                                                name=\"invoiceStatus\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.invoiceStatus && formik?.touched.invoiceStatus ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Invoice Status'}\r\n                                                borderColor={formik?.errors.invoiceStatus && formik?.touched.invoiceStatus ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Not Invoiced\">Not Invoiced</option>\r\n                                                <option value=\"Invoiced\">Invoiced</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.invoiceStatus && formik?.touched.invoiceStatus && formik?.errors.invoiceStatus}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"invoiceStatus\", data?.invoiceStatus, \"Invoice Status\")}>{data?.invoiceStatus ? data?.invoiceStatus : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Valid Until</Text>\r\n                                {\r\n                                    editableField === \"validUntil\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"validUntil\"\r\n                                                type=\"date\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={dayjs(formik.values.validUntil).format(\"YYYY-MM-DD\")}\r\n                                                borderColor={formik?.errors?.validUntil && formik?.touched?.validUntil ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.validUntil && formik?.touched.validUntil && formik?.errors.validUntil}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"validUntil\", data?.validUntil, \"Valid Until\")}>{data?.validUntil ? data?.validUntil : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Payment Terms</Text>\r\n                                {\r\n                                    editableField === \"paymentTerms\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.paymentTerms}\r\n                                                name=\"paymentTerms\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.paymentTerms && formik?.touched.paymentTerms ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Payment Terms'}\r\n                                                borderColor={formik?.errors.paymentTerms && formik?.touched.paymentTerms ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Nett 15\" >Nett 15</option>\r\n                                                <option value=\"Nett 30\" >Nett 30</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.paymentTerms && formik?.touched.paymentTerms && formik?.errors.paymentTerms}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"paymentTerms\", data?.paymentTerms, \"Payment Terms\")}>{data?.paymentTerms ? data?.paymentTerms : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Approval Status</Text>\r\n                                {\r\n                                    editableField === \"approvalStatus\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.approvalStatus}\r\n                                                name=\"approvalStatus\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.approvalStatus && formik?.touched.approvalStatus ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Approval Status'}\r\n                                                borderColor={formik?.errors.approvalStatus && formik?.touched.approvalStatus ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Approved\">Approved</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.approvalStatus && formik?.touched.approvalStatus && formik?.errors.approvalStatus}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"approvalStatus\", data?.approvalStatus, \"Approval Status\")}>{data?.approvalStatus ? data?.approvalStatus : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Approval Issues</Text>\r\n                                {\r\n                                    editableField === \"approvalIssues\" ?\r\n                                        <>\r\n                                            <Textarea\r\n                                                fontSize='sm'\r\n                                                value={formik?.values.approvalIssues}\r\n                                                name=\"approvalIssues\"\r\n                                                resize={\"none\"}\r\n                                                onBlur={handleBlur}\r\n                                                onChange={formik?.handleChange}\r\n                                                placeholder='Approval Issues'\r\n                                                fontWeight='500'\r\n                                                borderColor={formik?.errors.approvalIssues && formik?.touched.approvalIssues ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.approvalIssues && formik?.touched.approvalIssues && formik?.errors.approvalIssues}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"approvalIssues\", data?.approvalIssues, \"Approval Issues\")} style={{ width: \"300px\" }}>{data?.approvalIssues ? data?.approvalIssues : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Terms</Text>\r\n                                {\r\n                                    editableField === \"terms\" ?\r\n                                        <>\r\n                                            <Textarea\r\n                                                fontSize='sm'\r\n                                                value={formik?.values.terms}\r\n                                                name=\"terms\"\r\n                                                resize={\"none\"}\r\n                                                onBlur={handleBlur}\r\n                                                onChange={formik?.handleChange}\r\n                                                placeholder='Terms'\r\n                                                fontWeight='500'\r\n                                                borderColor={formik?.errors.terms && formik?.touched.terms ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.terms && formik?.touched.terms && formik?.errors.terms}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"terms\", data?.terms, \"Terms\")} style={{ width: \"300px\" }}>{data?.terms ? data?.terms : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Textarea\r\n                                                fontSize='sm'\r\n                                                value={formik?.values.description}\r\n                                                name=\"description\"\r\n                                                resize={\"none\"}\r\n                                                onBlur={handleBlur}\r\n                                                onChange={formik?.handleChange}\r\n                                                placeholder='Description'\r\n                                                fontWeight='500'\r\n                                                borderColor={formik?.errors.description && formik?.touched.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description, \"Description\")} style={{ width: \"300px\" }}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Account</Text>\r\n                                {\r\n                                    data?.account ?\r\n                                        <Link to={accountAccess?.view && `/accountView/${data?.account}`}>\r\n                                            <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.accountName ? data?.accountName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }}>{data?.accountName ? data?.accountName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Contact</Text>\r\n                                {\r\n                                    data?.contact ?\r\n                                        <Link to={contactAccess?.view && `/contactView/${data?.contact}`}>\r\n                                            <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.contactName ? data?.contactName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.contactName ? data?.contactName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street</Text>\r\n                                {\r\n                                    editableField === \"billingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet}\r\n                                                borderColor={formik?.errors?.billingStreet && formik?.touched?.billingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet && formik?.touched.billingStreet && formik?.errors.billingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet\", data?.billingStreet, \"Billing Street\")}>{data?.billingStreet ? data?.billingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet}\r\n                                                borderColor={formik?.errors?.shippingStreet && formik?.touched?.shippingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet && formik?.touched.shippingStreet && formik?.errors.shippingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet\", data?.shippingStreet, \"Shipping Street\")}>{data?.shippingStreet ? data?.shippingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"billingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCity}\r\n                                                borderColor={formik?.errors?.billingCity && formik?.touched?.billingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCity && formik?.touched.billingCity && formik?.errors.billingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCity\", data?.billingCity, \"Billing City\")}>{data?.billingCity ? data?.billingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"shippingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCity}\r\n                                                borderColor={formik?.errors?.shippingCity && formik?.touched?.shippingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCity && formik?.touched.shippingCity && formik?.errors.shippingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCity\", data?.shippingCity, \"Shipping City\")}>{data?.shippingCity ? data?.shippingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing State</Text>\r\n                                {\r\n                                    editableField === \"billingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingState}\r\n                                                borderColor={formik?.errors?.billingState && formik?.touched?.billingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingState && formik?.touched.billingState && formik?.errors.billingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingState\", data?.billingState, \"Billing State\")}>{data?.billingState ? data?.billingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping State</Text>\r\n                                {\r\n                                    editableField === \"shippingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingState}\r\n                                                borderColor={formik?.errors?.shippingState && formik?.touched?.shippingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingState && formik?.touched.shippingState && formik?.errors.shippingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingState\", data?.shippingState, \"Shipping State\")}>{data?.shippingState ? data?.shippingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Postal Code</Text>\r\n                                {\r\n                                    editableField === \"billingPostalCode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingPostalCode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingPostalCode}\r\n                                                borderColor={formik?.errors?.billingPostalCode && formik?.touched?.billingPostalCode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingPostalCode && formik?.touched.billingPostalCode && formik?.errors.billingPostalCode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingPostalCode\", data?.billingPostalCode, \"Billing Postal Code\")}>{data?.billingPostalCode ? data?.billingPostalCode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Postal Code</Text>\r\n                                {\r\n                                    editableField === \"shippingPostalCode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingPostalCode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingPostalCode}\r\n                                                borderColor={formik?.errors?.shippingPostalCode && formik?.touched?.shippingPostalCode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingPostalCode && formik?.touched.shippingPostalCode && formik?.errors.shippingPostalCode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingPostalCode\", data?.shippingPostalCode, \"Shipping Postal Code\")}>{data?.shippingPostalCode ? data?.shippingPostalCode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Country</Text>\r\n                                {\r\n                                    editableField === \"billingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCountry}\r\n                                                borderColor={formik?.errors?.billingCountry && formik?.touched?.billingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCountry && formik?.touched.billingCountry && formik?.errors.billingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCountry\", data?.billingCountry, \"Billing Country\")}>{data?.billingCountry ? data?.billingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Country</Text>\r\n                                {\r\n                                    editableField === \"shippingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCountry}\r\n                                                borderColor={formik?.errors?.shippingCountry && formik?.touched?.shippingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCountry && formik?.touched.shippingCountry && formik?.errors.shippingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCountry\", data?.shippingCountry, \"Shipping Country\")}>{data?.shippingCountry ? data?.shippingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned To</Text>\r\n                                {\r\n                                    data?.assignedTo ?\r\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignedTo}`}>\r\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Total</Text>\r\n                                <Text>{`${data?.currency}${data?.total ? data?.total : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Discount</Text>\r\n                                <Text >{`${data?.currency}${data?.discount || \"0\"}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Subtotal</Text>\r\n                                <Text>{`${data?.currency}${data?.subtotal ? data?.subtotal : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping</Text>\r\n                                <>{`${data?.currency}${data?.shipping ? data?.shipping : '0'}`}</>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Tax</Text>\r\n                                <Text >{`${data?.currency}${data?.shippingTax ? data?.shippingTax : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Tax</Text>\r\n                                <Text >{`${data?.currency}${data?.tax ? data?.tax : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Grand Total</Text>\r\n                                <Text>{`${data?.currency}${data?.grandTotal ? data?.grandTotal : '0'}`}</Text>\r\n                            </GridItem>\r\n\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n            </Grid>\r\n            {invoicesAccess?.view &&\r\n                <GridItem colSpan={{ base: 12 }} mt={5}>\r\n                    <Card overflow={'scroll'}>\r\n                        <CommonCheckTable\r\n                            title={\"Invoices\"}\r\n                            isLoding={isLoding}\r\n                            columnData={invoicesColumns ?? []}\r\n                            allData={invoiceData ?? []}\r\n                            tableData={invoiceData ?? []}\r\n                            AdvanceSearch={false}\r\n                            tableCustomFields={[]}\r\n                            checkBox={false}\r\n                            deleteMany={true}\r\n                            ManageGrid={false}\r\n                            access={false}\r\n                        />\r\n\r\n                    </Card>\r\n                </GridItem>\r\n            }\r\n            {\r\n                (quotesAccess?.update || quotesAccess?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                        <GridItem colStart={6} >\r\n                            <Flex justifyContent={\"right\"}>\r\n                                {(quotesAccess?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                                {(quotesAccess?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                            </Flex>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </Card>\r\n            }\r\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\r\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Account' handleDeleteData={handleDeleteAccount} ids={[id]} />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default View\r\n"],"names":["props","onClose","isOpen","fieldName","setFieldValue","data","type","billingState","billingCity","billingPostalCode","billingCountry","billingStreet","isLoding","setIsLoding","useDispatch","useState","leadData","setLeadData","selectedValues","setSelectedValues","tableColumns","length","find","item","_id","Header","accessor","isSortable","width","_jsxs","Modal","size","children","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Flex","justifyContent","alignItems","Spinner","CommonCheckTable","title","columnData","allData","tableData","AdvanceSearch","ManageGrid","deleteMany","selectType","customSearch","ModalFooter","Button","variant","me","disabled","leftIcon","GiClick","onClick","async","e","console","log","colorScheme","opprtunitiesSchema","yup","opportunityName","required","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","createBy","cell","moment","value","format","columns","setColumns","selectedColumns","setSelectedColumns","filter","colum","ContactTable","columnsData","useMemo","gopageValue","setGopageValue","JSON","parse","localStorage","getItem","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","textColor","useColorModeValue","borderColor","handleCheckboxChange","event","target","checked","prevSelectedValues","selectedValue","Card","direction","w","px","style","border","overflowX","sm","lg","justify","mb","align","Text","color","fontSize","fontWeight","lineHeight","CountUpComponent","targetNumber","Box","overflowY","className","Table","Thead","zIndex","map","headerGroup","index","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","getSortByToggleProps","pe","center","textTransform","marginRight","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","colSpan","row","_row$cells","getRowProps","cells","_cell$row","Checkbox","isChecked","includes","onChange","getCellProps","minW","md","Pagination","_contactData$","_contactData$$fields","contactData","setContactData","dispatch","useEffect","fetchContactData","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","result","fetchContactCustomFiled","payload","tempTableColumns","fields","field","isTableField","label","name","fetchCustomDataFields","tableCustomFields","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","textarea","cx","__css","__DEV__","displayName","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_formik$errors8","_formik$touched8","_formik$errors9","_formik$touched9","_formik$errors10","_formik$touched10","_formik$errors11","_formik$touched11","_formik$errors12","_formik$touched12","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","quotesAccess","accountAccess","contactAccess","opportunityAccess","invoicesAccess","HasAccess","setData","invoiceData","setInvoiceData","onOpen","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","showInvoices","setShowInvoices","invoicesColumns","Date","toISOString","split","original","sx","textDecoration","cursor","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","_cell$row6","_cell$row6$original","_cell$row7","_cell$row7$original","role","view","_cell$row2","_cell$row3","contact","contactName","_cell$row10","_cell$row10$original","_cell$row11","_cell$row11$original","_cell$row12","_cell$row12$original","_cell$row13","_cell$row13$original","_cell$row8","_cell$row9","account","accountName","_cell$row14","_cell$row14$original","_cell$row15","_cell$row15$original","grandTotal","_cell$row16","_cell$row16$original","_cell$row17","_cell$row17$original","invoiceConvertDate","fetchViewData","_result$data","_result$data2","getApi","invoiceDetails","initialValues","oppotunity","quoteStage","invoiceStatus","validUntil","assignedTo","paymentTerms","approvalStatus","nonPrimaryEmail","approvalIssues","terms","shippingStreet","shippingCity","shippingState","shippingPostalCode","shippingCountry","isCheck","total","discount","subtotal","shipping","shippingTax","ptax","tax","modifiedBy","formik","useFormik","validationSchema","quoteSchema","enableReinitialize","onSubmit","values","_ref","resetForm","modifiedDate","putApi","status","toast","success","error","handleDoubleClick","handleBlur","handleSubmit","Grid","templateColumns","gap","GridItem","base","Heading","m","display","Menu","create","update","delete","MenuButton","va","mr","as","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","html2pdf","from","set","margin","filename","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","_Fragment","DeleteIcon","IoIosArrowBack","HSeparator","quoteNumber","Input","handleChange","onBlur","errors","touched","autoFocus","onDoubleClick","Link","to","oppotunityName","Select","undefined","placeholder","dayjs","resize","assignUserName","mt","overflow","checkBox","access","colStart","background","AddEdit","viewClose","selectedId","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids"],"sourceRoot":""}