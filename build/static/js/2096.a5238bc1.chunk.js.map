{"version":3,"file":"static/js/2096.a5238bc1.chunk.js","mappings":"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","sources":["views/admin/quotes/AddEdit.js","schema/quoteSchema.js"],"sourcesContent":["import { AddIcon, CloseIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Checkbox, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, Flex, FormControl, FormLabel, Grid, GridItem, Heading, IconButton, Input, Select, Table, Tbody, Td, Text, Textarea, Th, Thead, Tr } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport dayjs from 'dayjs';\r\nimport { useFormik } from 'formik';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { LiaMousePointerSolid } from 'react-icons/lia';\r\nimport { postApi, getApi, putApi } from 'services/api';\r\nimport { generateValidationSchema } from 'utils';\r\nimport CustomForm from 'utils/customForm';\r\nimport * as yup from 'yup'\r\nimport { quoteSchema } from '../../../schema/quoteSchema';\r\nimport UserModel from 'components/commonTableModel/UserModel';\r\nimport OpprtunityModel from 'components/commonTableModel/OpprtunityModel';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchOpportunityData } from '../../../redux/slices/opportunitySlice';\r\nimport AccountModel from 'components/commonTableModel/AccountModel';\r\nimport { fetchAccountData } from '../../../redux/slices/accountSlice';\r\nimport ContactModel from 'components/commonTableModel/ContactModel';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\n\r\nconst AddEdit = (props) => {\r\n    const { isOpen, size, onClose, type, setAction, selectedId, contactId } = props;\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [userModel, setUserModel] = useState(false)\r\n    const [opprtunityModel, setOpprtunityModel] = useState(false)\r\n    const [userData, setUserData] = useState([]);\r\n    const [accountModel, setAccountModel] = useState(false)\r\n    const [contactModel, setContactModel] = useState(false)\r\n    const [quotesDetails, setQuotesDetails] = useState({});\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [accountAccess, contactAccess, opportunityAccess] = HasAccess(['Account', 'Contacts', 'Opportunities'])\r\n\r\n    const opportunityList = useSelector((state) => state?.opportunityData?.data?.data)\r\n    const accountList = useSelector((state) => state?.accountData?.data?.data)\r\n    const contactList = useSelector((state) => state?.contactData?.data)\r\n\r\n    const initialValues = {\r\n        title: type === \"edit\" ? quotesDetails?.title : \"\",\r\n        oppotunity: type === \"edit\" ? quotesDetails?.oppotunity : null,\r\n        quoteStage: type === \"edit\" ? quotesDetails?.quoteStage : \"Draft\",\r\n        invoiceStatus: type === \"edit\" ? quotesDetails?.invoiceStatus : \"Not Invoiced\",\r\n        validUntil: type === \"edit\" ? quotesDetails?.validUntil : \"\",\r\n        assignedTo: type === \"edit\" ? quotesDetails?.assignedTo : null,\r\n        paymentTerms: type === \"edit\" ? quotesDetails?.paymentTerms : \"\",\r\n        approvalStatus: type === \"edit\" ? quotesDetails?.approvalStatus : \"\",\r\n        nonPrimaryEmail: type === \"edit\" ? quotesDetails?.nonPrimaryEmail : \"\",\r\n        approvalIssues: type === \"edit\" ? quotesDetails?.approvalIssues : \"\",\r\n        terms: type === \"edit\" ? quotesDetails?.terms : \"\",\r\n        description: type === \"edit\" ? quotesDetails?.description : \"\",\r\n        account: type === \"edit\" ? quotesDetails?.account : null,\r\n        contact: type === \"edit\" ? quotesDetails?.contact : contactId ? contactId : null,\r\n        billingStreet: type === \"edit\" ? quotesDetails?.billingStreet : \"\",\r\n        shippingStreet: type === \"edit\" ? quotesDetails?.shippingStreet : \"\",\r\n        billingCity: type === \"edit\" ? quotesDetails?.billingCity : \"\",\r\n        shippingCity: type === \"edit\" ? quotesDetails?.shippingCity : \"\",\r\n        billingState: type === \"edit\" ? quotesDetails?.billingState : \"\",\r\n        shippingState: type === \"edit\" ? quotesDetails?.shippingState : \"\",\r\n        billingPostalCode: type === \"edit\" ? quotesDetails?.billingPostalCode : \"\",\r\n        shippingPostalCode: type === \"edit\" ? quotesDetails?.shippingPostalCode : \"\",\r\n        billingCountry: type === \"edit\" ? quotesDetails?.billingCountry : \"\",\r\n        shippingCountry: type === \"edit\" ? quotesDetails?.shippingCountry : \"\",\r\n        isCheck: type === \"edit\" ? quotesDetails?.isCheck : false,\r\n        currency: type === \"edit\" ? quotesDetails?.currency : \"$\",\r\n        total: type === \"edit\" ? quotesDetails?.total : \"\",\r\n        discount: type === \"edit\" ? quotesDetails?.discount : \"\",\r\n        subtotal: type === \"edit\" ? quotesDetails?.subtotal : \"\",\r\n        shipping: type === \"edit\" ? quotesDetails?.shipping : \"\",\r\n        shippingTax: type === \"edit\" ? quotesDetails?.shippingTax : \"\",\r\n        ptax: type === \"edit\" ? quotesDetails?.ptax : \"\",\r\n        tax: type === \"edit\" ? quotesDetails?.tax : \"\",\r\n        grandTotal: type === \"edit\" ? quotesDetails?.grandTotal : \"\",\r\n        discountType: type === \"edit\" ? quotesDetails?.discountType : \"none\",\r\n        items: type === \"edit\" ? quotesDetails?.items : [],\r\n        createBy: JSON.parse(localStorage.getItem('user'))._id,\r\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\r\n    };\r\n\r\n\r\n    const addData = async (values) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await postApi('api/quotes/add', values)\r\n            if (response.status === 200) {\r\n                onClose();\r\n                toast.success(`Quotes Save successfully`)\r\n                formik.resetForm();\r\n                setAction((pre) => !pre)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            toast.error(`server error`)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n    const editData = async (values) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await putApi(`api/quotes/edit/${selectedId}`, values)\r\n            if (response.status === 200) {\r\n                onClose();\r\n                toast.success(`Quotes Update successfully`)\r\n                formik.resetForm();\r\n                setAction((pre) => !pre)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            toast.error(`server error`)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        formik.resetForm();\r\n        onClose()\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: quoteSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (type === \"add\") {\r\n                addData(values)\r\n            } else {\r\n                const payload = { ...values, modifiedDate: new Date() }\r\n                editData(payload)\r\n            }\r\n        },\r\n    });\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\r\n\r\n    const handleCheck = (e) => {\r\n        setFieldValue(\"isCheck\", e.target.checked)\r\n        if (e.target.checked) {\r\n            setFieldValue(\"shippingStreet\", values?.billingStreet)\r\n            setFieldValue(\"shippingCity\", values?.billingCity)\r\n            setFieldValue(\"shippingState\", values?.billingState)\r\n            setFieldValue(\"shippingPostalCode\", values?.billingPostalCode)\r\n            setFieldValue(\"shippingCountry\", values?.billingCountry)\r\n        } else {\r\n            setFieldValue(\"shippingStreet\", \"\")\r\n            setFieldValue(\"shippingCity\", \"\")\r\n            setFieldValue(\"shippingState\", \"\")\r\n            setFieldValue(\"shippingPostalCode\", \"\")\r\n            setFieldValue(\"shippingCountry\", \"\")\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let result = await getApi('api/user/');\r\n        setUserData(result?.data?.user);\r\n        setIsLoding(false)\r\n    }\r\n\r\n\r\n    const fetchQuotesDetails = async () => {\r\n        if (type === \"edit\") {\r\n            try {\r\n                setIsLoding(true)\r\n                let result = await getApi('api/quotes/view/', selectedId)\r\n                if (result?.status === 200) {\r\n                    setQuotesDetails(result?.data?.result)\r\n                }\r\n\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n            }\r\n            finally {\r\n                setIsLoding(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const calculateAmounts = (items) => {\r\n        const totalAmount = items.reduce((sum, item) => sum + item.amount, 0);\r\n        const totalDiscount = items.reduce((sum, item) => sum + item.totalDiscount, 0);\r\n        const netAmount = Number(totalAmount) - Number(totalDiscount);\r\n        return { totalAmount, netAmount, discount: totalDiscount };\r\n    };\r\n\r\n    const handleAddItem = () => {\r\n        setFieldValue(\"items\", [\r\n            ...values.items,\r\n            { id: values.items.length + 1, productName: \"\", qty: 0, rate: 0, discount: 0, discountType: \"none\", totalDiscount: 0, amount: 0 }\r\n        ]);\r\n    };\r\n\r\n    const handleRemoveItem = (index) => {\r\n        const newItems = values.items.filter((_, idx) => idx !== index);\r\n        setFieldValue(\"items\", newItems);\r\n        const { totalAmount, netAmount, discount } = calculateAmounts(newItems);\r\n        setFieldValue(\"total\", totalAmount);\r\n        setFieldValue(\"grandTotal\", netAmount);\r\n        setFieldValue(\"discount\", discount);\r\n    };\r\n\r\n    const handleChangeCalculation = (index, field, value) => {\r\n        const newItems = values.items.map((item, idx) => {\r\n            if (idx === index) {\r\n                const updatedItem = { ...item, [field]: value };\r\n                if (['qty', 'rate', 'discount', 'discountType'].includes(field)) {\r\n                    const discountValue = updatedItem.discountType === 'percent'\r\n                        ? (updatedItem.rate * updatedItem.qty * updatedItem.discount / 100)\r\n                        : updatedItem.discountType === 'none'\r\n                            ? 0\r\n                            : updatedItem.discount;\r\n                    updatedItem.amount = updatedItem.rate * updatedItem.qty - discountValue;\r\n                    updatedItem.totalDiscount = discountValue;\r\n                }\r\n                return updatedItem;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        setFieldValue(\"items\", newItems);\r\n        const { totalAmount, netAmount, discount } = calculateAmounts(newItems);\r\n        setFieldValue(\"discount\", discount);\r\n        setFieldValue(\"total\", totalAmount);\r\n        setFieldValue(\"subtotal\", totalAmount);\r\n        setFieldValue(\"grandTotal\", netAmount);\r\n    };\r\n\r\n    const calculateValues = useCallback(() => {\r\n        const subtotal = values.subtotal;\r\n        const shipping = Number(values.shipping);\r\n        const ptax = Number(values.ptax);\r\n        const shippingTax = Number(subtotal) + Number(shipping);\r\n        const tax = shippingTax * ptax / 100;\r\n        const grandTotal = Number(shippingTax) + Number(tax);\r\n\r\n        setFieldValue('shippingTax', shippingTax?.toFixed(2));\r\n        setFieldValue('tax', tax?.toFixed(2));\r\n        setFieldValue('grandTotal', grandTotal?.toFixed(2));\r\n    }, [values.subtotal, values.shipping, values.ptax]);\r\n\r\n    useEffect(() => {\r\n        calculateValues();\r\n    }, [calculateValues]);\r\n\r\n    useEffect(() => {\r\n        if (type === \"edit\") fetchQuotesDetails();\r\n        if (user.role === 'superAdmin') fetchData();\r\n    }, [type, selectedId])\r\n\r\n    useEffect(() => {\r\n        if (opportunityList?.length === 0 || opportunityList === undefined) { dispatch(fetchOpportunityData()) }\r\n        if (accountList?.length === 0 || accountList === undefined) { dispatch(fetchAccountData()) }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {userModel && <UserModel onClose={() => setUserModel(false)} isOpen={userModel} fieldName={\"assignedTo\"} setFieldValue={setFieldValue} data={userData} isLoding={isLoding} setIsLoding={setIsLoding} />}\r\n            {opprtunityModel && <OpprtunityModel onClose={() => setOpprtunityModel(false)} isOpen={opprtunityModel} fieldName={\"oppotunity\"} setFieldValue={setFieldValue} data={opportunityList} isLoding={isLoding} setIsLoding={setIsLoding} type=\"quotes\" billingState=\"billingState\" billingCity=\"billingCity\" billingPostalCode=\"billingPostalCode\" billingCountry=\"billingCountry\" billingStreet=\"billingStreet\" />}\r\n            {accountModel && <AccountModel onClose={() => setAccountModel(false)} isOpen={accountModel} fieldName={\"account\"} setFieldValue={setFieldValue} data={accountList} />}\r\n            {contactModel && <ContactModel isOpen={contactModel} data={contactList} onClose={setContactModel} values={values} fieldName='contact' setFieldValue={setFieldValue} />}\r\n\r\n            <Drawer isOpen={isOpen} size={size}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex'  >\r\n                        {type === \"add\" ? \"Add\" : \"Edit\"} Quotes\r\n                        <IconButton onClick={() => handleCancel()} icon={<CloseIcon />} />\r\n                    </DrawerHeader>\r\n                    <DrawerBody>\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <Heading as=\"h1\" size=\"md\" mt='10px'>\r\n                                    Overview\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Title<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.title}\r\n                                    name=\"title\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Title'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.title && touched.title ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.title && touched.title && errors.title}</Text>\r\n                            </GridItem>\r\n                            {\r\n                                (user.role === 'superAdmin' || opportunityAccess?.view) &&\r\n                                <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                    <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                        Opportunity\r\n                                    </FormLabel>\r\n                                    <Flex justifyContent={'space-between'}>\r\n                                        <Select\r\n                                            value={values.oppotunity}\r\n                                            name=\"oppotunity\"\r\n                                            onChange={handleChange}\r\n                                            mb={errors.oppotunity && touched.oppotunity ? undefined : '10px'}\r\n                                            fontWeight='500'\r\n                                            placeholder={'Opportunity'}\r\n                                            borderColor={errors.oppotunity && touched.oppotunity ? \"red.300\" : null}\r\n                                        >\r\n                                            {opportunityList?.length > 0 && opportunityList?.map((item) => {\r\n                                                return <option value={item._id} key={item._id}>{`${item?.opportunityName}`}</option>\r\n                                            })}\r\n                                        </Select>\r\n                                        <IconButton onClick={() => setOpprtunityModel(true)} ml={2} fontSize='25px' icon={<LiaMousePointerSolid />} />\r\n                                    </Flex>\r\n                                    <Text mb='10px' fontSize='sm' color={'red'}> {errors.oppotunity && touched.oppotunity && errors.oppotunity}</Text>\r\n                                </GridItem>\r\n                            }\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Quote Stage<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.quoteStage}\r\n                                    name=\"quoteStage\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.quoteStage && touched.quoteStage ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Quote Stage'}\r\n                                    borderColor={errors.quoteStage && touched.quoteStage ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"Draft\" >Draft</option>\r\n                                    <option value=\"Negotiation\" >Negotiation</option>\r\n                                    <option value=\"Delivered\" >Delivered</option>\r\n                                    <option value=\"On Hold\" >On Hold</option>\r\n                                    <option value=\"Confirmed\" >Confirmed</option>\r\n                                    <option value=\"Closed Accepted\" >Closed Accepted</option>\r\n                                    <option value=\"Closed Lost\" >Closed Lost</option>\r\n                                    <option value=\"Closed Dead\" >Closed Dead</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.quoteStage && touched.quoteStage && errors.quoteStage}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Invoice Status\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.invoiceStatus}\r\n                                    name=\"invoiceStatus\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.invoiceStatus && touched.invoiceStatus ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Invoice Status'}\r\n                                    borderColor={errors.invoiceStatus && touched.invoiceStatus ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"Not Invoiced\">Not Invoiced</option>\r\n                                    <option value=\"Invoiced\">Invoiced</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.invoiceStatus && touched.invoiceStatus && errors.invoiceStatus}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Valid Until<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={dayjs(values.validUntil).format(\"YYYY-MM-DD\")}\r\n                                    name=\"validUntil\"\r\n                                    type=\"date\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Valid Until'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.validUntil && touched.validUntil ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.validUntil && touched.validUntil && errors.validUntil}</Text>\r\n                            </GridItem>\r\n                            {\r\n                                user.role === 'superAdmin' &&\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                        Assigned To\r\n                                    </FormLabel>\r\n                                    <Flex justifyContent={'space-between'}>\r\n                                        <Select\r\n                                            value={values.assignedTo}\r\n                                            name=\"assignedTo\"\r\n                                            onChange={handleChange}\r\n                                            mb={errors.assignedTo && touched.assignedTo ? undefined : '10px'}\r\n                                            fontWeight='500'\r\n                                            placeholder={'Assigned To'}\r\n                                            borderColor={errors.assignedTo && touched.assignedTo ? \"red.300\" : null}\r\n                                        >\r\n                                            {userData?.map((item) => {\r\n                                                return <option value={item._id} key={item._id}>{`${item?.firstName} ${item?.lastName}`}</option>\r\n                                            })}\r\n                                        </Select>\r\n                                        <IconButton onClick={() => setUserModel(true)} ml={2} fontSize='25px' icon={<LiaMousePointerSolid />} />\r\n                                    </Flex>\r\n                                </GridItem>\r\n                            }\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Payment Terms\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.paymentTerms}\r\n                                    name=\"paymentTerms\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.paymentTerms && touched.paymentTerms ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Payment Terms'}\r\n                                    borderColor={errors.paymentTerms && touched.paymentTerms ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"Nett 15\" >Nett 15</option>\r\n                                    <option value=\"Nett 30\" >Nett 30</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.paymentTerms && touched.paymentTerms && errors.paymentTerms}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Approval Status\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.approvalStatus}\r\n                                    name=\"approvalStatus\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.approvalStatus && touched.approvalStatus ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Approval Status'}\r\n                                    borderColor={errors.approvalStatus && touched.approvalStatus ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"Approved\">Approved</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.approvalStatus && touched.approvalStatus && errors.approvalStatus}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Approval Issues\r\n                                </FormLabel>\r\n                                <Textarea\r\n                                    fontSize='sm'\r\n                                    value={values.approvalIssues}\r\n                                    name=\"approvalIssues\"\r\n                                    resize={\"none\"}\r\n                                    onChange={handleChange}\r\n                                    placeholder='Approval Issues'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.approvalIssues && touched.approvalIssues ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.approvalIssues && touched.approvalIssues && errors.approvalIssues}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Terms\r\n                                </FormLabel>\r\n                                <Textarea\r\n                                    fontSize='sm'\r\n                                    value={values.terms}\r\n                                    name=\"terms\"\r\n                                    resize={\"none\"}\r\n                                    onChange={handleChange}\r\n                                    placeholder='Terms'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.terms && touched.terms ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.terms && touched.terms && errors.terms}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Description\r\n                                </FormLabel>\r\n                                <Textarea\r\n                                    fontSize='sm'\r\n                                    value={values.description}\r\n                                    name=\"description\"\r\n                                    resize={\"none\"}\r\n                                    onChange={handleChange}\r\n                                    placeholder='Description'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.description && touched.description ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.description && touched.description && errors.description}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <Heading as=\"h1\" size=\"md\" mt='10px'>\r\n                                    Address Information\r\n                                </Heading>\r\n                            </GridItem>\r\n                            {\r\n                                (user.role === 'superAdmin' || accountAccess?.view) &&\r\n\r\n                                <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                    <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                        Account\r\n                                    </FormLabel>\r\n                                    <Flex justifyContent={'space-between'}>\r\n                                        <Select\r\n                                            value={values.account}\r\n                                            name=\"account\"\r\n                                            onChange={handleChange}\r\n                                            mb={errors.account && touched.account ? undefined : '10px'}\r\n                                            fontWeight='500'\r\n                                            placeholder={'Account'}\r\n                                            borderColor={errors.account && touched.account ? \"red.300\" : null}\r\n                                        >\r\n                                            {accountList?.length > 0 && accountList?.map((item) => {\r\n                                                return <option value={item._id} key={item._id}>{`${item?.name}`}</option>\r\n                                            })}\r\n                                        </Select>\r\n                                        <IconButton onClick={() => setAccountModel(true)} ml={2} fontSize='25px' icon={<LiaMousePointerSolid />} />\r\n                                    </Flex>\r\n                                    <Text mb='10px' fontSize='sm' color={'red'}> {errors.account && touched.account && errors.account}</Text>\r\n                                </GridItem>\r\n                            }\r\n                            {\r\n                                (user.role === 'superAdmin' || contactAccess?.view) &&\r\n                                <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                    <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                        Contact\r\n                                    </FormLabel>\r\n                                    <Flex justifyContent={'space-between'}>\r\n                                        <Select\r\n                                            value={values.contact}\r\n                                            name=\"contact\"\r\n                                            onChange={handleChange}\r\n                                            mb={errors.contact && touched.contact ? undefined : '10px'}\r\n                                            fontWeight='500'\r\n                                            placeholder={'Contact'}\r\n                                            borderColor={errors.contact && touched.contact ? \"red.300\" : null}\r\n                                        >\r\n                                            {contactList?.length > 0 && contactList?.map((item) => {\r\n                                                return <option value={item._id} key={item._id}>{`${item.firstName} ${item.lastName}`}</option>\r\n                                            })}\r\n                                        </Select>\r\n                                        <IconButton onClick={() => setContactModel(true)} ml={2} fontSize='25px' icon={<LiaMousePointerSolid />} />\r\n                                    </Flex>\r\n                                    <Text mb='10px' fontSize='sm' color={'red'}> {errors.contact && touched.contact && errors.contact}</Text>\r\n                                </GridItem>\r\n                            }\r\n\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <Heading as=\"h1\" size=\"md\" mt='10px'>\r\n                                    Billing Address\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <Heading as=\"h1\" size=\"md\" mt='10px'>\r\n                                    Shipping Address\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <Checkbox isChecked={values?.isCheck} onChange={(e) => handleCheck(e)} visibility={\"hidden\"}>\r\n                                    Copy address from left\r\n                                </Checkbox>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px' mt={3}>\r\n                                    Billing Street\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.billingStreet}\r\n                                    name=\"billingStreet\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Billing Street'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.billingStreet && touched.billingStreet ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.billingStreet && touched.billingStreet && errors.billingStreet}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <Checkbox isChecked={values?.isCheck} onChange={(e) => handleCheck(e)}>\r\n                                    Copy address from left\r\n                                </Checkbox>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px' mt={3}>\r\n                                    Shipping Street\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingStreet}\r\n                                    name=\"shippingStreet\"\r\n                                    disabled={values?.isCheck}\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping Street'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingStreet && touched.shippingStreet ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingStreet && touched.shippingStreet && errors.shippingStreet}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Billing City\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.billingCity}\r\n                                    name=\"billingCity\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Billing City'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.billingCity && touched.billingCity ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.billingCity && touched.billingCity && errors.billingCity}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping City\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingCity}\r\n                                    name=\"shippingCity\"\r\n                                    disabled={values?.isCheck}\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping City'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingCity && touched.shippingCity ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingCity && touched.shippingCity && errors.shippingCity}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Billing State\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.billingState}\r\n                                    name=\"billingState\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Billing State'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.billingState && touched.billingState ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.billingState && touched.billingState && errors.billingState}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping State\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingState}\r\n                                    disabled={values?.isCheck}\r\n                                    name=\"shippingState\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping State'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingState && touched.shippingState ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingState && touched.shippingState && errors.shippingState}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Billing Postal Code\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.billingPostalCode}\r\n                                    name=\"billingPostalCode\"\r\n                                    onChange={handleChange}\r\n                                    type='number'\r\n                                    placeholder='Billing Postal Code'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.billingPostalCode && touched.billingPostalCode ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.billingPostalCode && touched.billingPostalCode && errors.billingPostalCode}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping Postal Code\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingPostalCode}\r\n                                    disabled={values?.isCheck}\r\n                                    name=\"shippingPostalCode\"\r\n                                    type='number'\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping Postal Code'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingPostalCode && touched.shippingPostalCode ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingPostalCode && touched.shippingPostalCode && errors.shippingPostalCode}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Billing Country\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.billingCountry}\r\n                                    name=\"billingCountry\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Billing Country'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.billingCountry && touched.billingCountry ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.billingCountry && touched.billingCountry && errors.billingCountry}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping Country\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingCountry}\r\n                                    name=\"shippingCountry\"\r\n                                    onChange={handleChange}\r\n                                    disabled={values?.isCheck}\r\n                                    placeholder='Shipping Country'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingCountry && touched.shippingCountry ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingCountry && touched.shippingCountry && errors.shippingCountry}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <Heading as=\"h1\" size=\"md\" mt='10px'>\r\n                                    Line Items\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Currency\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.currency}\r\n                                    name=\"currency\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    mb={errors.currency && touched.currency ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Select Currency'}\r\n                                    borderColor={errors.currency && touched.currency ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"$\" selected>INR</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.currency && touched.currency && errors.currency}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <Box>\r\n                                    <Table variant=\"simple\" size=\"sm\" mt={5} backgroundColor=\"#f9f9f9\">\r\n                                        <Thead>\r\n                                            <Tr>\r\n                                                <Th></Th>\r\n                                                <Th>#</Th>\r\n                                                <Th>Item</Th>\r\n                                                <Th>Qty</Th>\r\n                                                <Th>Rate</Th>\r\n                                                <Th>Discount</Th>\r\n                                                <Th>Amount</Th>\r\n                                            </Tr>\r\n                                        </Thead>\r\n                                        <Tbody>\r\n                                            {values?.items?.length > 0 && values?.items?.map((item, index) => (\r\n                                                <Tr key={item.id}>\r\n                                                    <Td className=\"text-center\">\r\n                                                        <IconButton\r\n                                                            icon={<CloseIcon />}\r\n                                                            onClick={() => handleRemoveItem(index)}\r\n                                                            colorScheme=\"red\"\r\n                                                            variant=\"outline\"\r\n                                                            size=\"sm\"\r\n                                                            style={{ fontSize: \"10px\" }}\r\n                                                        />\r\n                                                    </Td>\r\n                                                    <Td>{index + 1}</Td>\r\n                                                    <Td>\r\n                                                        <FormControl>\r\n                                                            <Input\r\n                                                                type=\"text\"\r\n                                                                value={item?.productName}\r\n                                                                onChange={(e) => handleChangeCalculation(index, 'productName', e.target.value)}\r\n                                                                size=\"sm\"\r\n                                                            />\r\n                                                        </FormControl>\r\n                                                    </Td>\r\n                                                    <Td>\r\n                                                        <FormControl>\r\n                                                            <Input\r\n                                                                type=\"number\"\r\n                                                                value={item?.qty}\r\n                                                                onChange={(e) => handleChangeCalculation(index, 'qty', Number(e.target.value))}\r\n                                                                size=\"sm\"\r\n                                                            />\r\n                                                        </FormControl>\r\n                                                    </Td>\r\n                                                    <Td>\r\n                                                        <FormControl>\r\n                                                            <Input\r\n                                                                type=\"number\"\r\n                                                                value={item?.rate}\r\n                                                                onChange={(e) => handleChangeCalculation(index, 'rate', Number(e.target.value))}\r\n                                                                size=\"sm\"\r\n                                                            />\r\n                                                        </FormControl>\r\n                                                    </Td>\r\n                                                    <Td style={{ display: \"flex\" }}>\r\n                                                        <FormControl>\r\n                                                            <Input\r\n                                                                type=\"number\"\r\n                                                                value={item?.discount}\r\n                                                                onChange={(e) => handleChangeCalculation(index, 'discount', Number(e.target.value))}\r\n                                                                size=\"sm\"\r\n                                                                disabled={item?.discountType === \"none\"}\r\n                                                            />\r\n                                                            <Select\r\n                                                                value={item?.discountType}\r\n                                                                onChange={(e) => { handleChangeCalculation(index, 'discountType', e.target.value); }}\r\n                                                                size=\"sm\"\r\n                                                            >\r\n                                                                <option value=\"none\">none</option>\r\n                                                                <option value=\"percent\">%</option>\r\n                                                                <option value=\"flatAmount\">{values?.currency}</option>\r\n                                                            </Select>\r\n                                                        </FormControl>\r\n                                                    </Td>\r\n                                                    <Td>\r\n                                                        <FormControl>\r\n                                                            <Input\r\n                                                                type=\"number\"\r\n                                                                value={item?.amount}\r\n                                                                readOnly\r\n                                                                size=\"sm\"\r\n                                                            />\r\n                                                        </FormControl>\r\n                                                    </Td>\r\n                                                </Tr>\r\n                                            ))}\r\n                                            <Tr>\r\n                                                <Td colSpan={4} display=\"flex\" justifyContent={\"end\"}>\r\n                                                    <IconButton\r\n                                                        icon={<AddIcon />}\r\n                                                        onClick={handleAddItem}\r\n                                                        colorScheme=\"green\"\r\n                                                        variant=\"outline\"\r\n                                                        size=\"sm\"\r\n                                                        style={{ fontSize: \"10px\" }}\r\n                                                    />\r\n                                                </Td>\r\n                                                <Td></Td>\r\n                                                <Td></Td>\r\n                                                <Td></Td>\r\n                                            </Tr>\r\n                                        </Tbody>\r\n                                    </Table>\r\n                                </Box>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Total\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.total}\r\n                                    name=\"total\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Total'\r\n                                    fontWeight='500'\r\n                                    type='number'\r\n                                    borderColor={errors.total && touched.total ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.total && touched.total && errors.total}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Total Discount\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.discount}\r\n                                    name=\"discount\"\r\n                                    onBlur={handleBlur}\r\n                                    type='number'\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.discount && touched.discount ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.discount && touched.discount && errors.discount}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Subtotal\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.subtotal}\r\n                                    name=\"subtotal\"\r\n                                    type='number'\r\n                                    onChange={handleChange}\r\n                                    placeholder='Subtotal'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.subtotal && touched.subtotal ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.subtotal && touched.subtotal && errors.subtotal}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shipping}\r\n                                    name=\"shipping\"\r\n                                    type='number'\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shipping && touched.shipping ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shipping && touched.shipping && errors.shipping}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 10 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Shipping Tax\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.shippingTax}\r\n                                    name=\"shippingTax\"\r\n                                    onChange={handleChange}\r\n                                    placeholder='Shipping Tax'\r\n                                    type='number'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.shippingTax && touched.shippingTax ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.shippingTax && touched.shippingTax && errors.shippingTax}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 2 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px' visibility={\"hidden\"}>\r\n                                    -\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.ptax}\r\n                                    name=\"ptax\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.ptax && touched.ptax ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.ptax && touched.ptax ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"0\">0%</option>\r\n                                    <option value=\"10\">10%</option>\r\n                                    <option value=\"18\">18%</option>\r\n                                </Select>\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.ptax && touched.ptax && errors.ptax}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px' >\r\n                                    Tax\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.tax}\r\n                                    name=\"tax\"\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    type=\"number\"\r\n                                    placeholder='Tax'\r\n                                    borderColor={errors.tax && touched.tax ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.tax && touched.tax && errors.tax}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px' >\r\n                                    Grand Total\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    value={values.grandTotal}\r\n                                    name=\"grandTotal\"\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    type=\"number\"\r\n                                    placeholder='Grand Total'\r\n                                    borderColor={errors.grandTotal && touched.grandTotal ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' fontSize='sm' color={'red'}> {errors.grandTotal && touched.grandTotal && errors.grandTotal}</Text>\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </DrawerBody>\r\n                    <DrawerFooter>\r\n                        <Button sx={{ textTransform: \"capitalize\" }} size=\"sm\" disabled={isLoding ? true : false} variant=\"brand\" type=\"submit\" onClick={handleSubmit}                        >\r\n                            {isLoding ? <Spinner /> : 'Save'}\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline\"\r\n                            colorScheme='red' size=\"sm\"\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                textTransform: \"capitalize\",\r\n                            }}\r\n                            onClick={handleCancel}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddEdit\r\n","import * as yup from 'yup'\r\n\r\nexport const quoteSchema = yup.object({\r\n    title: yup.string().required(\"Title Is required\"),\r\n    quoteStage: yup.string().required(\"Quote Stage Is required\"),\r\n    validUntil: yup.string().required(\"Valid Until Is required\"),\r\n    shippingPostalcode: yup.string().matches(/^\\d{6}$/, 'Shipping Postal Code must be exactly 6 digits').notRequired(),\r\n    billingPostalcode: yup.string().matches(/^\\d{6}$/, 'Billing Postal Code must be exactly 6 digits').notRequired(),\r\n})"],"names":["props","_values$items","_values$items2","isOpen","size","onClose","type","setAction","selectedId","contactId","isLoding","setIsLoding","useState","userModel","setUserModel","opprtunityModel","setOpprtunityModel","userData","setUserData","accountModel","setAccountModel","contactModel","setContactModel","quotesDetails","setQuotesDetails","dispatch","useDispatch","user","JSON","parse","localStorage","getItem","accountAccess","contactAccess","opportunityAccess","HasAccess","opportunityList","useSelector","state","_state$opportunityDat","_state$opportunityDat2","opportunityData","data","accountList","_state$accountData","_state$accountData$da","accountData","contactList","_state$contactData","contactData","initialValues","title","oppotunity","quoteStage","invoiceStatus","validUntil","assignedTo","paymentTerms","approvalStatus","nonPrimaryEmail","approvalIssues","terms","description","account","contact","billingStreet","shippingStreet","billingCity","shippingCity","billingState","shippingState","billingPostalCode","shippingPostalCode","billingCountry","shippingCountry","isCheck","currency","total","discount","subtotal","shipping","shippingTax","ptax","tax","grandTotal","discountType","items","createBy","_id","modifiedBy","handleCancel","formik","resetForm","useFormik","validationSchema","quoteSchema","enableReinitialize","onSubmit","values","_ref","async","postApi","status","toast","success","pre","e","console","log","error","addData","putApi","editData","modifiedDate","Date","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","handleCheck","target","checked","calculateAmounts","totalAmount","reduce","sum","item","amount","totalDiscount","netAmount","Number","handleChangeCalculation","index","field","value","newItems","map","idx","updatedItem","includes","discountValue","rate","qty","calculateValues","useCallback","toFixed","useEffect","result","getApi","_result$data2","fetchQuotesDetails","role","_result$data","fetchData","length","undefined","fetchOpportunityData","fetchAccountData","_jsxs","children","_jsx","UserModel","fieldName","OpprtunityModel","AccountModel","ContactModel","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","alignItems","justifyContent","display","IconButton","onClick","icon","CloseIcon","DrawerBody","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","as","mt","md","FormLabel","ms","fontSize","fontWeight","mb","Text","color","Input","name","onChange","placeholder","borderColor","view","Flex","Select","opportunityName","ml","LiaMousePointerSolid","dayjs","format","firstName","lastName","Textarea","resize","Checkbox","isChecked","visibility","disabled","onBlur","selected","Box","Table","variant","backgroundColor","Thead","Tr","Th","Tbody","Td","className","filter","_","handleRemoveItem","colorScheme","style","FormControl","productName","readOnly","id","AddIcon","handleAddItem","DrawerFooter","Button","sx","textTransform","Spinner","marginLeft","yup","required","shippingPostalcode","matches","notRequired","billingPostalcode"],"sourceRoot":""}