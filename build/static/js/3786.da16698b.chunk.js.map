{"version":3,"file":"static/js/3786.da16698b.chunk.js","mappings":"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","sources":["components/commonTableModel/Contact.js","views/admin/meeting/components/MeetingAdvanceSearch.js","views/admin/meeting/index.js"],"sourcesContent":["import {\r\n  Box, Checkbox,\r\n  Flex, Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\n\r\n// Custom components\r\nimport Card from \"components/card/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport Pagination from \"components/pagination/Pagination\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\n\r\nexport default function ContactTable(props) {\r\n  const { columnsData, tableData, title, type, selectedValues, setSelectedValues } = props;\r\n\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n  const data = useMemo(() => tableData, [tableData]);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n  const [gopageValue, setGopageValue] = useState()\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n  if (pageOptions.length < gopageValue) {\r\n    setGopageValue(pageOptions.length)\r\n  }\r\n\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n\r\n  const handleCheckboxChange = (event, value) => {\r\n    if (type === \"multi\") {\r\n      if (event.target.checked) {\r\n        setSelectedValues((prevSelectedValues) => [...prevSelectedValues, value]);\r\n      } else {\r\n        setSelectedValues((prevSelectedValues) =>\r\n          prevSelectedValues.filter((selectedValue) => selectedValue !== value)\r\n        );\r\n      }\r\n    } else {\r\n      if (event.target.checked) {\r\n        setSelectedValues(value);\r\n      } else {\r\n        setSelectedValues(null);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Card\r\n      direction='column'\r\n      w='100%'\r\n      px='0px'\r\n      style={{ border: '1px solid gray.200' }}\r\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n      <Flex px='25px' justify='space-between' mb='20px' align='center'>\r\n        <Text\r\n          color={textColor}\r\n          fontSize='22px'\r\n          fontWeight='700'\r\n          lineHeight='100%'>\r\n          {title}  (<CountUpComponent key={data?.length} targetNumber={data?.length} />)\r\n        </Text>\r\n      </Flex>\r\n      <Box overflowY={'auto'} className=\"table-container-property\" >\r\n+\r\n+        <Table  {...getTableProps()} variant='simple' color='gray.500' mb='24px'>\r\n          <Thead zIndex={1}>\r\n            {headerGroups?.map((headerGroup, index) => (\r\n              <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                {headerGroup.headers.map((column, index) => (\r\n\r\n                  <Th\r\n                    {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                    pe=\"10px\"\r\n                    key={index}\r\n                    borderColor={borderColor}\r\n                  >\r\n                    <Flex\r\n                      align=\"center\"\r\n                      justifyContent={column.center ? \"center\" : \"start\"}\r\n                      fontSize={{ sm: \"14px\", lg: \"16px\" }}\r\n                      color=\" secondaryGray.900\"\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\", marginRight: \"8px\" }}>\r\n                        {column.render(\"Header\")}\r\n                      </span>\r\n\r\n                      {column.isSortable !== false && (\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                        </span>\r\n                      )}\r\n                    </Flex>\r\n                  </Th>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Thead>\r\n          <Tbody  {...getTableBodyProps()}>\r\n            {data?.length === 0 && (\r\n +\r\n +             <Tr>\r\n                <Td colSpan={columns.length}>\r\n                  img\r\n                </Td>\r\n              </Tr>\r\n            )}\r\n            {page?.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <Tr {...row?.getRowProps()} key={index}>\r\n                  {row?.cells?.map((cell, index) => {\r\n                    let data = \"\";\r\n                    if (cell?.column.Header === \"#\") {\r\n                      data = (\r\n                        <Flex align=\"center\">\r\n                          {type === \"multi\" ? <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues.includes(cell?.value)} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" /> :\r\n                            <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues === cell?.value} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" />}\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.row?.index + 1}\r\n                          </Text>\r\n                        </Flex>\r\n                      );\r\n                    } else if (cell?.column.Header === \"title\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"first Name\") {\r\n                      data = (\r\n                        // <Link to={`/contactView/${cell?.row?.original._id}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          // sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                        // </Link>\r\n                      );\r\n                    } else if (cell?.column.Header === \"last Name\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"phone Number\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Email Address\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"physical Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"mailing Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Contact Method\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Td\r\n                        {...cell?.getCellProps()}\r\n                        key={index}\r\n                        fontSize={{ sm: \"14px\" }}\r\n                        minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                        borderColor='transparent'>\r\n                        {data}\r\n                      </Td>\r\n                    );\r\n                  })}\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      {data?.length > 5 && <Pagination gotoPage={gotoPage} gopageValue={gopageValue} setGopageValue={setGopageValue} pageCount={pageCount} canPreviousPage={canPreviousPage} previousPage={previousPage} canNextPage={canNextPage} pageOptions={pageOptions} setPageSize={setPageSize} nextPage={nextPage} pageSize={pageSize} pageIndex={pageIndex} />}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Text, Button, } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport moment from 'moment';\r\nimport { getSearchData, setGetTagValues, setSearchValue } from '../../../../redux/slices/advanceSearchSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst MeetingAdvanceSearch = (props) => {\r\n    const { allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchbox } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const initialValues = {\r\n        agenda: '',\r\n        createBy: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        timeStartDate: '',\r\n        timeEndDate: ''\r\n    }\r\n    const validationSchema = yup.object({\r\n        agenda: yup.string(),\r\n        createBy: yup.string().email('Invalid email format'),\r\n    });\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            dispatch(setSearchValue(values))\r\n            dispatch(getSearchData({ values: values, allData: allData, type: 'Meeting' }))\r\n            // const searchResult = allData?.filter(\r\n            //     (item) => {\r\n            //         const itemDate = new Date(item.dateTime);\r\n            //         const momentDate = moment(itemDate).format('YYYY-MM-DD');\r\n            //         const timeItemDate = new Date(item.timestamp);\r\n            //         const timeMomentDate = moment(timeItemDate).format('YYYY-MM-DD');\r\n            //         return (\r\n            //             (!values?.agenda || (item?.agenda && item?.agenda.toLowerCase().includes(values?.agenda?.toLowerCase()))) &&\r\n            //             (!values?.createBy || (item?.createBy && item?.createBy.toLowerCase().includes(values?.createBy?.toLowerCase()))) &&\r\n            //             (!values?.startDate || (momentDate >= values.startDate)) &&\r\n            //             (!values?.endDate || (momentDate <= values.endDate)) &&\r\n            //             (!values.timeStartDate || (timeMomentDate >= values.timeStartDate)) &&\r\n            //             (!values.timeEndDate || (timeMomentDate <= values.timeEndDate)))\r\n            //     }\r\n            // )\r\n\r\n            const dateFrom = `${values?.startDate && `From: ${values?.startDate}`}${values?.endDate && ` To: ${values?.endDate}`}`;\r\n            const timeDateFrom = `${values?.timeStartDate && `From: ${values?.timeStartDate}`}${values?.timeEndDate && ` To: ${values?.timeEndDate}`}`\r\n            // let getValue = [values.agenda, values?.createBy, (values?.startDate || values?.endDate) && dateFrom, (values?.timeStartDate || values?.timeEndDate) && timeDateFrom].filter(value => value);\r\n\r\n            const getValue = [\r\n                {\r\n                    name: [\"agenda\"],\r\n                    value: values.agenda\r\n                },\r\n                {\r\n                    name: [\"createBy\"],\r\n                    value: values.createBy\r\n                },\r\n                {\r\n                    name: [\"startDate\", \"endDate\"],\r\n                    value: dateFrom\r\n                },\r\n\r\n                {\r\n                    name: [\"timeStartDate\", \"timeEndDate\"],\r\n                    value: timeDateFrom\r\n                }\r\n            ]\r\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\r\n            // setSearchedData(searchResult);\r\n            setDisplaySearchData(true)\r\n            setAdvanceSearch(false)\r\n            resetForm();\r\n            setSearchbox('');\r\n        }\r\n    })\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\r\n\r\n    return (\r\n        <>\r\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Advance Search</ModalHeader>\r\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\r\n                    <ModalBody>\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Agenda\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.agenda}\r\n                                    name=\"agenda\"\r\n                                    placeholder='Enter Lead Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.agenda && touched.agenda && errors.agenda}</Text>\r\n\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2} >\r\n                                    Create By\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.createBy}\r\n                                    name=\"createBy\"\r\n                                    placeholder='Enter Lead Email'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.createBy && touched.createBy && errors.createBy}</Text>\r\n\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Date & time\r\n                                </FormLabel>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    From\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.startDate}\r\n                                    type=\"date\"\r\n                                    name='startDate'\r\n                                    fontWeight='500'\r\n                                />\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    To\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.endDate}\r\n                                    min={values.startDate}\r\n                                    type=\"date\"\r\n                                    name='endDate'\r\n                                    fontWeight='500'\r\n                                />\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Time Stamp\r\n                                </FormLabel>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    From\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.timeStartDate}\r\n                                    type=\"date\"\r\n                                    name='timeStartDate'\r\n                                    fontWeight='500'\r\n                                />\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    To\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.timeEndDate}\r\n                                    min={values.timeStartDate}\r\n                                    type=\"date\"\r\n                                    name='timeEndDate'\r\n                                    fontWeight='500'\r\n                                />\r\n                            </GridItem>\r\n\r\n                        </Grid>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\r\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MeetingAdvanceSearch\r\n","import { useEffect, useState } from 'react';\r\nimport { DeleteIcon, ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\r\nimport { getApi } from 'services/api';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport CommonCheckTable from '../../../components/reactTable/checktable';\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { CiMenuKebab } from 'react-icons/ci';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport MeetingAdvanceSearch from './components/MeetingAdvanceSearch';\r\nimport AddMeeting from './components/Addmeeting';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi } from 'services/api';\r\nimport { toast } from 'react-toastify';\r\nimport { fetchMeetingData } from '../../../redux/slices/meetingSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Index = () => {\r\n    const title = \"Meeting\";\r\n    const navigate = useNavigate()\r\n    const [action, setAction] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\r\n    const [searchboxOutside, setSearchboxOutside] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [deleteMany, setDeleteMany] = useState(false);\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [displaySearchData, setDisplaySearchData] = useState(false);\r\n    const [searchedData, setSearchedData] = useState([]);\r\n    const [permission] = HasAccess(['Meetings'])\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const actionHeader = {\r\n        Header: \"Action\", isSortable: false, center: true,\r\n        cell: ({ row }) => (\r\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\r\n                <Menu isLazy  >\r\n                    <MenuButton><CiMenuKebab /></MenuButton>\r\n                    <MenuList minW={'fit-content'} transform={\"translate(1520px, 173px);\"}>\r\n\r\n                        {permission?.view && <MenuItem py={2.5} color={'green'}\r\n                            onClick={() => navigate(`/metting/${row?.values._id}`)}\r\n                            icon={<ViewIcon fontSize={15} />}>View</MenuItem>}\r\n                        {permission?.delete && <MenuItem py={2.5} color={'red'} onClick={() => { setDeleteMany(true); setSelectedValues([row?.values?._id]); }} icon={<DeleteIcon fontSize={15} />}>Delete</MenuItem>}\r\n                    </MenuList>\r\n                </Menu>\r\n            </Text>\r\n        )\r\n    }\r\n    const tableColumns = [\r\n        {\r\n            Header: \"#\",\r\n            accessor: \"_id\",\r\n            isSortable: false,\r\n            width: 10\r\n        },\r\n        {\r\n            Header: 'Agenda', accessor: 'agenda', cell: (cell) => (\r\n                <Link to={`/metting/${cell?.row?.values._id}`}> <Text\r\n                    me=\"10px\"\r\n                    sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                    color='brand.600'\r\n                    fontSize=\"sm\"\r\n                    fontWeight=\"700\"\r\n                >\r\n                    {cell?.value || ' - '}\r\n                </Text></Link>)\r\n        },\r\n        { Header: \"Date & Time\", accessor: \"dateTime\", },\r\n        { Header: \"Time Stamp\", accessor: \"timestamp\", },\r\n        { Header: \"Create By\", accessor: \"createdByName\", },\r\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\r\n\r\n    ];\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        const result = await dispatch(fetchMeetingData())\r\n        if (result.payload.status === 200) {\r\n            setData(result?.payload?.data);\r\n        } else {\r\n            toast.error(\"Failed to fetch data\", \"error\");\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    const handleDeleteMeeting = async (ids) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await deleteManyApi('api/meeting/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                setSelectedValues([])\r\n                setDeleteMany(false)\r\n                setAction((pre) => !pre)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [action])\r\n\r\n    return (\r\n        <div>\r\n            <CommonCheckTable\r\n                title={title}\r\n                isLoding={isLoding}\r\n                columnData={tableColumns ?? []}\r\n                // dataColumn={dataColumn ?? []}\r\n                allData={data ?? []}\r\n                tableData={data}\r\n                searchDisplay={displaySearchData}\r\n                setSearchDisplay={setDisplaySearchData}\r\n                searchedDataOut={searchedData}\r\n                setSearchedDataOut={setSearchedData}\r\n                tableCustomFields={[]}\r\n                access={permission}\r\n                // action={action}\r\n                // setAction={setAction}\r\n                // selectedColumns={selectedColumns}\r\n                // setSelectedColumns={setSelectedColumns}\r\n                // isOpen={isOpen}\r\n                // onClose={onClose}\r\n                onOpen={onOpen}\r\n                selectedValues={selectedValues}\r\n                setSelectedValues={setSelectedValues}\r\n                setDelete={setDeleteMany}\r\n                AdvanceSearch={\r\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\r\n                }\r\n                getTagValuesOutSide={getTagValuesOutSide}\r\n                searchboxOutside={searchboxOutside}\r\n                setGetTagValuesOutside={setGetTagValuesOutside}\r\n                setSearchboxOutside={setSearchboxOutside}\r\n                handleSearchType=\"MeetingSearch\"\r\n            />\r\n\r\n            <MeetingAdvanceSearch\r\n                advanceSearch={advanceSearch}\r\n                setAdvanceSearch={setAdvanceSearch}\r\n                setSearchedData={setSearchedData}\r\n                setDisplaySearchData={setDisplaySearchData}\r\n                allData={data ?? []}\r\n                setAction={setAction}\r\n                setGetTagValues={setGetTagValuesOutside}\r\n                setSearchbox={setSearchboxOutside}\r\n            />\r\n            <AddMeeting setAction={setAction} isOpen={isOpen} onClose={onClose} />\r\n\r\n            {/* Delete model */}\r\n            <CommonDeleteModel isOpen={deleteMany} onClose={() => setDeleteMany(false)} type='Meetings' handleDeleteData={handleDeleteMeeting} ids={selectedValues} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["ContactTable","props","columnsData","tableData","title","type","selectedValues","setSelectedValues","columns","useMemo","data","gopageValue","setGopageValue","JSON","parse","localStorage","getItem","useState","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","length","textColor","useColorModeValue","borderColor","handleCheckboxChange","event","value","target","checked","prevSelectedValues","filter","selectedValue","_jsxs","Card","direction","w","px","style","border","overflowX","sm","lg","children","_jsx","Flex","justify","mb","align","Text","color","fontSize","fontWeight","lineHeight","CountUpComponent","targetNumber","Box","overflowY","className","Table","variant","Thead","zIndex","map","headerGroup","index","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","isSortable","getSortByToggleProps","pe","justifyContent","center","textTransform","marginRight","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","colSpan","row","_row$cells","getRowProps","cells","cell","_cell$row","Header","Checkbox","colorScheme","isChecked","includes","onChange","me","getCellProps","minW","md","Pagination","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchbox","dispatch","useDispatch","validationSchema","yup","agenda","createBy","email","formik","useFormik","initialValues","startDate","endDate","timeStartDate","timeEndDate","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","dateFrom","timeDateFrom","getValue","name","setGetTagValues","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_Fragment","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","Grid","templateColumns","gap","GridItem","base","FormLabel","display","ms","mt","Input","onBlur","placeholder","min","ModalFooter","Button","size","mr","disabled","Spinner","Index","navigate","useNavigate","action","setAction","onOpen","useDisclosure","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","deleteMany","setDeleteMany","setIsLoding","setData","displaySearchData","searchedData","permission","HasAccess","actionHeader","textAlign","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","transform","view","MenuItem","py","_id","icon","ViewIcon","delete","_row$values","DeleteIcon","tableColumns","accessor","width","Link","to","sx","textDecoration","update","useEffect","async","result","fetchMeetingData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","columnData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","setDelete","AdvanceSearch","leftIcon","SearchIcon","handleSearchType","MeetingAdvanceSearch","AddMeeting","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","pre","console","log"],"sourceRoot":""}