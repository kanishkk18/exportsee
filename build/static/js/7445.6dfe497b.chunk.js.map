{"version":3,"file":"static/js/7445.6dfe497b.chunk.js","mappings":"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","sources":["components/footer/FooterAuth.js","layouts/auth/Default.js","views/auth/signIn/index.jsx"],"sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport {\r\n  Flex,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function Footer() {\r\n  let textColor = useColorModeValue(\"blue.700\", \"white\");\r\n  let linkColor = useColorModeValue({ base: \"gray.400\", lg: \"gray.400\" }, \"gray.400\");\r\n  return (\r\n    <Flex\r\n      zIndex='3'\r\n      flexDirection={{\r\n        base: \"column\",\r\n        lg: \"row\",\r\n      }}\r\n      alignItems={{\r\n        base: \"center\",\r\n        xl: \"start\",\r\n      }}\r\n     >\r\n     \r\n    \r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport { Box, Flex } from \"@chakra-ui/react\";\r\nimport Footer from \"components/footer/FooterAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FixedPlugin from \"components/fixedPlugin/FixedPlugin\";\r\n\r\nfunction AuthIllustration(props) {\r\n  const { children, illustrationBackground } = props;\r\n\r\n  return (\r\n    <Flex h=\"max-content\">\r\n      <Flex\r\n        h={{\r\n          sm: \"initial\",\r\n          md: \"unset\",\r\n          lg: \"100vh\",\r\n          xl: \"100vh\",\r\n        }}\r\n        w=\"100%\"\r\n        maxW={{ md: \"66%\", lg: \"1313px\" }}\r\n        mx=\"auto\"\r\n        pt={{ sm: \"50px\", md: \"0px\" }}\r\n        px={{ lg: \"30px\", xl: \"0px\" }}\r\n        ps={{ xl: \"70px\" }}\r\n        justifyContent=\"center\"\r\n        direction=\"column\"\r\n      >\r\n        {children}\r\n        <Box\r\n          display={{ base: \"none\", md: \"flex\" }}\r\n          h=\"100%\"\r\n          minH=\"100vh\"\r\n          w={{ lg: \"50vw\", \"2xl\": \"44vw\" }}\r\n          borderBottomLeftRadius={{ lg: \"80px\", xl: \"160px\" }}\r\n          justifyContent=\"center\"\r\n          position=\"absolute\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          overflow=\"hidden\"\r\n          right=\"0px\"\r\n        >\r\n          {illustrationBackground ? (\r\n            <Link to=\"#\" target=\"_blank\" style={{ height: \"100%\", width: \"100%\" }}>\r\n              {/* <Flex\r\n                bg={`url(${illustrationBackground})`}\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                w=\"100%\"\r\n                h=\"100%\"\r\n                bgSize=\"cover\"\r\n                bgPosition=\"50%\"\r\n              /> */}\r\n               <img\r\n      src=\"https://i.pinimg.com/736x/52/fa/1e/52fa1e5af83f30d9f8b3abaef66da4ec.jpg\"\r\n      alt=\"Illustration Background\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        objectFit: \"cover\",\r\n      }}\r\n    />\r\n            </Link>\r\n          ) : (\r\n            <div className=\"flex-1 w-full rounded-bl-[10rem] bg-gradient-to-br from-purple-400 via-blue-600 to-blue-700 p-8 hidden lg:flex flex-col items-center justify-center text-center\">\r\n              <div className=\"bg-white rounded-full p-8 mb-8\">\r\n                <div className=\"w-24 h-24 rounded-full bg-blue-600\" />\r\n              </div>\r\n              <h2 className=\"text-4xl font-bold text-white mb-4\">Exportseese</h2>\r\n              <Link\r\n                to=\"/\"\r\n                className=\"text-white/80 hover:text-white bg-white/10 px-6 py-3 rounded-full\"\r\n              >\r\n                <span className=\"block font-semibold\">Exportseese.com</span>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </Box>\r\n        <Footer />\r\n      </Flex>\r\n      <FixedPlugin/>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default AuthIllustration;\r\n","\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  FormControl,\r\n  FormErrorMessage,          \r\n  FormLabel,\r\n  Heading,\r\n  Icon,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport DefaultAuth from \"layouts/auth/Default\";\r\n// Assets\r\n\r\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\r\nimport { RiEyeCloseLine } from \"react-icons/ri\";\r\nimport { postApi } from \"services/api\";\r\nimport { loginSchema } from \"schema\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchImage } from \"../../../redux/slices/imageSlice\";\r\nimport { setUser } from \"../../../redux/slices/localSlice\";\r\nimport { GoogleOneTap, SignedIn, SignedOut, SignInButton, UserButton } from '@clerk/clerk-react'\r\nimport { BsGoogle } from \"react-icons/bs\";\r\n\r\n\r\n\r\nfunction SignIn() {\r\n  // Chakra color mode\r\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\r\n  const textColorSecondary = \"gray.400\";\r\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\r\n  const [isLoding, setIsLoding] = React.useState(false);\r\n  const [checkBox, setCheckBox] = React.useState(true);\r\n  \r\n  const dispatch = useDispatch();\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    // Dispatch the fetchRoles action on component mount\r\n    dispatch(fetchImage(\"?isActive=true\"));\r\n  }, [dispatch]);\r\n\r\n  const image = useSelector((state) => state?.images?.images);\r\n\r\n  const [show, setShow] = React.useState(false);\r\n  const showPass = () => setShow(!show);\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n  const {\r\n    errors,\r\n    values,\r\n    touched,\r\n    handleBlur,\r\n    handleChange,\r\n    resetForm,\r\n    handleSubmit,\r\n  } = useFormik({\r\n    initialValues: initialValues,\r\n    validationSchema: loginSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      login();\r\n    },\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const login = async () => {\r\n    try {\r\n      setIsLoding(true);\r\n      let response = await postApi(\"api/user/login\", values, checkBox);\r\n      if (response && response.status === 200) {\r\n        navigate(\"/superAdmin\");\r\n        toast.success(\"Login Successfully!\");\r\n        resetForm();\r\n        dispatch(setUser(response?.data?.user))\r\n      } else {\r\n        toast.error(response.response.data?.error);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setIsLoding(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n     \r\n    <DefaultAuth\r\n      illustrationBackground={image?.length > 0 && image[0]?.authImg}\r\n      image={image?.length > 0 && image[0]?.authImg}\r\n    >\r\n      <Flex\r\n        maxW={{ base: \"100%\", md: \"max-content\" }}\r\n        w=\"100%\"\r\n        mx={{ base: \"auto\", lg: \"0px\" }}\r\n        me=\"auto\"\r\n        h=\"fit-content\"\r\n        alignItems=\"start\"\r\n        justifyContent=\"center\"\r\n        mb={{ base: \"30px\", md: \"60px\" }}\r\n        px={{ base: \"25px\", md: \"0px\" }}\r\n        mt={{ base: \"40px\", md: \"14vh\" }}\r\n        flexDirection=\"column\"\r\n      >\r\n        <Box >\r\n        <div className=\"flex w-full mb-6 ml-10 flex-col justify-center gap-2 items-center text-center\">\r\n          <div className=\"flex justify-center items-center \">\r\n            <img\r\n              className=\"h-[60px] mb-4  rounded-full w-[60px] \"\r\n              src='https://res.cloudinary.com/dna3hwzre/image/upload/v1741499065/473408572_1590238345196986_2661325784945347044_n_ii9ax7.jpg' \r\n              alt=\"Logo\"\r\n            />\r\n          </div>\r\n            <h1 className=\"text-4xl mb-3 font-bold\">Welcome back</h1>\r\n          </div>\r\n        </Box>\r\n        <Flex\r\n          zIndex=\"2\"\r\n          direction=\"column\"\r\n          w={{ base: \"100%\", md: \"420px\" }}\r\n          maxW=\"100%\"\r\n          background=\"transparent\"\r\n          borderRadius=\"15px\"\r\n          mx={{ base: \"auto\", lg: \"unset\" }}\r\n          me=\"auto\"\r\n          mb={{ base: \"20px\", md: \"auto\" }}\r\n        >\r\n\r\n          {/* clerk button */}\r\n <SignedOut>\r\n  <Button className=\"bg-blue-400 gap-2 flex justify-center items-center mb-2\"> <BsGoogle/> <SignInButton /></Button>\r\n        \r\n      </SignedOut>\r\n              \r\n       <form onSubmit={handleSubmit}>\r\n            <FormControl isInvalid={errors.username && touched.username}>\r\n              <FormLabel\r\n                display=\"flex\"\r\n                ms=\"4px\"\r\n                fontSize=\"sm\"\r\n                fontWeight=\"500\"\r\n                color={textColor}\r\n                mb=\"8px\"\r\n              >\r\n                Email<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <Input\r\n              borderRadius={16}\r\n                fontSize=\"sm\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.username}\r\n                name=\"username\"\r\n                ms={{ base: \"0px\", md: \"0px\" }}\r\n                type=\"email\"\r\n                placeholder=\"exportsee@gmail.com\"\r\n                mb={errors.username && touched.username ? undefined : \"10px\"}\r\n                fontWeight=\"500\"\r\n                size=\"lg\"\r\n                borderColor={\r\n                  errors.username && touched.username ? \"red.300\" : null\r\n                }\r\n                className={\r\n                  errors.username && touched.username ? \"isInvalid\" : null\r\n                }\r\n              />\r\n              {errors.username && touched.username && (\r\n                <FormErrorMessage mb=\"24px\">\r\n                  {\" \"}\r\n                  {errors.username}\r\n                </FormErrorMessage>\r\n              )}\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              isInvalid={errors.password && touched.password}\r\n              mb=\"24px\"\r\n            >\r\n              <FormLabel\r\n                ms=\"4px\"\r\n                fontSize=\"sm\"\r\n                fontWeight=\"500\"\r\n                color={textColor}\r\n                display=\"flex\"\r\n              >\r\n                Password<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <InputGroup size=\"md\">\r\n                <Input\r\n                  isRequired={true}\r\n                  fontSize=\"sm\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  name=\"password\"\r\n                  mb={errors.password && touched.password ? undefined : \"10px\"}\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  size=\"lg\"\r\n                  variant=\"auth\"\r\n                  type={show ? \"text\" : \"password\"}\r\n                  borderColor={\r\n                    errors.password && touched.password ? \"red.300\" : null\r\n                  }\r\n                  className={\r\n                    errors.password && touched.password ? \"isInvalid\" : null\r\n                  }\r\n                />\r\n                <InputRightElement display=\"flex\" alignItems=\"center\" mt=\"4px\">\r\n                  <Icon\r\n                    color={textColorSecondary}\r\n                    _hover={{ cursor: \"pointer\" }}\r\n                    as={show ? RiEyeCloseLine : MdOutlineRemoveRedEye}\r\n                    onClick={showPass}\r\n                  />\r\n                </InputRightElement>\r\n              </InputGroup>\r\n              {errors.password && touched.password && (\r\n                <FormErrorMessage mb=\"24px\">\r\n                  {\" \"}\r\n                  {errors.password}\r\n                </FormErrorMessage>\r\n              )}\r\n              <Flex justifyContent=\"space-between\" align=\"center\" mb=\"24px\">\r\n                <FormControl display=\"flex\" alignItems=\"center\">\r\n                  <Checkbox\r\n                    onChange={(e) => setCheckBox(e.target.checked)}\r\n                    id=\"remember-login\"\r\n                    value={checkBox}\r\n                    defaultChecked\r\n                    colorScheme=\"brandScheme\"\r\n                    me=\"10px\"\r\n                  />\r\n                  <FormLabel\r\n                    htmlFor=\"remember-login\"\r\n                    mb=\"0\"\r\n                    fontWeight=\"normal\"\r\n                    color={textColor}\r\n                    fontSize=\"sm\"\r\n                  >\r\n                    Keep me logged in\r\n                  </FormLabel>\r\n                </FormControl>\r\n              </Flex>\r\n\r\n              <Flex\r\n                justifyContent=\"space-between\"\r\n                align=\"center\"\r\n                mb=\"20px\"\r\n              ></Flex>\r\n              <button\r\n                fontSize=\"sm\"\r\n                type=\"submit\"\r\n                \r\n                className=\"bg-[#0F172A] mb-5 inline-flex items-center justify-center whitespace-nowrap rounded-[14px] text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50  text-white hover:bg-muted/40 h-12 px-4 py-2 w-full\"\r\n                disabled={isLoding ? true : false}\r\n              >\r\n                {isLoding ? <Spinner /> : \"Continue\"}\r\n              </button>\r\n              <p className=\"text-[14px] ml-3 text-gray-600 text-center\">  Hey! Login to continue with your Exportseese.</p>\r\n\r\n            </FormControl>\r\n            \r\n          </form>\r\n       \r\n    \r\n        </Flex>\r\n      </Flex>\r\n    </DefaultAuth>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"names":["Footer","useColorModeValue","base","lg","_jsx","Flex","zIndex","flexDirection","alignItems","xl","props","children","illustrationBackground","_jsxs","h","sm","md","w","maxW","mx","pt","px","ps","justifyContent","direction","Box","display","minH","borderBottomLeftRadius","position","overflow","right","Link","to","target","style","height","width","src","alt","objectFit","className","FixedPlugin","_image$","_image$2","textColor","brandStars","isLoding","setIsLoding","React","checkBox","setCheckBox","dispatch","useDispatch","useEffect","fetchImage","image","useSelector","state","_state$images","images","show","setShow","errors","values","touched","handleBlur","handleChange","resetForm","handleSubmit","useFormik","initialValues","username","password","validationSchema","loginSchema","onSubmit","_ref","login","navigate","useNavigate","async","response","postApi","_response$data","_response$response$da","status","toast","success","setUser","data","user","error","e","console","log","DefaultAuth","length","authImg","me","mb","mt","background","borderRadius","SignedOut","Button","BsGoogle","SignInButton","FormControl","isInvalid","FormLabel","ms","fontSize","fontWeight","color","Text","Input","onChange","onBlur","value","name","type","placeholder","undefined","size","borderColor","FormErrorMessage","InputGroup","isRequired","variant","InputRightElement","Icon","_hover","cursor","as","RiEyeCloseLine","MdOutlineRemoveRedEye","onClick","showPass","align","Checkbox","checked","id","defaultChecked","colorScheme","htmlFor","disabled","Spinner"],"sourceRoot":""}