{"version":3,"file":"static/js/5563.f16d9a00.chunk.js","mappings":"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","sources":["views/admin/lead/View.js","views/admin/lead/Add.js","views/admin/lead/Edit.js"],"sourcesContent":["import { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n    Button, Flex, Grid, GridItem, Heading, Menu, MenuButton, MenuDivider, MenuItem, MenuList,\r\n    Tab,\r\n    TabList,\r\n    TabPanel,\r\n    TabPanels,\r\n    Tabs,\r\n    Text,\r\n    VStack,\r\n    useColorModeValue,\r\n    useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport FolderTreeView from 'components/FolderTreeView/folderTreeView';\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport { constant } from \"constant\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getApi } from \"services/api\";\r\nimport PhoneCall from \"../contact/components/phonCall\";\r\nimport AddEmailHistory from \"../emailHistory/components/AddEmail\";\r\nimport AddMeeting from \"../meeting/components/Addmeeting\";\r\nimport AddPhoneCall from \"../phoneCall/components/AddPhoneCall\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport DataNotFound from \"components/notFoundData\";\r\nimport CustomView from \"utils/customView\";\r\nimport AddDocumentModal from \"utils/addDocumentModal\";\r\nimport CommonDeleteModel from \"components/commonDeleteModel\";\r\nimport { deleteApi } from \"services/api\";\r\nimport CommonCheckTable from \"components/reactTable/checktable\";\r\nimport moment from 'moment';\r\nimport AddEdit from '../task/components/AddEdit'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchLeadCustomFiled } from \"../../../redux/slices/leadCustomFiledSlice\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\n\r\nconst View = () => {\r\n    const param = useParams()\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n\r\n    const [data, setData] = useState()\r\n    const [allData, setAllData] = useState([])\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [addMeeting, setMeeting] = useState(false);\r\n    const [showEmail, setShowEmail] = useState(false);\r\n    const [showCall, setShowCall] = useState(false);\r\n    const [showTasks, setShowTasks] = useState(false);\r\n    const [showMeetings, setShowMeetings] = useState(false);\r\n    const [addDocument, setAddDocument] = useState(false);\r\n    const [action, setAction] = useState(false)\r\n    // const [leadData, setLeadData] = useState([])\r\n    const [selectedTab, setSelectedTab] = useState(0);\r\n    const [taskModel, setTaskModel] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const size = \"lg\";\r\n\r\n    const [addEmailHistory, setAddEmailHistory] = useState(false);\r\n    const [addPhoneCall, setAddPhoneCall] = useState(false);\r\n\r\n    const leadData = useSelector((state) => state?.leadCustomFiled?.data.data)\r\n\r\n    const [permission, taskPermission, meetingPermission, callAccess, emailAccess, taskAccess, meetingAccess] = HasAccess(['Leads', 'Tasks', 'Meetings', 'Calls', 'Emails', 'Tasks', 'Meetings']);\r\n\r\n\r\n    const columnsDataColumns = [\r\n        { Header: \"sender\", accessor: \"senderName\", },\r\n        {\r\n            Header: \"recipient\", accessor: \"createByName\", cell: (cell) => (\r\n                <Link to={`/Email/${cell?.row?.original?._id}`}>\r\n                    <Text\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value || ' - '}\r\n                    </Text></Link>)\r\n        },\r\n        {\r\n            Header: \"time stamp\", accessor: \"timestamp\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {moment(cell?.value).fromNow()}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Created\", accessor: \"createBy\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {moment(cell?.row?.values.timestamp).format('h:mma (DD/MM)')}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n    const callColumns = [\r\n        { Header: \"sender\", accessor: \"senderName\", },\r\n        {\r\n            Header: \"recipient\", accessor: \"createByName\", cell: (cell) => (\r\n                <Link to={`/phone-call/${cell?.row?.original?._id}`}>\r\n                    <Text\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value || ' - '}\r\n                    </Text></Link>)\r\n        },\r\n        {\r\n            Header: \"time stamp\", accessor: \"timestamp\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {moment(cell?.value).fromNow()}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Created\", accessor: \"createBy\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {moment(cell?.row?.values.timestamp).format('h:mma (DD/MM)')}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n    ];\r\n    const MeetingColumns = [\r\n        {\r\n            Header: 'Agenda', accessor: 'agenda', cell: (cell) => (\r\n                <Link to={`/metting/${cell?.row?.original?._id}`}>\r\n                    <Text\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value || ' - '}\r\n                    </Text></Link>)\r\n        },\r\n        { Header: \"date Time\", accessor: \"dateTime\", },\r\n        {\r\n            Header: \"times tamp\", accessor: \"timestamp\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {moment(cell?.value).fromNow()}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: \"create By\", accessor: \"createdByName\", },\r\n    ];\r\n    const taskColumns = [\r\n        {\r\n            Header: 'Title', accessor: 'title', type: 'text', formikType: '', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => navigate(`/view/${cell?.row?.original._id}`)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: \"Category\", accessor: \"category\", },\r\n        { Header: \"Assign To\", accessor: \"assignToName\", },\r\n        { Header: \"Start Date\", accessor: \"start\", },\r\n        { Header: \"End Date\", accessor: \"end\", },\r\n    ];\r\n\r\n\r\n    const handleTabChange = (index) => {\r\n        setSelectedTab(index);\r\n    };\r\n    const generatePDF = () => {\r\n        const element = document.getElementById(\"reports\");\r\n        if (element) {\r\n            element.style.display = 'block';\r\n            element.style.width = '100%'; // Adjust width for mobile\r\n            element.style.height = 'auto';\r\n            // setTimeout(() => {\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Lead_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    element.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n        }\r\n    };\r\n\r\n    const download = async (data) => {\r\n        if (data) {\r\n            let result = await getApi(`api/document/download/`, data)\r\n            if (result && result.status === 200) {\r\n                window.open(`${constant.baseUrl}api/document/download/${data}`)\r\n                toast.success('file Download successful')\r\n            } else if (result && result.response.status === 404) {\r\n                toast.error('file Not Found')\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchData = async (i) => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/lead/view/', param.id)\r\n        setData(response.data?.lead);\r\n        setAllData(response.data);\r\n        setIsLoding(false)\r\n        setSelectedTab(i)\r\n    }\r\n\r\n    const handleDeleteLead = async (id) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await deleteApi('api/lead/delete/', id)\r\n            if (response.status === 200) {\r\n                setDelete(false)\r\n                setAction((pre) => !pre)\r\n                navigate('/lead')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n        dispatch(fetchLeadCustomFiled());\r\n    }, [action])\r\n\r\n\r\n    function toCamelCase(text) {\r\n        return text?.replace(/([a-z])([A-Z])/g, '$1 $2');\r\n    }\r\n\r\n    const firstValue = Object?.values(param)[0];\r\n    const splitValue = firstValue?.split('/')\r\n\r\n    return (\r\n        <>\r\n\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> :\r\n                <>\r\n                    <Heading size=\"lg\" mt={0} m={3}>\r\n                        {data?.leadName || \"\"}\r\n                    </Heading>\r\n                    <Tabs onChange={handleTabChange} index={selectedTab}>\r\n                        <Grid templateColumns={'repeat(12, 1fr)'} mb={3} gap={1}>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <TabList sx={{\r\n                                    border: \"none\",\r\n                                    '& button:focus': { boxShadow: 'none', },\r\n                                    '& button': {\r\n                                        margin: { sm: \"0 3px\", md: \"0 5px\" }, padding: { sm: \"5px\", md: \"8px\" }, border: '2px solid #8080803d', borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\", borderBottom: 0, fontSize: { sm: \"12px\", md: \"16px\" }\r\n                                    },\r\n                                    '& button[aria-selected=\"true\"]': {\r\n                                        border: \"2px solid brand.200\", borderBottom: 0, zIndex: '0'\r\n                                    },\r\n                                }} >\r\n                                    <Tab>Information</Tab>\r\n                                    {(emailAccess?.view || callAccess?.view || taskAccess?.view || meetingAccess?.view) && <Tab> Communication</Tab>}\r\n                                    <Tab>Document</Tab>\r\n                                </TabList>\r\n\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }} mt={{ sm: \"3px\", md: \"5px\" }} >\r\n                                <Flex justifyContent={\"right\"}>\r\n                                    <Menu>\r\n                                        {(user.role === 'superAdmin' || (permission?.create || permission?.update || permission?.delete)) && <MenuButton size=\"sm\" variant=\"outline\" colorScheme='blackAlpha' mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                            Actions\r\n                                        </MenuButton>}\r\n                                        <MenuDivider />\r\n                                        <MenuList minWidth={2}>\r\n                                            {(user.role === 'superAdmin' || permission?.create) && <MenuItem color={'blue'} onClick={() => onOpen()} alignItems={\"start\"} icon={<AddIcon />}  >Add</MenuItem>}\r\n                                            {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => setEdit(true)} alignItems={\"start\"} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                            <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n                                            {(user.role === 'superAdmin' || permission?.delete) && <>\r\n                                                <MenuDivider />\r\n                                                <MenuItem alignItems={\"start\"} color={'red'} onClick={() => setDelete(true)} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                            </>}\r\n                                        </MenuList>\r\n                                    </Menu>\r\n                                    <Link to=\"/lead\">\r\n                                        <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\">\r\n                                            Back\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Flex>\r\n                            </GridItem>\r\n                        </Grid>\r\n\r\n                        <TabPanels>\r\n                            <TabPanel pt={4} p={0}>\r\n                                <CustomView data={leadData?.[0]} fieldData={data} toCamelCase={toCamelCase} moduleId={leadData?.[0]?._id} fetchData={fetchData} id=\"reports\" />\r\n                            </TabPanel>\r\n                            <TabPanel pt={4} p={0}>\r\n                                <GridItem colSpan={{ base: 4 }} >\r\n                                    <Grid overflow={'hidden'} templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                        <Grid templateColumns={'repeat(12, 1fr)'} gap={4}>\r\n                                            {emailAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                                <Card >\r\n                                                    <CommonCheckTable\r\n                                                        title={\"Email\"}\r\n                                                        isLoding={isLoding}\r\n                                                        columnData={columnsDataColumns ?? []}\r\n                                                        // dataColumn={columnsDataColumns ?? []}\r\n                                                        allData={showEmail ? allData.Email : allData?.Email?.length > 0 ? [allData.Email[0]] : []}\r\n                                                        tableData={showEmail ? allData.Email : allData?.Email?.length > 0 ? [allData.Email[0]] : []}\r\n                                                        AdvanceSearch={false}\r\n                                                        dataLength={allData?.Email?.length}\r\n                                                        tableCustomFields={[]}\r\n                                                        checkBox={false}\r\n                                                        deleteMany={true}\r\n                                                        ManageGrid={false}\r\n                                                        onOpen={() => setAddEmailHistory(true)}\r\n                                                        access={emailAccess}\r\n                                                    />\r\n                                                    {allData?.Email?.length > 1 &&\r\n                                                        <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showEmail ? setShowEmail(false) : setShowEmail(true)}>{showEmail ? \"Show less\" : \"Show more\"}</Button>\r\n                                                        </div>}\r\n                                                </Card>\r\n                                            </GridItem>}\r\n                                            {callAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                                <Card>\r\n                                                    <CommonCheckTable\r\n                                                        title={\"Call\"}\r\n                                                        isLoding={isLoding}\r\n                                                        columnData={callColumns ?? []}\r\n                                                        // dataColumn={callColumns ?? []}\r\n                                                        allData={showCall ? allData?.phoneCall : allData?.phoneCall?.length > 0 ? [allData?.phoneCall[0]] : []}\r\n                                                        tableData={showCall ? allData?.phoneCall : allData?.phoneCall?.length > 0 ? [allData?.phoneCall[0]] : []}\r\n                                                        AdvanceSearch={false}\r\n                                                        dataLength={allData?.phoneCall?.length}\r\n                                                        tableCustomFields={[]}\r\n                                                        checkBox={false}\r\n                                                        deleteMany={true}\r\n                                                        ManageGrid={false}\r\n                                                        onOpen={() => setAddPhoneCall(true)}\r\n                                                        access={callAccess}\r\n                                                    />\r\n                                                    {allData?.phoneCall?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                                        <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showCall ? setShowCall(false) : setShowCall(true)}>{showCall ? \"Show less\" : \"Show more\"}</Button>\r\n                                                    </div>}\r\n                                                </Card>\r\n                                            </GridItem>}\r\n                                            {taskAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                                <Card >\r\n                                                    <CommonCheckTable\r\n                                                        title={\"Task\"}\r\n                                                        isLoding={isLoding}\r\n                                                        columnData={taskColumns ?? []}\r\n                                                        // dataColumn={taskColumns ?? []}\r\n                                                        allData={showTasks ? allData?.task : allData?.task?.length > 0 ? [allData?.task[0]] : []}\r\n                                                        tableData={showTasks ? allData?.task : allData?.task?.length > 0 ? [allData?.task[0]] : []}\r\n                                                        dataLength={allData?.task?.length}\r\n                                                        AdvanceSearch={false}\r\n                                                        tableCustomFields={[]}\r\n                                                        checkBox={false}\r\n                                                        deleteMany={true}\r\n                                                        ManageGrid={false}\r\n                                                        onOpen={() => setTaskModel(true)}\r\n                                                        access={taskAccess}\r\n                                                    />\r\n                                                    {\r\n                                                        allData?.task?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                                            <Button size=\"sm\" colorScheme=\"brand\" variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showTasks ? setShowTasks(false) : setShowTasks(true)}>{showTasks ? \"Show less\" : \"Show more\"}</Button>\r\n                                                        </div>}\r\n                                                </Card>\r\n                                            </GridItem>}\r\n\r\n                                            {meetingAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                                <Card overflow={'scroll'}>\r\n                                                    <CommonCheckTable\r\n                                                        title={\"Meeting\"}\r\n                                                        isLoding={isLoding}\r\n                                                        columnData={MeetingColumns ?? []}\r\n                                                        // dataColumn={MeetingColumns ?? []}\r\n                                                        allData={showMeetings ? allData?.meeting : allData?.meeting?.length > 0 ? [allData?.meeting[0]] : []}\r\n                                                        tableData={showMeetings ? allData?.meeting : allData?.meeting?.length > 0 ? [allData?.meeting[0]] : []}\r\n                                                        AdvanceSearch={false}\r\n                                                        dataLength={allData?.meeting?.length} tableCustomFields={[]}\r\n                                                        checkBox={false}\r\n                                                        deleteMany={true}\r\n                                                        ManageGrid={false}\r\n                                                        onOpen={() => setMeeting(true)}\r\n                                                        access={meetingAccess}\r\n                                                    />\r\n\r\n                                                    {allData?.meeting?.length > 1 && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                                                        <Button colorScheme=\"brand\" size='sm' variant=\"outline\" display=\"flex\" justifyContant=\"end\" onClick={() => showMeetings ? setShowMeetings(false) : setShowMeetings(true)}>{showMeetings ? \"Show less\" : \"Show more\"}</Button>\r\n                                                    </div>}\r\n                                                </Card>\r\n                                            </GridItem>}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </GridItem>\r\n                            </TabPanel>\r\n                            <TabPanel pt={4} p={0}>\r\n                                <GridItem colSpan={{ base: 4 }} >\r\n                                    <Card minH={'50vh'} >\r\n                                        <Flex alignItems={'center'} justifyContent={'space-between'} mb='2'>\r\n                                            <Heading size=\"md\" mb={3}>\r\n                                                Documents\r\n                                            </Heading>\r\n                                            <Button leftIcon={<AddIcon />} size='sm' variant='brand' onClick={() => setAddDocument(true)}>Add Document</Button>\r\n                                        </Flex>\r\n                                        <HSeparator />\r\n                                        <VStack mt={4} alignItems=\"flex-start\">\r\n                                            {allData?.Document?.length > 0 ? allData?.Document?.map((item) => (\r\n                                                <FolderTreeView name={item.folderName} item={item}>\r\n                                                    {item?.files?.map((file) => (\r\n                                                        <FolderTreeView download={download} data={file} name={file.fileName} isFile from=\"lead\" />\r\n                                                    ))}\r\n                                                </FolderTreeView>\r\n                                            )) : <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                                                <DataNotFound />\r\n                                            </Text>}\r\n                                        </VStack>\r\n                                    </Card>\r\n                                </GridItem>\r\n                            </TabPanel>\r\n\r\n                        </TabPanels>\r\n                    </Tabs>\r\n                    {(user.role === 'superAdmin' || (permission?.update || permission?.delete)) && <Card mt={3}>\r\n                        <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                            <GridItem colStart={6} >\r\n                                <Flex justifyContent={\"right\"}>\r\n                                    {(user.role === 'superAdmin' || permission?.update) ? <Button size='sm' onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button> : ''}\r\n                                    {(user.role === 'superAdmin' || permission?.delete) ? <Button size='sm' style={{ background: 'red.800' }} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button> : ''}\r\n                                </Flex>\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </Card>\r\n                    }\r\n                </>\r\n            }\r\n            {isOpen && <Add isOpen={isOpen} size={size} onClose={onClose} leadData={leadData?.[0]} setAction={setAction} />}\r\n            <Edit isOpen={edit} size={size} onClose={setEdit} leadData={leadData?.[0]} setAction={setAction} moduleId={leadData?.[0]?._id} data={data} />\r\n            <AddMeeting fetchData={fetchData} isOpen={addMeeting} leadContect={splitValue?.[0]} onClose={setMeeting} from=\"contact\" id={param.id} setAction={setAction} view={true} />\r\n            <AddEdit isOpen={taskModel} fetchData={fetchData} leadContect={splitValue?.[0]} onClose={setTaskModel} id={param.id} userAction={'add'} view={true} />\r\n            <AddPhoneCall viewData={allData} fetchData={fetchData} isOpen={addPhoneCall} onClose={setAddPhoneCall} setAction={setAction} data={data?.contact} id={param.id} lead={true} LData={data} />\r\n            <AddEmailHistory lead={true} leadEmail={allData?.lead?.leadEmail} fetchData={fetchData} isOpen={addEmailHistory} onClose={setAddEmailHistory} id={param.id} />\r\n            <AddDocumentModal addDocument={addDocument} setAddDocument={setAddDocument} linkId={param.id} from=\"lead\" setAction={setAction} fetchData={fetchData} />\r\n            <CommonDeleteModel isOpen={deleteModel} onClose={() => setDelete(false)} type='Lead' handleDeleteData={handleDeleteLead} ids={param.id} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n","import { CloseIcon } from '@chakra-ui/icons';\r\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, IconButton } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useFormik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { postApi } from 'services/api';\r\nimport { generateValidationSchema } from 'utils';\r\nimport CustomForm from 'utils/customForm';\r\nimport * as yup from 'yup'\r\n\r\nconst Add = (props) => {\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n\r\n    const initialFieldValues = Object.fromEntries(\r\n        (props?.leadData?.fields || []).map(field => [field?.name, ''])\r\n    );\r\n    const initialValues = {\r\n        ...initialFieldValues,\r\n        createBy: JSON.parse(localStorage.getItem('user'))._id\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: yup.object().shape(generateValidationSchema(props?.leadData?.fields)),\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData();\r\n        },\r\n    });\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await postApi('api/form/add', { ...values, moduleId: props?.leadData?._id })\r\n            if (response.status === 200) {\r\n                props.onClose();\r\n                formik.resetForm();\r\n                props.setAction((pre) => !pre)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        formik.resetForm();\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Drawer isOpen={props.isOpen} size={props.size}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex'  >\r\n                        Add Lead\r\n                        <IconButton onClick={props.onClose} icon={<CloseIcon />} />\r\n                    </DrawerHeader>\r\n                    <DrawerBody>\r\n                        <CustomForm moduleData={props.leadData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\r\n                    </DrawerBody>\r\n                    <DrawerFooter>\r\n                        <Button sx={{ textTransform: \"capitalize\" }} size=\"sm\" disabled={isLoding ? true : false} variant=\"brand\" type=\"submit\" onClick={handleSubmit}                        >\r\n                            {isLoding ? <Spinner /> : 'Save'}\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline\"\r\n                            colorScheme='red' size=\"sm\"\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                textTransform: \"capitalize\",\r\n                            }}\r\n                            onClick={handleCancel}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","import { CloseIcon } from '@chakra-ui/icons';\r\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, Flex, IconButton } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { putApi } from 'services/api';\r\nimport { getApi } from 'services/api';\r\nimport { generateValidationSchema } from '../../../utils';\r\nimport CustomForm from '../../../utils/customForm';\r\nimport * as yup from 'yup'\r\n\r\nconst Edit = (props) => {\r\n    const { data } = props;\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const initialFieldValues = Object.fromEntries(\r\n        (props?.leadData?.fields || []).map(field => [field?.name, ''])\r\n    );\r\n\r\n    const [initialValues, setInitialValues] = useState({\r\n        ...initialFieldValues,\r\n        createBy: JSON.parse(localStorage.getItem('user'))._id\r\n    })\r\n    const param = useParams()\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        enableReinitialize: true,\r\n        validationSchema: yup.object().shape(generateValidationSchema(props?.leadData?.fields)),\r\n        onSubmit: (values, { resetForm }) => {\r\n            EditData();\r\n        },\r\n    });\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\r\n\r\n    const EditData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await putApi(`api/form/edit/${props?.selectedId || param.id}`, { ...values, moduleId: props.moduleId })\r\n            if (response.status === 200) {\r\n                props.onClose();\r\n                props.setAction((pre) => !pre)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.onClose(false)\r\n        props.setSelectedId && props?.setSelectedId()\r\n        formik.resetForm();\r\n    }\r\n\r\n    let response\r\n    const fetchData = async () => {\r\n        if (data) {\r\n            setInitialValues((prev) => ({ ...prev, ...data }))\r\n        } else if (props?.selectedId) {\r\n            // } else if (props?.selectedId || param.id) {\r\n            try {\r\n                setIsLoding(true)\r\n                response = await getApi('api/lead/view/', props?.selectedId)\r\n                let editData = response?.data?.lead;\r\n                setInitialValues((prev) => ({ ...prev, ...editData }));\r\n            } catch (e) {\r\n                console.error(e)\r\n            } finally {\r\n                setIsLoding(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [props?.selectedId, data])\r\n\r\n    return (\r\n        <div>\r\n            <Drawer isOpen={props.isOpen} size={props.size}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader alignItems={\"center\"} justifyContent='space-between' display='flex' >\r\n                        Edit Lead\r\n                        <IconButton onClick={handleClose} icon={<CloseIcon />} />\r\n                    </DrawerHeader>\r\n                    <DrawerBody>\r\n\r\n                        {isLoding ?\r\n                            <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                                <Spinner />\r\n                            </Flex>\r\n                            :\r\n                            <CustomForm moduleData={props.leadData} values={values} setFieldValue={setFieldValue} handleChange={handleChange} handleBlur={handleBlur} errors={errors} touched={touched} />\r\n\r\n                        }\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <Button\r\n                            sx={{ textTransform: \"capitalize\" }}\r\n                            variant=\"brand\" size=\"sm\"\r\n                            type=\"submit\"\r\n                            disabled={isLoding ? true : false}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            {isLoding ? <Spinner /> : 'Update'}\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline\"\r\n                            colorScheme='red' size=\"sm\"\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                textTransform: \"capitalize\",\r\n                            }}\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </DrawerFooter>\r\n\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit"],"names":["View","_leadData$","_allData$Email","_allData$Email2","_allData$Email3","_allData$Email4","_allData$phoneCall","_allData$phoneCall2","_allData$phoneCall3","_allData$phoneCall4","_allData$task","_allData$task2","_allData$task3","_allData$task4","_allData$meeting","_allData$meeting2","_allData$meeting3","_allData$meeting4","_allData$Document","_allData$Document2","_leadData$2","_allData$lead","param","useParams","user","JSON","parse","localStorage","getItem","textColor","useColorModeValue","data","setData","useState","allData","setAllData","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","addMeeting","setMeeting","showEmail","setShowEmail","showCall","setShowCall","showTasks","setShowTasks","showMeetings","setShowMeetings","addDocument","setAddDocument","action","setAction","selectedTab","setSelectedTab","taskModel","setTaskModel","navigate","useNavigate","dispatch","useDispatch","addEmailHistory","setAddEmailHistory","addPhoneCall","setAddPhoneCall","leadData","useSelector","state","_state$leadCustomFile","leadCustomFiled","permission","taskPermission","meetingPermission","callAccess","emailAccess","taskAccess","meetingAccess","HasAccess","columnsDataColumns","Header","accessor","cell","_cell$row","_cell$row$original","_jsx","Link","to","row","original","_id","children","Text","me","sx","color","textDecoration","fontSize","fontWeight","value","className","moment","fromNow","_cell$row2","values","timestamp","format","callColumns","_cell$row3","_cell$row3$original","_cell$row4","MeetingColumns","_cell$row5","_cell$row5$original","taskColumns","type","formikType","onClick","_cell$row6","cursor","download","async","result","getApi","status","window","open","constant","baseUrl","toast","success","response","error","fetchData","_response$data","id","lead","i","useEffect","fetchLeadCustomFiled","firstValue","Object","splitValue","split","_jsxs","_Fragment","Flex","justifyContent","alignItems","width","Spinner","Heading","size","mt","m","leadName","Tabs","onChange","index","Grid","templateColumns","mb","gap","GridItem","colSpan","base","md","TabList","border","boxShadow","margin","sm","padding","borderTopLeftRadius","borderTopRightRadius","borderBottom","zIndex","Tab","view","Menu","role","create","update","delete","MenuButton","variant","colorScheme","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","style","display","height","html2pdf","from","set","filename","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","DeleteIcon","leftIcon","IoIosArrowBack","TabPanels","TabPanel","pt","p","CustomView","fieldData","toCamelCase","text","replace","moduleId","overflow","Card","CommonCheckTable","title","columnData","Email","length","tableData","AdvanceSearch","dataLength","tableCustomFields","checkBox","deleteMany","ManageGrid","access","justifyContant","phoneCall","task","meeting","minH","HSeparator","VStack","Document","map","item","_item$files","FolderTreeView","name","folderName","files","file","fileName","isFile","textAlign","DataNotFound","colStart","background","Add","Edit","AddMeeting","leadContect","AddEdit","userAction","AddPhoneCall","viewData","contact","LData","AddEmailHistory","leadEmail","AddDocumentModal","linkId","CommonDeleteModel","handleDeleteData","deleteApi","pre","log","ids","props","_props$leadData","_props$leadData2","initialValues","fromEntries","fields","field","createBy","formik","useFormik","validationSchema","yup","shape","generateValidationSchema","onSubmit","_ref","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","_props$leadData3","postApi","e","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","IconButton","CloseIcon","DrawerBody","CustomForm","moduleData","DrawerFooter","textTransform","disabled","marginLeft","handleCancel","initialFieldValues","setInitialValues","enableReinitialize","EditData","putApi","selectedId","handleClose","setSelectedId","prev","_response","editData"],"sourceRoot":""}