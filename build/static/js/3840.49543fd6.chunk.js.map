{"version":3,"file":"static/js/3840.49543fd6.chunk.js","mappings":"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","sources":["views/admin/account/View.js","schema/opprtunitiesSchema.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport AddEdit from './AddEdit';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\r\nimport { useFormik } from 'formik';\r\nimport dayjs from 'dayjs';\r\nimport { toast } from 'react-toastify';\r\nimport { accountSchema } from '../../../schema/accountSchema';\r\n\r\nconst View = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [permission, contactAccess, leadAccess] = HasAccess(['Account', 'Contacts', 'Leads'])\r\n\r\n    const [data, setData] = useState()\r\n    const { onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [type, setType] = useState(\"\")\r\n    const [editableField, setEditableField] = useState(null);\r\n    const [editableFieldName, setEditableFieldName] = useState(null);\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const todayTime = new Date().toISOString().split('.')[0];\r\n\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            let result = await getApi('api/account/view/', id);\r\n            setData(result?.data);\r\n        }\r\n    }\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Account_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const handleDeleteAccount = async (ids) => {\r\n        try {\r\n            let response = await deleteManyApi('api/account/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                navigate('/account')\r\n                toast.success(`Account Delete successfully`)\r\n                setDeleteManyModel(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(`server error`)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        name: data?.name,\r\n        officePhone: data?.officePhone,\r\n        alternatePhone: data?.alternatePhone,\r\n        assignUser: data?.assignUser,\r\n        website: data?.website,\r\n        fax: data?.fax,\r\n        ownership: data?.ownership,\r\n        emailAddress: data?.emailAddress,\r\n        nonPrimaryEmail: data?.nonPrimaryEmail,\r\n        billingStreet: data?.billingStreet,\r\n        billingStreet2: data?.billingStreet2,\r\n        billingStreet3: data?.billingStreet3,\r\n        billingStreet4: data?.billingStreet4,\r\n        billingPostalcode: data?.billingPostalcode,\r\n        billingCity: data?.billingCity,\r\n        billingState: data?.billingState,\r\n        billingCountry: data?.billingCountry,\r\n        shippingStreet: data?.shippingStreet,\r\n        shippingStreet2: data?.shippingStreet2,\r\n        shippingStreet3: data?.shippingStreet3,\r\n        shippingStreet4: data?.shippingStreet4,\r\n        shippingPostalcode: data?.shippingPostalcode,\r\n        shippingCity: data?.shippingCity,\r\n        shippingState: data?.shippingState,\r\n        shippingCountry: data?.shippingCountry,\r\n        description: data?.description,\r\n        type: data?.type,\r\n        industry: data?.industry,\r\n        annualRevenue: data?.annualRevenue,\r\n        rating: data?.rating,\r\n        SICCode: data?.SICCode,\r\n        memberOf: data?.memberOf,\r\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: accountSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (values, { resetForm }) => {\r\n            const payload = {\r\n                ...values,\r\n                modifiedDate: new Date()\r\n            }\r\n            let response = await putApi(`api/account/edit/${id}`, payload)\r\n            setEditableField(null);\r\n            if (response.status === 200) {\r\n                fetchViewData()\r\n                toast.success(`${editableFieldName} Update successfully`)\r\n            } else {\r\n                toast.error(`${editableFieldName} not Update`)\r\n            }\r\n        },\r\n    });\r\n    const handleDoubleClick = (fieldName, value, name) => {\r\n        formik.setFieldValue(fieldName, value);\r\n        setEditableField(fieldName)\r\n        setEditableFieldName(name)\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        formik.handleSubmit();\r\n    };\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Heading size=\"lg\" m={3}>\r\n                        {data?.name || \" \"}\r\n                    </Heading>\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Card>\r\n                        <Grid gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                        <Heading size=\"md\" mb={3}>\r\n                                            Account Details\r\n                                        </Heading>\r\n                                        <Flex id=\"hide-btn\" >\r\n                                            <Menu>\r\n                                                {(user.role === 'superAdmin' || permission?.create || permission?.update || permission?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                                    Actions\r\n                                                </MenuButton>}\r\n                                                <MenuDivider />\r\n                                                <MenuList minWidth={2}>\r\n                                                    {(user.role === 'superAdmin' || permission?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\r\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                                    {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n\r\n                                                    {(user.role === 'superAdmin' || permission?.delete) && <>\r\n                                                        <MenuDivider />\r\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                                    </>}\r\n                                                </MenuList>\r\n                                            </Menu>\r\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\r\n                                                Back\r\n                                            </Button>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Account Name </Text>\r\n                                {\r\n                                    editableField === \"name\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"name\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.name}\r\n                                                borderColor={formik?.errors?.name && formik?.touched?.name ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.name && formik?.touched.name && formik?.errors.name}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"name\", data?.name, \"Account Name\")}>{data?.name ? data?.name : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Office Phone </Text>\r\n                                {\r\n                                    editableField === \"officePhone\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"officePhone\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.officePhone}\r\n                                                borderColor={formik?.errors?.officePhone && formik?.touched?.officePhone ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.officePhone && formik?.touched.officePhone && formik?.errors.officePhone}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"officePhone\", data?.officePhone, \"Office Phone\")}>{data?.officePhone ? data?.officePhone : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Alternate Phone</Text>\r\n                                {\r\n                                    editableField === \"alternatePhone\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"alternatePhone\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.alternatePhone}\r\n                                                borderColor={formik?.errors?.alternatePhone && formik?.touched?.alternatePhone ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.alternatePhone && formik?.touched.alternatePhone && formik?.errors.alternatePhone}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"alternatePhone\", data?.alternatePhone, \"Alternate Phone\")}>{data?.alternatePhone ? data?.alternatePhone : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Website</Text>\r\n                                {\r\n                                    editableField === \"website\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"website\"\r\n                                                type=\"url\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.website}\r\n                                                borderColor={formik?.errors?.website && formik?.touched?.website ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.website && formik?.touched.website && formik?.errors.website}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"website\", data?.website, \"Website\")}>{data?.website ? data?.website : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Fax</Text>\r\n                                {\r\n                                    editableField === \"fax\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"fax\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.fax}\r\n                                                borderColor={formik?.errors?.fax && formik?.touched?.fax ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.fax && formik?.touched.fax && formik?.errors.fax}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"fax\", data?.fax, \"Fax\")}>{data?.fax ? data?.fax : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Ownership</Text>\r\n                                {\r\n                                    editableField === \"ownership\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"ownership\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.ownership}\r\n                                                borderColor={formik?.errors?.ownership && formik?.touched?.ownership ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.ownership && formik?.touched.ownership && formik?.errors.ownership}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"ownership\", data?.ownership, \"Ownership\")}>{data?.ownership ? data?.ownership : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Email Address</Text>\r\n                                {\r\n                                    editableField === \"emailAddress\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"emailAddress\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.emailAddress}\r\n                                                borderColor={formik?.errors?.emailAddress && formik?.touched?.emailAddress ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.emailAddress && formik?.touched.emailAddress && formik?.errors.emailAddress}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"emailAddress\", data?.emailAddress, \"Email Address\")}>{data?.emailAddress ? data?.emailAddress : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Non Primary Email</Text>\r\n                                {\r\n                                    editableField === \"nonPrimaryEmail\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"nonPrimaryEmail\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.nonPrimaryEmail}\r\n                                                borderColor={formik?.errors?.nonPrimaryEmail && formik?.touched?.nonPrimaryEmail ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.nonPrimaryEmail && formik?.touched.nonPrimaryEmail && formik?.errors.nonPrimaryEmail}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"nonPrimaryEmail\", data?.nonPrimaryEmail, \"Non Primary Email\")}>{data?.nonPrimaryEmail ? data?.nonPrimaryEmail : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet}\r\n                                                borderColor={formik?.errors?.shippingStreet && formik?.touched?.shippingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet && formik?.touched.shippingStreet && formik?.errors.shippingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet\", data?.shippingStreet, \"Shipping Street\")}>{data?.shippingStreet ? data?.shippingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street</Text>\r\n                                {\r\n                                    editableField === \"billingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet}\r\n                                                borderColor={formik?.errors?.billingStreet && formik?.touched?.billingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet && formik?.touched.billingStreet && formik?.errors.billingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet\", data?.billingStreet, \"Billing Street\")}>{data?.billingStreet ? data?.billingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street2</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet2\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet2\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet2}\r\n                                                borderColor={formik?.errors?.shippingStreet2 && formik?.touched?.shippingStreet2 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet2 && formik?.touched.shippingStreet2 && formik?.errors.shippingStreet2}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet2\", data?.shippingStreet2, \"Shipping Street2\")}>{data?.shippingStreet2 ? data?.shippingStreet2 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street2</Text>\r\n                                {\r\n                                    editableField === \"billingStreet2\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet2\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet2}\r\n                                                borderColor={formik?.errors?.billingStreet2 && formik?.touched?.billingStreet2 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet2 && formik?.touched.billingStreet2 && formik?.errors.billingStreet2}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet2\", data?.billingStreet2, \"Billing Street2\")}>{data?.billingStreet2 ? data?.billingStreet2 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street3</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet3\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet3\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet3}\r\n                                                borderColor={formik?.errors?.shippingStreet3 && formik?.touched?.shippingStreet3 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet3 && formik?.touched.shippingStreet3 && formik?.errors.shippingStreet3}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet3\", data?.shippingStreet3, \"Shipping Street3\")}>{data?.shippingStreet3 ? data?.shippingStreet3 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street3</Text>\r\n                                {\r\n                                    editableField === \"billingStreet3\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet3\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet3}\r\n                                                borderColor={formik?.errors?.billingStreet3 && formik?.touched?.billingStreet3 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet3 && formik?.touched.billingStreet3 && formik?.errors.billingStreet3}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet3\", data?.billingStreet3, \"Billing Street3\")}>{data?.billingStreet3 ? data?.billingStreet3 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street4</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet4\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet4\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet4}\r\n                                                borderColor={formik?.errors?.shippingStreet4 && formik?.touched?.shippingStreet4 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet4 && formik?.touched.shippingStreet4 && formik?.errors.shippingStreet4}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet4\", data?.shippingStreet4, \"Shipping Street4\")}>{data?.shippingStreet4 ? data?.shippingStreet4 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street4</Text>\r\n                                {\r\n                                    editableField === \"billingStreet4\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet4\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet4}\r\n                                                borderColor={formik?.errors?.billingStreet4 && formik?.touched?.billingStreet4 ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet4 && formik?.touched.billingStreet4 && formik?.errors.billingStreet4}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet4\", data?.billingStreet4, \"Billing Street4\")}>{data?.billingStreet4 ? data?.billingStreet4 : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Postal Code</Text>\r\n                                {\r\n                                    editableField === \"shippingPostalcode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingPostalcode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingPostalcode}\r\n                                                borderColor={formik?.errors?.shippingPostalcode && formik?.touched?.shippingPostalcode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingPostalcode && formik?.touched.shippingPostalcode && formik?.errors.shippingPostalcode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingPostalcode\", data?.shippingPostalcode, \"Shipping Postal Code\")}>{data?.shippingPostalcode ? data?.shippingPostalcode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Postal Code</Text>\r\n                                {\r\n                                    editableField === \"billingPostalcode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingPostalcode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingPostalcode}\r\n                                                borderColor={formik?.errors?.billingPostalcode && formik?.touched?.billingPostalcode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingPostalcode && formik?.touched.billingPostalcode && formik?.errors.billingPostalcode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingPostalcode\", data?.billingPostalcode, \"Billing Postal Code\")}>{data?.billingPostalcode ? data?.billingPostalcode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"shippingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCity}\r\n                                                borderColor={formik?.errors?.shippingCity && formik?.touched?.shippingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCity && formik?.touched.shippingCity && formik?.errors.shippingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCity\", data?.shippingCity, \"Shipping City\")}>{data?.shippingCity ? data?.shippingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"billingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCity}\r\n                                                borderColor={formik?.errors?.billingCity && formik?.touched?.billingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCity && formik?.touched.billingCity && formik?.errors.billingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCity\", data?.billingCity, \"Billing City\")}>{data?.billingCity ? data?.billingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping State</Text>\r\n                                {\r\n                                    editableField === \"shippingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingState}\r\n                                                borderColor={formik?.errors?.shippingState && formik?.touched?.shippingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingState && formik?.touched.shippingState && formik?.errors.shippingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingState\", data?.shippingState, \"Shipping State\")}>{data?.shippingState ? data?.shippingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing State</Text>\r\n                                {\r\n                                    editableField === \"billingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingState}\r\n                                                borderColor={formik?.errors?.billingState && formik?.touched?.billingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingState && formik?.touched.billingState && formik?.errors.billingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingState\", data?.billingState, \"Billing State\")}>{data?.billingState ? data?.billingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Country</Text>\r\n                                {\r\n                                    editableField === \"shippingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCountry}\r\n                                                borderColor={formik?.errors?.shippingCountry && formik?.touched?.shippingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCountry && formik?.touched.shippingCountry && formik?.errors.shippingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCountry\", data?.shippingCountry, \"Shipping Country\")}>{data?.shippingCountry ? data?.shippingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Country</Text>\r\n                                {\r\n                                    editableField === \"billingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCountry}\r\n                                                borderColor={formik?.errors?.billingCountry && formik?.touched?.billingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCountry && formik?.touched.billingCountry && formik?.errors.billingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCountry\", data?.billingCountry, \"Billing Country\")}>{data?.billingCountry ? data?.billingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Type</Text>\r\n                                {\r\n                                    editableField === \"type\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.type}\r\n                                                name=\"type\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Select Type'}\r\n                                                borderColor={formik?.errors.type && formik?.touched.type ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Analyst\">Analyst</option>\r\n                                                <option value=\"Competitor\">Competitor </option>\r\n                                                <option value=\"Customer\">Customer</option>\r\n                                                <option value=\"Integrator\">Integrator</option>\r\n                                                <option value=\"Investor\">Investor </option>\r\n                                                <option value=\"Partner\">Partner</option>\r\n                                                <option value=\"Press\">Press</option>\r\n                                                <option value=\"Prospect\">Prospect</option>\r\n                                                <option value=\"Reseller\">Reseller</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.type && formik?.touched.type && formik?.errors.type}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"type\", data?.type, \"Type\")}>{data?.type ? data?.type : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Industry</Text>\r\n                                {\r\n                                    editableField === \"industry\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.industry}\r\n                                                name=\"industry\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Select Industry'}\r\n                                                borderColor={formik?.errors.industry && formik?.touched.industry ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Apparel\">Apparel</option>\r\n                                                <option value=\"Banking\">Banking </option>\r\n                                                <option value=\"Biotechnology\">Biotechnology</option>\r\n                                                <option value=\"Chemicals\">Chemicals</option>\r\n                                                <option value=\"Communications\">Communications </option>\r\n                                                <option value=\"Construction\">Construction</option>\r\n                                                <option value=\"Consulting\">Consulting</option>\r\n                                                <option value=\"Education\">Education</option>\r\n                                                <option value=\"Electronics\">Electronics</option>\r\n                                                <option value=\"Energy\">Energy</option>\r\n                                                <option value=\"Engineering\">Engineering</option>\r\n                                                <option value=\"Entertainment\">Entertainment</option>\r\n                                                <option value=\"Finance\">Finance</option>\r\n                                                <option value=\"Government\">Government</option>\r\n                                                <option value=\"Healthcare\">Healthcare</option>\r\n                                                <option value=\"Hospitality\">Hospitality</option>\r\n                                                <option value=\"Insurance\">Insurance</option>\r\n                                                <option value=\"Machinery\">Machinery</option>\r\n                                                <option value=\"Manufacturing\">Manufacturing</option>\r\n                                                <option value=\"Media\">Media</option>\r\n                                                <option value=\"Not For Profit\">Not For Profit</option>\r\n                                                <option value=\"Recreation\">Recreation</option>\r\n                                                <option value=\"Retail\">Retail</option>\r\n                                                <option value=\"Shipping\">Shipping</option>\r\n                                                <option value=\"Technology\">Technology</option>\r\n                                                <option value=\"Telecommunications\">Telecommunications</option>\r\n                                                <option value=\"Transportation\">Transportation</option>\r\n                                                <option value=\"Utilities\">Utilities</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.industry && formik?.touched.industry && formik?.errors.industry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"industry\", data?.industry, \"Industry\")}>{data?.industry ? data?.industry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Rating </Text>\r\n                                <Text >{data?.rating ? data?.rating : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>SIC Code</Text>\r\n                                {\r\n                                    editableField === \"SICCode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"SICCode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.SICCode}\r\n                                                borderColor={formik?.errors?.SICCode && formik?.touched?.SICCode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.SICCode && formik?.touched.SICCode && formik?.errors.SICCode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"SICCode\", data?.SICCode, \"SIC Code\")}>{data?.SICCode ? data?.SICCode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned User </Text>\r\n                                {/* <Text>{data?.assignUserName ? data?.assignUserName : ' - '}</Text> */}\r\n                                {\r\n                                    data?.assignUser ?\r\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignUser}`}>\r\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Member Of </Text>\r\n                                {\r\n                                    data?.memberOf ?\r\n                                        <Link to={`/accountView/${data?.memberOf}`}>\r\n                                            <Text color={permission?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: permission?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: permission?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.memberOfName ? data?.memberOfName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={permission?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: permission?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: permission?.view ? 'underline' : 'none' } }}>{data?.memberOfName ? data?.memberOfName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n\r\n                            {/* <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\r\n                                <Link to={data?.assignTo ? contactAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\r\n                                    <Text color={(data?.category === 'contact' && (contactAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\r\n                                </Link>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"description\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.description}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                                {\r\n                                    editableField === \"notes\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"notes\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.notes}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                }\r\n                            </GridItem> */}\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </Grid>\r\n            {\r\n                (permission?.update || permission?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                        <GridItem colStart={6} >\r\n                            <Flex justifyContent={\"right\"}>\r\n                                {(permission?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                                {(permission?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                            </Flex>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </Card>\r\n            }\r\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\r\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Account' handleDeleteData={handleDeleteAccount} ids={[id]} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default View\r\n","import * as yup from 'yup'\r\n\r\nexport const opprtunitiesSchema = yup.object({\r\n    opportunityName: yup.string().required(\"Opportunity Name Is required\"),\r\n    type: yup.string(),\r\n    leadSource: yup.string(),\r\n    currency: yup.string(),\r\n    opportunityAmount: yup.string().required(\"Opportunity Amount Is required\"),\r\n    amount: yup.string(),\r\n    expectedCloseDate: yup.string().required(\"Expected Close Date Is required\"),\r\n    nextStep: yup.string(),\r\n    salesStage: yup.string().required(\"Sales Stage Is required\"),\r\n    probability: yup.string(),\r\n    description: yup.string(),\r\n    createBy: yup.string(),\r\n})"],"names":["props","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_formik$errors8","_formik$touched8","_formik$errors9","_formik$touched9","_formik$errors10","_formik$touched10","_formik$errors11","_formik$touched11","_formik$errors12","_formik$touched12","_formik$errors13","_formik$touched13","_formik$errors14","_formik$touched14","_formik$errors15","_formik$touched15","_formik$errors16","_formik$touched16","_formik$errors17","_formik$touched17","_formik$errors18","_formik$touched18","_formik$errors19","_formik$touched19","_formik$errors20","_formik$touched20","_formik$errors21","_formik$touched21","_formik$errors22","_formik$touched22","_formik$errors23","_formik$touched23","_formik$errors24","_formik$touched24","_formik$errors25","_formik$touched25","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","type","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","name","officePhone","alternatePhone","assignUser","website","fax","ownership","emailAddress","nonPrimaryEmail","billingStreet","billingStreet2","billingStreet3","billingStreet4","billingPostalcode","billingCity","billingState","billingCountry","shippingStreet","shippingStreet2","shippingStreet3","shippingStreet4","shippingPostalcode","shippingCity","shippingState","shippingCountry","description","industry","annualRevenue","rating","SICCode","memberOf","modifiedBy","_id","formik","useFormik","validationSchema","accountSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","modifiedDate","response","putApi","status","toast","success","error","handleDoubleClick","fieldName","value","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Select","placeholder","Link","to","sx","textDecoration","cursor","assignUserName","view","memberOfName","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log","opprtunitiesSchema","yup","opportunityName","required","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","createBy"],"sourceRoot":""}