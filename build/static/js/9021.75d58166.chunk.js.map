{"version":3,"file":"static/js/9021.75d58166.chunk.js","mappings":"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","sources":["components/commonTableModel/AccountModel.js","components/commonTableModel/UserModel.js","components/commonFileUpload/index.js","views/admin/quotes/components/QuotesAdvanceSearch.js","views/admin/quotes/components/ImportModel.js","views/admin/quotes/index.js","components/commonTableModel/OpprtunityModel.js","components/commonTableModel/Contact.js","components/commonTableModel/ContactModel.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js"],"sourcesContent":["import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\nimport { fetchAccountData } from '../../redux/slices/accountSlice';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AccountModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data, type, billingState, billingCity, billingPostalCode, billingCountry, billingStreet } = props\r\n    const title = \"Account\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const accountData = data?.length > 0 && data?.find((item) => item?._id === selectedValues)\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            // if (type === \"quotes\") {\r\n            //     setFieldValue(billingStreet, accountData?.billingStreet)\r\n            //     setFieldValue(billingState, accountData?.billingState)\r\n            //     setFieldValue(billingCity, selectedValues?.billingCity)\r\n            //     setFieldValue(billingPostalCode, selectedValues?.billingPostalcode)\r\n            //     setFieldValue(billingCountry, selectedValues?.billingCountry)\r\n            // }\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        { Header: 'Account Name', accessor: 'name' },\r\n        { Header: 'Office Phone', accessor: 'officePhone', },\r\n        { Header: 'Fax', accessor: 'fax', },\r\n        { Header: 'Email Address', accessor: 'emailAddress', },\r\n    ];\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     const result = await dispatch(fetchAccountData())\r\n\r\n    //     if (result.payload.status === 200) {\r\n    //         setData(result?.payload?.data);\r\n    //     } else {\r\n    //         toast.error(\"Failed to fetch data\", \"error\");\r\n    //     }\r\n    //     setIsLoding(false)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Account</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={tableColumns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default AccountModel\r\n","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { fetchLeadCustomFiled } from '../../redux/slices/leadCustomFiledSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\n\r\nconst UserModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data, isLoding, setIsLoding } = props\r\n    const title = \"Users\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    // const [isLoding, setIsLoding] = useState(false);\r\n    const [leadData, setLeadData] = useState([]);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'email Id', accessor: 'username',\r\n        },\r\n        { Header: \"first Name\", accessor: \"firstName\", },\r\n        { Header: \"last Name\", accessor: \"lastName\", },\r\n        { Header: \"role\", accessor: \"role\", },\r\n    ];\r\n\r\n    // const [columns, setColumns] = useState([...tableColumns]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     let result = await getApi('api/user/');\r\n    //     setData(result?.data?.user);\r\n    //     setIsLoding(false)\r\n    // }\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select User</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={tableColumns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default UserModel\r\n","// Chakra imports\r\nimport {\r\n    Box, Flex,\r\n    Grid,\r\n    GridItem,\r\n    Icon,\r\n    Text,\r\n    useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\n// Assets\r\nimport Dropzone from \"components/Dropzone\";\r\nimport { MdUpload } from \"react-icons/md\";\r\n\r\nexport default function CommonFileUpload(props) {\r\n    // const { used, total, count, ...rest } = props;\r\n    const { count, text, onFileSelect } = props;\r\n    // Chakra Color Mode\r\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n    const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n    const textColorSecondary = \"gray.400\";\r\n    return (\r\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Dropzone\r\n                    w={{ base: \"100%\" }}\r\n                    me='36px'\r\n                    minH={200}\r\n                    img={text === 'Property Photos' ? 'img' : ''}\r\n                    csv={'csv'}\r\n                    height={'100%'}\r\n                    onFileSelect={onFileSelect}\r\n                    isMultipleAllow={false}\r\n                    content={\r\n                        <Box>\r\n                            <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\r\n                            <Flex justify='center' mx='auto' mb='12px'>\r\n                                <Text fontSize='xl' fontWeight='700' color={brandColor}>\r\n                                    Upload File\r\n                                </Text>\r\n                            </Flex>\r\n                            {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\r\n                                Selected Files : {count}\r\n                            </Text>}\r\n                        </Box>\r\n                    }\r\n                />\r\n            </GridItem>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Flex direction='column' >\r\n                    <Text\r\n                        color={textColorPrimary}\r\n                        fontWeight='bold'\r\n                        textAlign='start'\r\n                        fontSize='2xl'\r\n                        mt={{ base: \"20px\" }}>\r\n                        Upload {text}\r\n                    </Text>\r\n                    <Text\r\n                        color={textColorSecondary}\r\n                        fontSize='md'\r\n                        my={{ base: \"auto\" }}\r\n                        mx='auto'\r\n                        textAlign='start'>\r\n                        Accepted File Type (csv, xlsx file - 15MB max) only 1 file\r\n                    </Text>\r\n                </Flex>\r\n            </GridItem>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Select, Text, Button, } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { setSearchValue, getSearchData, setGetTagValues } from '../../../../redux/slices/advanceSearchSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst QuotesAdvanceSearch = (props) => {\r\n    const { state, allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchClear, setSearchbox } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const initialValues = {\r\n        quoteNumber: '',\r\n        title: '',\r\n        quoteStage: '',\r\n        contactName: '',\r\n        accountName: '',\r\n        grandTotal: '',\r\n        validUntil: '',\r\n    }\r\n    const validationSchema = yup.object({\r\n        quoteNumber: yup.string(),\r\n        title: yup.string(),\r\n        quoteStage: yup.string(),\r\n        contactName: yup.string(),\r\n        accountName: yup.string(),\r\n        grandTotal: yup.string(),\r\n        validUntil: yup.string()\r\n    });\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            dispatch(setSearchValue(values))\r\n            dispatch(getSearchData({ values: values, allData: allData, type: 'quotes' }))\r\n\r\n            const getValue = [\r\n                {\r\n                    name: [\"quoteNumber\"],\r\n                    value: values.quoteNumber\r\n                },\r\n                {\r\n                    name: [\"title\"],\r\n                    value: values.title\r\n                },\r\n                {\r\n                    name: [\"quoteStage\"],\r\n                    value: values.quoteStage\r\n                },\r\n                {\r\n                    name: [\"contactName\"],\r\n                    value: values.contactName\r\n                },\r\n                {\r\n                    name: [\"accountName\"],\r\n                    value: values.accountName\r\n                },\r\n                {\r\n                    name: [\"grandTotal\"],\r\n                    value: values.grandTotal\r\n                },\r\n                {\r\n                    name: [\"validUntil\"],\r\n                    value: values.validUntil\r\n                },\r\n            ]\r\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\r\n            setDisplaySearchData(true)\r\n            setAdvanceSearch(false)\r\n            resetForm();\r\n            setSearchbox('');\r\n        }\r\n    })\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\r\n\r\n    return (\r\n        <>\r\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Advance Search</ModalHeader>\r\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\r\n                    <ModalBody>\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Quote Number\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.quoteNumber}\r\n                                    name=\"quoteNumber\"\r\n                                    type='number'\r\n                                    placeholder='Enter Quote Number'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.quoteNumber && touched.quoteNumber && errors.quoteNumber}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Title\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.title}\r\n                                    name=\"title\"\r\n                                    placeholder='Enter Title'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.title && touched.title && errors.title}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Quote Stage\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.quoteStage}\r\n                                    name=\"quoteStage\"\r\n                                    onChange={handleChange}\r\n                                    mb={errors.quoteStage && touched.quoteStage ? undefined : '10px'}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Quote Stage'}\r\n                                    borderColor={errors.quoteStage && touched.quoteStage ? \"red.300\" : null}\r\n                                >\r\n                                    <option value=\"Draft\" >Draft</option>\r\n                                    <option value=\"Negotiation\" >Negotiation</option>\r\n                                    <option value=\"Delivered\" >Delivered</option>\r\n                                    <option value=\"On Hold\" >On Hold</option>\r\n                                    <option value=\"Confirmed\" >Confirmed</option>\r\n                                    <option value=\"Closed Accepted\" >Closed Accepted</option>\r\n                                    <option value=\"Closed Lost\" >Closed Lost</option>\r\n                                    <option value=\"Closed Dead\" >Closed Dead</option>\r\n                                </Select>\r\n                                <Text mb='10px' color={'red'}> {errors.quoteStage && touched.quoteStage && errors.quoteStage}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Contact\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.contactName}\r\n                                    name=\"contactName\"\r\n                                    placeholder='Enter Contact Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.contactName && touched.contactName && errors.contactName}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Account\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.accountName}\r\n                                    name=\"accountName\"\r\n                                    placeholder='Enter Account Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.accountName && touched.accountName && errors.accountName}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Grand Total\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.grandTotal}\r\n                                    name=\"grandTotal\"\r\n                                    placeholder='Enter Grand Total'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.grandTotal && touched.grandTotal && errors.grandTotal}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Valid Untile\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.validUntil}\r\n                                    name=\"validUntil\"\r\n                                    type='date'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.validUntil && touched.validUntil && errors.validUntil}</Text>\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\r\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuotesAdvanceSearch\r\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { useFormik } from 'formik'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CommonFileUpload from 'components/commonFileUpload'\r\n\r\nconst ImportModal = (props) => {\r\n    const { onClose, isOpen, text, customFields } = props\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        quotes: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData()\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            resetForm()\r\n\r\n            if (values.quotes) {\r\n                onClose();\r\n                navigate('/quotesImport', { state: { fileData: values.quotes, customFields: customFields } });\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Import Quotes</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <CommonFileUpload count={values.quotes.length} onFileSelect={(file) => setFieldValue('quotes', file)} text={text} />\r\n                            <Text mb='10px' color={'red'}> {errors.quotes && touched.quotes && <>Please Select {text}</>}</Text>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\r\n                    <Button sx={{\r\n                        marginLeft: 2,\r\n                        textTransform: \"capitalize\",\r\n                    }} variant=\"outline\"\r\n                        colorScheme=\"red\" size=\"sm\" onClick={() => {\r\n                            onClose()\r\n                            formik.resetForm()\r\n                        }}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImportModal","import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\r\nimport { getApi, deleteManyApi } from 'services/api';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport CommonCheckTable from '../../../components/reactTable/checktable';\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { CiMenuKebab } from 'react-icons/ci';\r\nimport moment from 'moment';\r\nimport { MdLeaderboard } from 'react-icons/md';\r\nimport { IoIosContact } from 'react-icons/io';\r\nimport AddEdit from './AddEdit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchEmailsData } from '../../../redux/slices/emailsSlice';\r\nimport { toast } from 'react-toastify';\r\nimport QuotesAdvanceSearch from './components/QuotesAdvanceSearch';\r\nimport CommonDeleteModel from '../../../components/commonDeleteModel'\r\nimport ImportModal from './components/ImportModel';\r\nimport { fetchQuotesData } from '../../../redux/slices/quotesSlice';\r\nimport { TbFileInvoice } from 'react-icons/tb';\r\nimport { postApi } from 'services/api';\r\n\r\nconst Index = (props) => {\r\n    const [action, setAction] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\r\n    const [searchboxOutside, setSearchboxOutside] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [displaySearchData, setDisplaySearchData] = useState(false);\r\n    const [searchedData, setSearchedData] = useState([]);\r\n    const [selectedId, setSelectedId] = useState();\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [type, setType] = useState(\"\")\r\n    const [isImport, setIsImport] = useState(false);\r\n\r\n    const [permission, accountAccess, contactAccess] = HasAccess([\"Quotes\", \"Account\", \"Contacts\"]);\r\n\r\n    const actionHeader = {\r\n        Header: \"Action\",\r\n        accessor: \"action\",\r\n        isSortable: false,\r\n        center: true,\r\n        cell: ({ row, i }) => (\r\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\r\n                <Menu isLazy>\r\n                    <MenuButton>\r\n                        <CiMenuKebab />\r\n                    </MenuButton>\r\n                    <MenuList\r\n                        minW={\"fit-content\"}\r\n                        transform={\"translate(1520px, 173px);\"}\r\n                    >\r\n                        {permission?.update && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                icon={<EditIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setType(\"edit\");\r\n                                    onOpen();\r\n                                    setSelectedId(row?.values?._id);\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                        )}\r\n                        {permission?.view && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"green\"}\r\n                                icon={<ViewIcon mb={1} fontSize={15} />}\r\n                                onClick={() => {\r\n                                    navigate(`/quotesView/${row?.values?._id}`);\r\n                                }}\r\n                            >\r\n                                View\r\n                            </MenuItem>\r\n                        )}\r\n                        <MenuItem\r\n                            py={2.5}\r\n                            color={\"black\"}\r\n                            icon={<TbFileInvoice fontSize={15} mb={1} />}\r\n                            onClick={() => {\r\n                                convertToInvoice(row?.values?._id);\r\n                            }}\r\n                        >\r\n                            Convert To Invoice\r\n                        </MenuItem>\r\n                        {permission?.delete && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"red\"}\r\n                                icon={<DeleteIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setDelete(true);\r\n                                    setSelectedValues([row?.values?._id]);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Menu>\r\n            </Text>\r\n        ),\r\n    };\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        { Header: \"Quote Number\", accessor: \"quoteNumber\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Title', accessor: 'title', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => handleViewOpen(cell?.row?.original._id)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: 'Quote Stage', accessor: 'quoteStage' },\r\n        {\r\n            Header: 'Contact',\r\n            accessor: 'contact',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || contactAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.contact !== null && `/contactView/${cell?.row?.original.contact}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Account',\r\n            accessor: 'account',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || accountAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.account !== null && `/accountView/${cell?.row?.original.account}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Grand Total\",\r\n            accessor: \"grandTotal\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.grandTotal ? `${cell?.row?.original?.currency} ${cell?.row?.original?.grandTotal}` : '-'}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: \"valid Until\", accessor: \"validUntil\" },\r\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\r\n\r\n    ];\r\n    const handleViewOpen = (id) => {\r\n        navigate(`/quotesView/${id}`)\r\n    }\r\n    const customFields = [\r\n        {\r\n            \"name\": \"quoteNumber\",\r\n            \"label\": \"Quote Number\",\r\n            \"type\": \"number\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669508bc20a9be3594c8652f\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669508bc20a9be3594c86530\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Quote Number is required\",\r\n                    \"_id\": \"669508bc20a9be3594c86531\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669508bc20a9be3594c86532\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669508bc20a9be3594c86533\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"669508bc20a9be3594c86534\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"669508bc20a9be3594c86535\"\r\n                }\r\n            ],\r\n            \"_id\": \"669508bc20a9be3594c8652e\"\r\n        },\r\n        {\r\n            \"name\": \"title\",\r\n            \"label\": \"Title\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669508f820a9be3594c8686c\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669508f820a9be3594c8686d\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Title is required \",\r\n                    \"_id\": \"669508f820a9be3594c8686e\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669508f820a9be3594c8686f\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669508f820a9be3594c86870\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"669508f820a9be3594c86871\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"669508f820a9be3594c86872\"\r\n                }\r\n            ],\r\n            \"_id\": \"669508f820a9be3594c8686b\"\r\n        },\r\n        {\r\n            \"name\": \"quoteStage\",\r\n            \"label\": \"Quote Stage\",\r\n            \"type\": \"select\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"Draft\",\r\n                    \"value\": \"Draft\",\r\n                    \"_id\": \"6695095120a9be3594c86bc1\"\r\n                },\r\n                {\r\n                    \"name\": \"Negotiation\",\r\n                    \"value\": \"Negotiation\",\r\n                    \"_id\": \"6695095120a9be3594c86bc2\"\r\n                },\r\n                {\r\n                    \"name\": \"Delivered\",\r\n                    \"value\": \"Delivered\",\r\n                    \"_id\": \"6695095120a9be3594c86bc3\"\r\n                },\r\n                {\r\n                    \"name\": \"On Hold\",\r\n                    \"value\": \"On Hold\",\r\n                    \"_id\": \"6695095120a9be3594c86bc4\"\r\n                },\r\n                {\r\n                    \"name\": \"Confirmed\",\r\n                    \"value\": \"Confirmed\",\r\n                    \"_id\": \"6695095120a9be3594c86bc5\"\r\n                },\r\n                {\r\n                    \"name\": \"Closed Accepted\",\r\n                    \"value\": \"Closed Accepted\",\r\n                    \"_id\": \"6695095120a9be3594c86bc6\"\r\n                },\r\n                {\r\n                    \"name\": \"Closed Lost\",\r\n                    \"value\": \"Closed Lost\",\r\n                    \"_id\": \"6695095120a9be3594c86bc7\"\r\n                },\r\n                {\r\n                    \"name\": \"Closed Dead\",\r\n                    \"value\": \"Closed Dead\",\r\n                    \"_id\": \"6695095120a9be3594c86bc8\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695095120a9be3594c86bc9\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695095120a9be3594c86bca\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695095120a9be3594c86bcb\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6695095120a9be3594c86bcc\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6695095120a9be3594c86bcd\"\r\n                }\r\n            ],\r\n            \"_id\": \"6695095120a9be3594c86bc0\"\r\n        },\r\n        {\r\n            \"name\": \"contact\",\r\n            \"label\": \"Contact\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f46\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f47\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f48\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f49\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f4a\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6695099520a9be3594c86f4b\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6695099520a9be3594c86f4c\"\r\n                }\r\n            ],\r\n            \"_id\": \"6695099520a9be3594c86f45\"\r\n        },\r\n        {\r\n            \"name\": \"account\",\r\n            \"label\": \"Account\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872dd\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872de\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872df\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872e0\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872e1\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"669509a320a9be3594c872e2\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"669509a320a9be3594c872e3\"\r\n                }\r\n            ],\r\n            \"_id\": \"669509a320a9be3594c872dc\"\r\n        },\r\n        {\r\n            \"name\": \"grandTotal\",\r\n            \"label\": \"Grand Total\",\r\n            \"type\": \"number\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c8768c\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c8768d\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c8768e\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c8768f\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c87690\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"669509b120a9be3594c87691\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"669509b120a9be3594c87692\"\r\n                }\r\n            ],\r\n            \"_id\": \"669509b120a9be3594c8768b\"\r\n        },\r\n        {\r\n            \"name\": \"validUntil\",\r\n            \"label\": \"Valid Until\",\r\n            \"type\": \"date\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509d320a9be3594c87a53\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"669509d320a9be3594c87a54\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509d320a9be3594c87a55\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509d320a9be3594c87a56\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"669509d320a9be3594c87a57\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"669509d320a9be3594c87a58\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"date\",\r\n                    \"_id\": \"669509d320a9be3594c87a59\"\r\n                }\r\n            ],\r\n            \"_id\": \"669509d320a9be3594c87a52\"\r\n        }\r\n    ]\r\n\r\n    const handleOpenAdd = () => {\r\n        onOpen();\r\n        setType(\"add\")\r\n    }\r\n\r\n    const convertToInvoice = async (id) => {\r\n        try {\r\n            setIsLoding(true);\r\n            let response = await postApi(\"api/quotes/convertToInvoice\", { _id: id });\r\n            if (response.status === 200) {\r\n                toast.success(`Invoice Convert successfully`)\r\n                setAction((pre) => !pre);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(`server error`)\r\n\r\n        } finally {\r\n            setIsLoding(false);\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (ids) => {\r\n        try {\r\n            setIsLoding(true);\r\n            let response = await deleteManyApi(\"api/quotes/deleteMany\", ids);\r\n            if (response.status === 200) {\r\n                toast.success(`Quotes Delete successfully`)\r\n                setSelectedValues([]);\r\n                setDelete(false);\r\n                setAction((pre) => !pre);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(`server error`)\r\n\r\n        } finally {\r\n            setIsLoding(false);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        const result = await dispatch(fetchQuotesData())\r\n\r\n        if (result.payload.status === 200) {\r\n            setData(result?.payload?.data);\r\n        } else {\r\n            toast.error(\"Failed to fetch data\", \"error\");\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    // const [columns, setColumns] = useState([...tableColumns]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [action])\r\n\r\n    return (\r\n        <div>\r\n            <CommonCheckTable\r\n                title={\"Quotes\"}\r\n                isLoding={isLoding}\r\n                columnData={tableColumns ?? []}\r\n                // dataColumn={dataColumn ?? []}\r\n                allData={data ?? []}\r\n                tableData={data}\r\n                searchDisplay={displaySearchData}\r\n                setSearchDisplay={setDisplaySearchData}\r\n                searchedDataOut={searchedData}\r\n                setSearchedDataOut={setSearchedData}\r\n                tableCustomFields={[]}\r\n                access={permission}\r\n                // action={action}\r\n                // setAction={setAction}\r\n                // selectedColumns={selectedColumns}\r\n                // setSelectedColumns={setSelectedColumns}\r\n                // isOpen={isOpen}\r\n                onClose={onclose}\r\n                setIsImport={setIsImport}\r\n                onOpen={handleOpenAdd}\r\n                selectedValues={selectedValues}\r\n                setSelectedValues={setSelectedValues}\r\n                setDelete={setDelete}\r\n                deleteMany={false}\r\n                AdvanceSearch={\r\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\r\n                }\r\n                getTagValuesOutSide={getTagValuesOutSide}\r\n                searchboxOutside={searchboxOutside}\r\n                setGetTagValuesOutside={setGetTagValuesOutside}\r\n                setSearchboxOutside={setSearchboxOutside}\r\n                handleSearchType=\"QuotesSearch\"\r\n            />\r\n\r\n            <QuotesAdvanceSearch\r\n                advanceSearch={advanceSearch}\r\n                setAdvanceSearch={setAdvanceSearch}\r\n                setSearchedData={setSearchedData}\r\n                setDisplaySearchData={setDisplaySearchData}\r\n                allData={data ?? []}\r\n                setAction={setAction}\r\n                setGetTagValues={setGetTagValuesOutside}\r\n                setSearchbox={setSearchboxOutside}\r\n            />\r\n\r\n            <AddEdit isOpen={isOpen} size={\"lg\"} onClose={onClose} setAction={setAction} type={type} selectedId={selectedId} />\r\n            <CommonDeleteModel\r\n                isOpen={deleteModel}\r\n                onClose={() => setDelete(false)}\r\n                type=\"Quotes\"\r\n                handleDeleteData={handleDelete}\r\n                ids={selectedValues}\r\n            />\r\n\r\n            <ImportModal\r\n                text=\"Quotes file\"\r\n                isOpen={isImport}\r\n                onClose={setIsImport}\r\n                customFields={customFields}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getApi } from 'services/api';\r\nimport { fetchAccountData } from '../../redux/slices/accountSlice';\r\nimport { toast } from 'react-toastify';\r\nimport moment from 'moment';\r\n\r\nconst OpprtunityModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data } = props\r\n    const title = \"Opprtunities\";\r\n    const dispatch = useDispatch();\r\n    // const [data, setData] = useState([]);\r\n\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Opportunity Name', accessor: 'opportunityName',\r\n        },\r\n        {\r\n            Header: 'Account Name', accessor: 'accountName'\r\n        },\r\n        {\r\n            Header: 'Opportunity Amount', accessor: 'opportunityAmount',\r\n        },\r\n        {\r\n            Header: 'Expected Close Date', accessor: 'expectedCloseDate', cell: (cell) => (\r\n                <div>{moment(cell?.value).format(\"YYYY-MM-DD\")}</div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Sales Stage', accessor: 'salesStage',\r\n        },\r\n\r\n    ];\r\n\r\n    const [columns, setColumns] = useState([...tableColumns]);\r\n    const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    // const fetchData = async () => {\r\n    //     setIsLoding(true)\r\n    //     const result = await dispatch(fetchAccountData())\r\n\r\n    //     if (result.payload.status === 200) {\r\n    //         setData(result?.payload?.data);\r\n    //     } else {\r\n    //         toast.error(\"Failed to fetch data\", \"error\");\r\n    //     }\r\n    //     setIsLoding(false)\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchData()\r\n    // }, [])\r\n\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Opportunity</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex> :\r\n                        <CommonCheckTable\r\n                            title={title}\r\n                            isLoding={isLoding}\r\n                            columnData={columns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} disabled={isLoding ? true : false} leftIcon={<GiClick />} onClick={handleSubmit}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default OpprtunityModel\r\n","import {\r\n  Box, Checkbox,\r\n  Flex, Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\n\r\n// Custom components\r\nimport Card from \"components/card/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport Pagination from \"components/pagination/Pagination\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\n\r\nexport default function ContactTable(props) {\r\n  const { columnsData, tableData, title, type, selectedValues, setSelectedValues } = props;\r\n\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n  const data = useMemo(() => tableData, [tableData]);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n  const [gopageValue, setGopageValue] = useState()\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n  if (pageOptions.length < gopageValue) {\r\n    setGopageValue(pageOptions.length)\r\n  }\r\n\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n\r\n  const handleCheckboxChange = (event, value) => {\r\n    if (type === \"multi\") {\r\n      if (event.target.checked) {\r\n        setSelectedValues((prevSelectedValues) => [...prevSelectedValues, value]);\r\n      } else {\r\n        setSelectedValues((prevSelectedValues) =>\r\n          prevSelectedValues.filter((selectedValue) => selectedValue !== value)\r\n        );\r\n      }\r\n    } else {\r\n      if (event.target.checked) {\r\n        setSelectedValues(value);\r\n      } else {\r\n        setSelectedValues(null);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Card\r\n      direction='column'\r\n      w='100%'\r\n      px='0px'\r\n      style={{ border: '1px solid gray.200' }}\r\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n      <Flex px='25px' justify='space-between' mb='20px' align='center'>\r\n        <Text\r\n          color={textColor}\r\n          fontSize='22px'\r\n          fontWeight='700'\r\n          lineHeight='100%'>\r\n          {title}  (<CountUpComponent key={data?.length} targetNumber={data?.length} />)\r\n        </Text>\r\n      </Flex>\r\n      <Box overflowY={'auto'} className=\"table-container-property\" >\r\n+\r\n+        <Table  {...getTableProps()} variant='simple' color='gray.500' mb='24px'>\r\n          <Thead zIndex={1}>\r\n            {headerGroups?.map((headerGroup, index) => (\r\n              <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                {headerGroup.headers.map((column, index) => (\r\n\r\n                  <Th\r\n                    {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                    pe=\"10px\"\r\n                    key={index}\r\n                    borderColor={borderColor}\r\n                  >\r\n                    <Flex\r\n                      align=\"center\"\r\n                      justifyContent={column.center ? \"center\" : \"start\"}\r\n                      fontSize={{ sm: \"14px\", lg: \"16px\" }}\r\n                      color=\" secondaryGray.900\"\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\", marginRight: \"8px\" }}>\r\n                        {column.render(\"Header\")}\r\n                      </span>\r\n\r\n                      {column.isSortable !== false && (\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                        </span>\r\n                      )}\r\n                    </Flex>\r\n                  </Th>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Thead>\r\n          <Tbody  {...getTableBodyProps()}>\r\n            {data?.length === 0 && (\r\n +\r\n +             <Tr>\r\n                <Td colSpan={columns.length}>\r\n                  img\r\n                </Td>\r\n              </Tr>\r\n            )}\r\n            {page?.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <Tr {...row?.getRowProps()} key={index}>\r\n                  {row?.cells?.map((cell, index) => {\r\n                    let data = \"\";\r\n                    if (cell?.column.Header === \"#\") {\r\n                      data = (\r\n                        <Flex align=\"center\">\r\n                          {type === \"multi\" ? <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues.includes(cell?.value)} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" /> :\r\n                            <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues === cell?.value} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" />}\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.row?.index + 1}\r\n                          </Text>\r\n                        </Flex>\r\n                      );\r\n                    } else if (cell?.column.Header === \"title\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"first Name\") {\r\n                      data = (\r\n                        // <Link to={`/contactView/${cell?.row?.original._id}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          // sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                        // </Link>\r\n                      );\r\n                    } else if (cell?.column.Header === \"last Name\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"phone Number\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Email Address\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"physical Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"mailing Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Contact Method\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Td\r\n                        {...cell?.getCellProps()}\r\n                        key={index}\r\n                        fontSize={{ sm: \"14px\" }}\r\n                        minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                        borderColor='transparent'>\r\n                        {data}\r\n                      </Td>\r\n                    );\r\n                  })}\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      {data?.length > 5 && <Pagination gotoPage={gotoPage} gopageValue={gopageValue} setGopageValue={setGopageValue} pageCount={pageCount} canPreviousPage={canPreviousPage} previousPage={previousPage} canNextPage={canNextPage} pageOptions={pageOptions} setPageSize={setPageSize} nextPage={nextPage} pageSize={pageSize} pageIndex={pageIndex} />}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ContactTable from './Contact.js'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable.js';\r\nimport { fetchContactCustomFiled } from '../../redux/slices/contactCustomFiledSlice.js';\r\nimport { fetchContactData } from '../../redux/slices/contactSlice.js';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ContactModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data } = props\r\n    const [selectedValues, setSelectedValues] = useState();\r\n    const [contactData, setContactData] = useState([]);\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [columns, setColumns] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const fetchCustomDataFields = async () => {\r\n        setIsLoding(true);\r\n        const result = await dispatch(fetchContactCustomFiled());\r\n        setContactData(result?.payload?.data);\r\n\r\n        const tempTableColumns = [\r\n            { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n            ...(result?.payload?.data?.[0]?.fields || [])\r\n                .filter(field => field?.isTableField === true)\r\n                .map(field => ({ Header: field?.label, accessor: field?.name }))\r\n        ];\r\n\r\n        setColumns(tempTableColumns);\r\n        setIsLoding(false);\r\n    };\r\n    useEffect(async () => {\r\n        await dispatch(fetchContactData())\r\n        fetchCustomDataFields();\r\n    }, []);\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Contact</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex>\r\n                        :\r\n                        <CommonCheckTable\r\n                            title={'Contacts'}\r\n                            isLoding={isLoding}\r\n                            columnData={columns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            tableCustomFields={contactData?.[0]?.fields?.filter((field) => field?.isTableField === true) || []}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} onClick={handleSubmit} disabled={isLoding ? true : false} leftIcon={<GiClick />}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ContactModel\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n"],"names":["props","onClose","isOpen","fieldName","setFieldValue","data","type","billingState","billingCity","billingPostalCode","billingCountry","billingStreet","isLoding","setIsLoding","useDispatch","useState","leadData","setLeadData","selectedValues","setSelectedValues","tableColumns","length","find","item","_id","Header","accessor","isSortable","width","_jsxs","Modal","size","children","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Flex","justifyContent","alignItems","Spinner","CommonCheckTable","title","columnData","allData","tableData","AdvanceSearch","ManageGrid","deleteMany","selectType","customSearch","ModalFooter","Button","variant","me","disabled","leftIcon","GiClick","onClick","async","e","console","log","colorScheme","CommonFileUpload","count","text","onFileSelect","textColorPrimary","useColorModeValue","brandColor","Grid","templateColumns","gap","GridItem","colSpan","base","Dropzone","w","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","color","justify","mx","mb","Text","fontSize","fontWeight","direction","textAlign","mt","my","state","advanceSearch","setAdvanceSearch","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","validationSchema","yup","quoteNumber","quoteStage","contactName","accountName","grandTotal","validUntil","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","getValue","name","value","setGetTagValues","filter","errors","touched","handleBlur","handleChange","handleSubmit","dirty","_Fragment","isCentered","md","FormLabel","display","ms","Input","onChange","onBlur","placeholder","Select","undefined","borderColor","mr","customFields","navigate","useNavigate","quotes","AddData","fileData","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","user","JSON","parse","localStorage","getItem","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","accountAccess","contactAccess","HasAccess","actionHeader","center","cell","row","i","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","view","ViewIcon","_row$values2","TbFileInvoice","_row$values3","convertToInvoice","delete","DeleteIcon","_row$values4","className","_cell$row","handleViewOpen","original","textDecoration","cursor","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","_cell$row6","_cell$row6$original","_cell$row7","_cell$row7$original","role","_cell$row2","_cell$row3","contact","_cell$row10","_cell$row10$original","_cell$row11","_cell$row11$original","_cell$row12","_cell$row12$original","_cell$row13","_cell$row13$original","_cell$row8","_cell$row9","account","_cell$row14","_cell$row14$original","_cell$row15","_cell$row15$original","_cell$row16","_cell$row16$original","currency","id","postApi","status","toast","success","pre","error","useEffect","result","fetchQuotesData","_result$payload","payload","fetchData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","onclose","handleOpenAdd","SearchIcon","sm","handleSearchType","QuotesAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","ImportModal","moment","format","columns","setColumns","selectedColumns","setSelectedColumns","colum","ContactTable","columnsData","useMemo","gopageValue","setGopageValue","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageSize","textColor","handleCheckboxChange","event","target","checked","prevSelectedValues","selectedValue","Card","px","style","border","overflowX","lg","align","lineHeight","CountUpComponent","targetNumber","overflowY","Table","Thead","zIndex","map","headerGroup","index","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","getSortByToggleProps","pe","marginRight","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","_row$cells","getRowProps","cells","Checkbox","isChecked","includes","getCellProps","Pagination","_contactData$","_contactData$$fields","contactData","setContactData","fetchContactData","_result$payload2","_result$payload2$data","_result$payload2$data2","fetchContactCustomFiled","tempTableColumns","fields","field","isTableField","label","fetchCustomDataFields","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","textarea","cx","__css","__DEV__","displayName"],"sourceRoot":""}