{"version":3,"file":"static/js/3999.7b4917d8.chunk.js","mappings":"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","sources":["views/admin/opportunities/components/OpprtunityAdvanceSearch.js","views/admin/opportunities/components/ImportModel.js","views/admin/opportunities/index.js","components/commonFileUpload/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Select, Text, Button, } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { setSearchValue, getSearchData, setGetTagValues } from '../../../../redux/slices/advanceSearchSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst OpprtunityAdvanceSearch = (props) => {\r\n    const { state, allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchClear, setSearchbox } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const initialValues = {\r\n        opportunityName: '',\r\n        accountName2: '',\r\n        opportunityAmount: '',\r\n        expectedCloseDate: '',\r\n        salesStage: '',\r\n    }\r\n    const validationSchema = yup.object({\r\n        opportunityName: yup.string(),\r\n        accountName2: yup.string(),\r\n        opportunityAmount: yup.string(),\r\n        expectedCloseDate: yup.string(),\r\n        salesStage: yup.string()\r\n    });\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            dispatch(setSearchValue(values))\r\n            dispatch(getSearchData({ values: values, allData: allData, type: 'Opprtunity' }))\r\n            // const searchResult = allData?.filter(\r\n            //     (item) =>\r\n            //         (!values?.senderName || (item?.senderName && item?.senderName.toLowerCase().includes(values?.senderName?.toLowerCase()))) &&\r\n            //         (!values?.realetedTo || (values.realetedTo === \"contact\" ? item.createBy : item.createByLead)) &&\r\n            //         (!values?.createByName || (item?.createByName && item?.createByName.toLowerCase().includes(values?.createByName?.toLowerCase())))\r\n            // )\r\n            // let getValue = [values.senderName, values?.realetedTo, values?.createByName].filter(value => value);\r\n            const getValue = [\r\n                {\r\n                    name: [\"opportunityName\"],\r\n                    value: values.opportunityName\r\n                },\r\n                {\r\n                    name: [\"accountName2\"],\r\n                    value: values.accountName2\r\n                },\r\n                {\r\n                    name: [\"opportunityAmount\"],\r\n                    value: values.opportunityAmount\r\n                },\r\n                {\r\n                    name: [\"expectedCloseDate\"],\r\n                    value: values.expectedCloseDate\r\n                },\r\n                {\r\n                    name: [\"salesStage\"],\r\n                    value: values.salesStage\r\n                },\r\n            ]\r\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\r\n            setDisplaySearchData(true)\r\n            setAdvanceSearch(false)\r\n            resetForm();\r\n            setSearchbox('');\r\n        }\r\n    })\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\r\n\r\n    return (\r\n        <>\r\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Advance Search</ModalHeader>\r\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\r\n                    <ModalBody>\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Opportunity Name\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.opportunityName}\r\n                                    name=\"opportunityName\"\r\n                                    placeholder='Enter Opportunity Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.opportunityName && touched.opportunityName && errors.opportunityName}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Account Name\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.accountName2}\r\n                                    name=\"accountName2\"\r\n                                    placeholder='Enter Account Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.accountName2 && touched.accountName2 && errors.accountName2}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Opportunity Amount\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.opportunityAmount}\r\n                                    name=\"opportunityAmount\"\r\n                                    placeholder='Enter Opportunity Amount'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.opportunityAmount && touched.opportunityAmount && errors.opportunityAmount}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Expected Close Date\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.expectedCloseDate}\r\n                                    name=\"expectedCloseDate\"\r\n                                    type=\"date\"\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.expectedCloseDate && touched.expectedCloseDate && errors.expectedCloseDate}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Sales Stage\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.salesStage}\r\n                                    name=\"salesStage\"\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Sales Stage'}\r\n                                >\r\n                                    <option value={\"Prospecting\"}>Prospecting</option>\r\n                                    <option value={\"Qualification\"}>Qualification</option>\r\n                                    <option value={\"Needs Analysis\"}>Needs Analysis</option>\r\n                                    <option value={\"Value Propositon\"}>Value Propositon</option>\r\n                                    <option value={\"Identifying Decision Makers\"}>Identifying Decision Makers</option>\r\n                                    <option value={\"Perception Analysis\"}>Perception Analysis</option>\r\n                                    <option value={\"Proposal/Price Quote\"}>Proposal/Price Quote</option>\r\n                                    <option value={\"Negotiation/Review\"}>Negotiation/Review</option>\r\n                                    <option value={\"Closed/Won\"}>Closed/Won</option>\r\n                                    <option value={\"Closed/Lost\"}>Closed/Lost</option>\r\n                                </Select>\r\n                                <Text mb='10px' color={'red'}> {errors.salesStage && touched.salesStage && errors.salesStage}</Text>\r\n                            </GridItem>\r\n\r\n                        </Grid>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\r\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpprtunityAdvanceSearch\r\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { useFormik } from 'formik'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CommonFileUpload from 'components/commonFileUpload'\r\n\r\nconst ImportModal = (props) => {\r\n    const { onClose, isOpen, text, customFields } = props\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        opprotunities: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData()\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            resetForm()\r\n\r\n            if (values.opprotunities) {\r\n                onClose();\r\n                navigate('/opprotunitiesImport', { state: { fileData: values.opprotunities, customFields: customFields } });\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Import Opprotunities</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <CommonFileUpload count={values.opprotunities.length} onFileSelect={(file) => setFieldValue('opprotunities', file)} text={text} />\r\n                            <Text mb='10px' color={'red'}> {errors.opprotunities && touched.opprotunities && <>Please Select {text}</>}</Text>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\r\n                    <Button sx={{\r\n                        marginLeft: 2,\r\n                        textTransform: \"capitalize\",\r\n                    }} variant=\"outline\"\r\n                        colorScheme=\"red\" size=\"sm\" onClick={() => {\r\n                            onClose()\r\n                            formik.resetForm()\r\n                        }}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImportModal","import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\r\nimport { getApi, deleteManyApi } from 'services/api';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport CommonCheckTable from '../../../components/reactTable/checktable';\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { CiMenuKebab } from 'react-icons/ci';\r\nimport moment from 'moment';\r\nimport { MdLeaderboard } from 'react-icons/md';\r\nimport { IoIosContact } from 'react-icons/io';\r\nimport AddEdit from './AddEdit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchEmailsData } from '../../../redux/slices/emailsSlice';\r\nimport { toast } from 'react-toastify';\r\nimport OpprtunityAdvanceSearch from './components/OpprtunityAdvanceSearch';\r\nimport { fetchOpportunityData } from '../../../redux/slices/opportunitySlice';\r\nimport CommonDeleteModel from '../../../components/commonDeleteModel'\r\nimport ImportModal from './components/ImportModel';\r\n\r\nconst Index = (props) => {\r\n    const title = \"Opprtunities\";\r\n    const [action, setAction] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\r\n    const [searchboxOutside, setSearchboxOutside] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [displaySearchData, setDisplaySearchData] = useState(false);\r\n    const [searchedData, setSearchedData] = useState([]);\r\n    const [selectedId, setSelectedId] = useState();\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [type, setType] = useState(\"\")\r\n    const [isImport, setIsImport] = useState(false);\r\n\r\n    const [permission, accountAccess] = HasAccess([\"Opportunities\", \"Account\"]);\r\n\r\n    const actionHeader = {\r\n        Header: \"Action\",\r\n        accessor: \"action\",\r\n        isSortable: false,\r\n        center: true,\r\n        cell: ({ row, i }) => (\r\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\r\n                <Menu isLazy>\r\n                    <MenuButton>\r\n                        <CiMenuKebab />\r\n                    </MenuButton>\r\n                    <MenuList\r\n                        minW={\"fit-content\"}\r\n                        transform={\"translate(1520px, 173px);\"}\r\n                    >\r\n                        {permission?.update && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                icon={<EditIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setType(\"edit\");\r\n                                    onOpen();\r\n                                    setSelectedId(row?.values?._id);\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                        )}\r\n                        {permission?.view && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"green\"}\r\n                                icon={<ViewIcon mb={1} fontSize={15} />}\r\n                                onClick={() => {\r\n                                    navigate(`/opportunitiesView/${row?.values?._id}`);\r\n                                }}\r\n                            >\r\n                                View\r\n                            </MenuItem>\r\n                        )}\r\n                        {permission?.delete && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"red\"}\r\n                                icon={<DeleteIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setDelete(true);\r\n                                    setSelectedValues([row?.values?._id]);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Menu>\r\n            </Text>\r\n        ),\r\n    };\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Opportunity Name', accessor: 'opportunityName', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => handleViewOpen(cell?.row?.original._id)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Account Name', accessor: 'accountName', cell: (cell) => (\r\n                (user.role === 'superAdmin' || accountAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.accountName !== null && `/accountView/${cell?.row?.original.accountName}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.accountName2 ? cell?.row?.original?.accountName2 : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.accountName2 ? cell?.row?.original?.accountName2 : \"-\"}\r\n                    </Text>\r\n\r\n            )\r\n        },\r\n        {\r\n            Header: 'Opportunity Amount', accessor: 'opportunityAmount',\r\n        },\r\n        {\r\n            Header: 'Expected Close Date', accessor: 'expectedCloseDate', cell: (cell) => (\r\n                <div>{moment(cell?.value).format(\"YYYY-MM-DD\")}</div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Sales Stage', accessor: 'salesStage',\r\n        },\r\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\r\n\r\n    ];\r\n    const handleViewOpen = (id) => {\r\n        navigate(`/opportunitiesView/${id}`)\r\n    }\r\n    const customFields = [\r\n        {\r\n            \"name\": \"opportunityName\",\r\n            \"label\": \"Opportunity Name\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f13\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f14\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Opportunity Name is required \",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f15\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f16\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f17\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6690be4a4e0f5916f4313f18\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6690be4a4e0f5916f4313f19\"\r\n                }\r\n            ],\r\n            \"_id\": \"6690be4a4e0f5916f4313f12\"\r\n        },\r\n        {\r\n            \"name\": \"accountName\",\r\n            \"label\": \"Account Name\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690be854e0f5916f4314260\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690be854e0f5916f4314261\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Account Name is required \",\r\n                    \"_id\": \"6690be854e0f5916f4314262\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690be854e0f5916f4314263\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690be854e0f5916f4314264\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6690be854e0f5916f4314265\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6690be854e0f5916f4314266\"\r\n                }\r\n            ],\r\n            \"_id\": \"6690be854e0f5916f431425f\"\r\n        },\r\n        {\r\n            \"name\": \"opportunityAmount\",\r\n            \"label\": \"Opportunity Amount\",\r\n            \"type\": \"number\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690bea44e0f5916f43145c5\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690bea44e0f5916f43145c6\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Opportunity Amount is required \",\r\n                    \"_id\": \"6690bea44e0f5916f43145c7\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bea44e0f5916f43145c8\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bea44e0f5916f43145c9\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6690bea44e0f5916f43145ca\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6690bea44e0f5916f43145cb\"\r\n                }\r\n            ],\r\n            \"_id\": \"6690bea44e0f5916f43145c4\"\r\n        },\r\n        {\r\n            \"name\": \"expectedCloseDate\",\r\n            \"label\": \"Expected Close Date\",\r\n            \"type\": \"date\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690bec04e0f5916f4314942\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6690bec04e0f5916f4314943\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Expected Close Date is required \",\r\n                    \"_id\": \"6690bec04e0f5916f4314944\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bec04e0f5916f4314945\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bec04e0f5916f4314946\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6690bec04e0f5916f4314947\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"date\",\r\n                    \"_id\": \"6690bec04e0f5916f4314948\"\r\n                }\r\n            ],\r\n            \"_id\": \"6690bec04e0f5916f4314941\"\r\n        },\r\n        {\r\n            \"name\": \"salesStage\",\r\n            \"label\": \"Sales Stage\",\r\n            \"type\": \"select\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"Prospecting\",\r\n                    \"value\": \"Prospecting\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cd7\"\r\n                },\r\n                {\r\n                    \"name\": \"Qualification\",\r\n                    \"value\": \"Qualification\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cd8\"\r\n                },\r\n                {\r\n                    \"name\": \"Needs Analysis\",\r\n                    \"value\": \"Needs Analysis\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cd9\"\r\n                },\r\n                {\r\n                    \"name\": \"Value Propositon\",\r\n                    \"value\": \"Value Propositon\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cda\"\r\n                },\r\n                {\r\n                    \"name\": \"Identifying Decision Makers\",\r\n                    \"value\": \"Identifying Decision Makers\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cdb\"\r\n                },\r\n                {\r\n                    \"name\": \"Perception Analysis\",\r\n                    \"value\": \"Perception Analysis\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cdc\"\r\n                },\r\n                {\r\n                    \"name\": \"Proposal/Price Quote\",\r\n                    \"value\": \"Proposal/Price Quote\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cdd\"\r\n                },\r\n                {\r\n                    \"name\": \"Negotiation/Review\",\r\n                    \"value\": \"Negotiation/Review\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cde\"\r\n                },\r\n                {\r\n                    \"name\": \"Closed/Won\",\r\n                    \"value\": \"Closed/Won\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314cdf\"\r\n                },\r\n                {\r\n                    \"name\": \"Closed/Lost\",\r\n                    \"value\": \"Closed/Lost\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce0\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Sales Stage is required\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce1\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce2\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce3\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce4\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6690bf4a4e0f5916f4314ce5\"\r\n                }\r\n            ],\r\n            \"_id\": \"6690bf4a4e0f5916f4314cd6\"\r\n        }\r\n    ]\r\n\r\n    const handleOpenAdd = () => {\r\n        onOpen();\r\n        setType(\"add\")\r\n    }\r\n\r\n    const handleDelete = async (ids) => {\r\n        try {\r\n            setIsLoding(true);\r\n            let response = await deleteManyApi(\"api/opportunity/deleteMany\", ids);\r\n            if (response.status === 200) {\r\n                toast.success(`Opprtunities Delete successfully`)\r\n                setSelectedValues([]);\r\n                setDelete(false);\r\n                setAction((pre) => !pre);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(`server error`)\r\n\r\n        } finally {\r\n            setIsLoding(false);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        const result = await dispatch(fetchOpportunityData())\r\n\r\n        if (result.payload.status === 200) {\r\n            setData(result?.payload?.data);\r\n        } else {\r\n            toast.error(\"Failed to fetch data\", \"error\");\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    // const [columns, setColumns] = useState([...tableColumns]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [action])\r\n\r\n    return (\r\n        <div>\r\n            <CommonCheckTable\r\n                title={title}\r\n                isLoding={isLoding}\r\n                columnData={tableColumns ?? []}\r\n                // dataColumn={dataColumn ?? []}\r\n                allData={data ?? []}\r\n                tableData={data}\r\n                searchDisplay={displaySearchData}\r\n                setSearchDisplay={setDisplaySearchData}\r\n                searchedDataOut={searchedData}\r\n                setSearchedDataOut={setSearchedData}\r\n                tableCustomFields={[]}\r\n                access={permission}\r\n                // action={action}\r\n                // setAction={setAction}\r\n                // selectedColumns={selectedColumns}\r\n                // setSelectedColumns={setSelectedColumns}\r\n                // isOpen={isOpen}\r\n                // onClose={onclose}\r\n                setIsImport={setIsImport}\r\n                onOpen={handleOpenAdd}\r\n                selectedValues={selectedValues}\r\n                setSelectedValues={setSelectedValues}\r\n                setDelete={setDelete}\r\n                deleteMany={false}\r\n                AdvanceSearch={\r\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\r\n                }\r\n                getTagValuesOutSide={getTagValuesOutSide}\r\n                searchboxOutside={searchboxOutside}\r\n                setGetTagValuesOutside={setGetTagValuesOutside}\r\n                setSearchboxOutside={setSearchboxOutside}\r\n                handleSearchType=\"OpprtunitySearch\"\r\n            />\r\n\r\n            <OpprtunityAdvanceSearch\r\n                advanceSearch={advanceSearch}\r\n                setAdvanceSearch={setAdvanceSearch}\r\n                setSearchedData={setSearchedData}\r\n                setDisplaySearchData={setDisplaySearchData}\r\n                allData={data ?? []}\r\n                setAction={setAction}\r\n                setGetTagValues={setGetTagValuesOutside}\r\n                setSearchbox={setSearchboxOutside}\r\n            />\r\n\r\n            <AddEdit isOpen={isOpen} size={\"lg\"} onClose={onClose} setAction={setAction} type={type} selectedId={selectedId} />\r\n            <CommonDeleteModel\r\n                isOpen={deleteModel}\r\n                onClose={() => setDelete(false)}\r\n                type=\"Opportunities\"\r\n                handleDeleteData={handleDelete}\r\n                ids={selectedValues}\r\n            />\r\n\r\n            <ImportModal\r\n                text=\"Opprotunities file\"\r\n                isOpen={isImport}\r\n                onClose={setIsImport}\r\n                customFields={customFields}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","// Chakra imports\r\nimport {\r\n    Box, Flex,\r\n    Grid,\r\n    GridItem,\r\n    Icon,\r\n    Text,\r\n    useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\n// Assets\r\nimport Dropzone from \"components/Dropzone\";\r\nimport { MdUpload } from \"react-icons/md\";\r\n\r\nexport default function CommonFileUpload(props) {\r\n    // const { used, total, count, ...rest } = props;\r\n    const { count, text, onFileSelect } = props;\r\n    // Chakra Color Mode\r\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n    const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n    const textColorSecondary = \"gray.400\";\r\n    return (\r\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Dropzone\r\n                    w={{ base: \"100%\" }}\r\n                    me='36px'\r\n                    minH={200}\r\n                    img={text === 'Property Photos' ? 'img' : ''}\r\n                    csv={'csv'}\r\n                    height={'100%'}\r\n                    onFileSelect={onFileSelect}\r\n                    isMultipleAllow={false}\r\n                    content={\r\n                        <Box>\r\n                            <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\r\n                            <Flex justify='center' mx='auto' mb='12px'>\r\n                                <Text fontSize='xl' fontWeight='700' color={brandColor}>\r\n                                    Upload File\r\n                                </Text>\r\n                            </Flex>\r\n                            {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\r\n                                Selected Files : {count}\r\n                            </Text>}\r\n                        </Box>\r\n                    }\r\n                />\r\n            </GridItem>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Flex direction='column' >\r\n                    <Text\r\n                        color={textColorPrimary}\r\n                        fontWeight='bold'\r\n                        textAlign='start'\r\n                        fontSize='2xl'\r\n                        mt={{ base: \"20px\" }}>\r\n                        Upload {text}\r\n                    </Text>\r\n                    <Text\r\n                        color={textColorSecondary}\r\n                        fontSize='md'\r\n                        my={{ base: \"auto\" }}\r\n                        mx='auto'\r\n                        textAlign='start'>\r\n                        Accepted File Type (csv, xlsx file - 15MB max) only 1 file\r\n                    </Text>\r\n                </Flex>\r\n            </GridItem>\r\n        </Grid>\r\n    );\r\n}"],"names":["props","state","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","useDispatch","validationSchema","yup","opportunityName","accountName2","opportunityAmount","expectedCloseDate","salesStage","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","type","getValue","name","value","setGetTagValues","filter","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_jsx","_Fragment","children","_jsxs","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","Grid","templateColumns","mb","gap","GridItem","colSpan","base","md","FormLabel","display","ms","fontSize","fontWeight","color","mt","Input","onChange","onBlur","placeholder","Text","Select","ModalFooter","Button","size","variant","mr","disabled","Spinner","colorScheme","text","customFields","setIsLoding","useState","navigate","useNavigate","opprotunities","AddData","async","fileData","e","console","log","CommonFileUpload","count","length","onFileSelect","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","user","JSON","parse","localStorage","getItem","data","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","accountAccess","HasAccess","actionHeader","Header","accessor","isSortable","center","cell","row","i","textAlign","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","delete","DeleteIcon","_row$values3","tableColumns","width","className","_cell$row","handleViewOpen","original","me","textDecoration","cursor","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","_cell$row6","_cell$row6$original","_cell$row7","_cell$row7$original","role","_cell$row2","_cell$row3","accountName","moment","format","id","useEffect","result","fetchOpportunityData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","tableData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","handleOpenAdd","deleteMany","AdvanceSearch","leftIcon","SearchIcon","sm","handleSearchType","OpprtunityAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","success","pre","ImportModal","textColorPrimary","useColorModeValue","brandColor","Dropzone","w","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","Flex","justify","mx","direction","my"],"sourceRoot":""}