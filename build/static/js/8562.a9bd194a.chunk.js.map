{"version":3,"file":"static/js/8562.a9bd194a.chunk.js","mappings":"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","sources":["views/admin/opportunities/View.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport AddEdit from './AddEdit';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\r\nimport { useFormik } from 'formik';\r\nimport dayjs from 'dayjs';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst View = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [opportunityAccess, accountAccess] = HasAccess(['Opportunities', 'Account'])\r\n\r\n    const [data, setData] = useState()\r\n    const { onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [type, setType] = useState(\"\")\r\n    const [editableField, setEditableField] = useState(null);\r\n    const [editableFieldName, setEditableFieldName] = useState(null);\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const todayTime = new Date().toISOString().split('.')[0];\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            let result = await getApi('api/opportunity/view/', id);\r\n            setData(result?.data);\r\n        }\r\n    }\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Opportunities_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const handleDeleteOpportunities = async (ids) => {\r\n        try {\r\n            let response = await deleteManyApi('api/opportunities/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                navigate('/opportunities')\r\n                toast.success(`Opprtunities Delete successfully`)\r\n                setDeleteManyModel(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(`server error`)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        opportunityName: data?.opportunityName,\r\n        accountName: data?.accountName,\r\n        assignUser: data?.assignUser,\r\n        type: data?.type,\r\n        leadSource: data?.leadSource,\r\n        currency: data?.currency,\r\n        opportunityAmount: data?.opportunityAmount,\r\n        amount: data?.amount,\r\n        expectedCloseDate: data?.expectedCloseDate,\r\n        nextStep: data?.nextStep,\r\n        salesStage: data?.salesStage,\r\n        probability: data?.probability,\r\n        description: data?.description,\r\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: opprtunitiesSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (values, { resetForm }) => {\r\n            setEditableField(null);\r\n            const payload = {\r\n                ...values,\r\n                modifiedDate: new Date()\r\n            }\r\n            let response = await putApi(`api/opportunity/edit/${id}`, payload)\r\n            if (response.status === 200) {\r\n                fetchViewData()\r\n                toast.success(`${editableFieldName} Update successfully`)\r\n            } else {\r\n                toast.error(`${editableFieldName} not Update`)\r\n            }\r\n        },\r\n    });\r\n    const handleDoubleClick = (fieldName, value, name) => {\r\n        formik.setFieldValue(fieldName, value);\r\n        setEditableField(fieldName)\r\n        setEditableFieldName(name)\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        formik.handleSubmit();\r\n    };\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                <Heading size=\"lg\" m={3}>\r\n                    {data?.opportunityName || \"\"}\r\n                </Heading>\r\n\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 4 }}>\r\n\r\n                    <Card >\r\n                        <Grid gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                        <Heading size=\"md\" mb={3}>\r\n                                            Opportunities Details\r\n                                        </Heading>\r\n                                        <Flex id=\"hide-btn\" >\r\n                                            <Menu>\r\n                                                {(user.role === 'superAdmin' || opportunityAccess?.create || opportunityAccess?.update || opportunityAccess?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                                    Actions\r\n                                                </MenuButton>}\r\n                                                <MenuDivider />\r\n                                                <MenuList minWidth={2}>\r\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\r\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n\r\n                                                    {(user.role === 'superAdmin' || opportunityAccess?.delete) && <>\r\n                                                        <MenuDivider />\r\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                                    </>}\r\n                                                </MenuList>\r\n                                            </Menu>\r\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\r\n                                                Back\r\n                                            </Button>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Opportunity Name </Text>\r\n                                {\r\n                                    editableField === \"opportunityName\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"opportunityName\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.opportunityName}\r\n                                                borderColor={formik?.errors?.opportunityName && formik?.touched?.opportunityName ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.opportunityName && formik?.touched.opportunityName && formik?.errors.opportunityName}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"opportunityName\", data?.opportunityName, \"Opportunity Name\")}>{data?.opportunityName ? data?.opportunityName : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Account Name </Text>\r\n                                {\r\n                                    data?.accountName ?\r\n                                        <Link to={accountAccess?.view && `/accountView/${data?.accountName}`}>\r\n                                            <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.accountName2 ? data?.accountName2 : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }}>{data?.accountName2 ? data?.accountName2 : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned User </Text>\r\n                                {\r\n                                    data?.assignUser ?\r\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignUser}`}>\r\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Type</Text>\r\n                                {\r\n                                    editableField === \"type\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.type}\r\n                                                name=\"type\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.type && formik?.touched.type ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Type'}\r\n                                                borderColor={formik?.errors.type && formik?.touched.type ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value={\"Existing Bussiness\"} >Existing Bussiness</option>\r\n                                                <option value={\"New Bussiness\"} >New Bussiness</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.type && formik?.touched.type && formik?.errors.type}</Text>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"type\", data?.type, \"Type\")}>{data?.type ? data?.type : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Lead Source</Text>\r\n                                {\r\n                                    editableField === \"leadSource\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.leadSource}\r\n                                                name=\"leadSource\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.leadSource && formik?.touched.leadSource ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Lead Source'}\r\n                                                borderColor={formik?.errors.leadSource && formik?.touched.leadSource ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value={\"Cold Call\"}>Cold Call</option>\r\n                                                <option value={\"Existing Customer\"}>Existing Customer</option>\r\n                                                <option value={\"Self Generated\"}>Self Generated</option>\r\n                                                <option value={\"Employee\"}>Employee</option>\r\n                                                <option value={\"Partner\"}>Partner</option>\r\n                                                <option value={\"Public Relation\"}>Public Relation</option>\r\n                                                <option value={\"Direct Mail\"}>Direct Mail</option>\r\n                                                <option value={\"Conference\"}>Conference</option>\r\n                                                <option value={\"Trade Show\"}>Trade Show</option>\r\n                                                <option value={\"Web Site\"}>Web Site</option>\r\n                                                <option value={\"Word Of Mouth\"}>Word Of Mouth</option>\r\n                                                <option value={\"Email\"}>Email</option>\r\n                                                <option value={\"Other\"}>Other</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik.errors.leadSource && formik.touched.leadSource && formik.errors.leadSource}</Text>\r\n                                        </>\r\n\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"leadSource\", data?.leadSource, \"Lead Source\")}>{data?.leadSource ? data?.leadSource : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Currency</Text>\r\n                                {\r\n                                    editableField === \"currency\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.currency}\r\n                                                name=\"currency\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.currency && formik?.touched.currency ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Select Currency'}\r\n                                                borderColor={formik?.errors.currency && formik?.touched.currency ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value={\"$\"}>INR</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.currency && formik?.touched.currency && formik?.errors.currency}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"currency\", data?.currency, \"Currency\")}>{data?.currency ? data?.currency : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Opportunity Amount</Text>\r\n                                {\r\n                                    editableField === \"opportunityAmount\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"opportunityAmount\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.opportunityAmount}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.opportunityAmount && formik?.touched?.opportunityAmount ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.opportunityAmount && formik?.touched.opportunityAmount && formik?.errors.opportunityAmount}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"opportunityAmount\", data?.opportunityAmount, \"Opportunity Amount\")}>{data?.opportunityAmount ? data?.opportunityAmount : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Amount</Text>\r\n                                {\r\n                                    editableField === \"amount\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"amount\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.amount}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.amount && formik?.touched?.amount ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.amount && formik?.touched.amount && formik?.errors.amount}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"amount\", data?.amount, \"Amount\")}>{data?.amount ? data?.amount : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Expected Close Date</Text>\r\n                                {\r\n                                    editableField === \"expectedCloseDate\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"expectedCloseDate\"\r\n                                                type=\"date\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={dayjs(formik.values.expectedCloseDate).format(\"YYYY-MM-DD\")}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.expectedCloseDate && formik?.touched?.expectedCloseDate ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.expectedCloseDate && formik?.touched.expectedCloseDate && formik?.errors.expectedCloseDate}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"expectedCloseDate\", data?.expectedCloseDate, \"Expected Close Date\")}>{data?.expectedCloseDate ? dayjs(data?.expectedCloseDate).format(\"YYYY-MM-DD\") : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Next Step</Text>\r\n                                {\r\n                                    editableField === \"nextStep\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"nextStep\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.nextStep}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.nextStep && formik?.touched?.nextStep ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.nextStep && formik?.touched.nextStep && formik?.errors.nextStep}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"nextStep\", data?.nextStep, \"Next Step\")}>{data?.nextStep ? data?.nextStep : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sales Stage</Text>\r\n                                {\r\n                                    editableField === \"salesStage\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.salesStage}\r\n                                                name=\"salesStage\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.salesStage && formik?.touched.salesStage ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                placeholder={'Sales Stage'}\r\n                                                borderColor={formik?.errors.salesStage && formik?.touched.salesStage ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value={\"Prospecting\"}>Prospecting</option>\r\n                                                <option value={\"Qualification\"}>Qualification</option>\r\n                                                <option value={\"Needs Analysis\"}>Needs Analysis</option>\r\n                                                <option value={\"Value Propositon\"}>Value Propositon</option>\r\n                                                <option value={\"Identifying Decision Makers\"}>Identifying Decision Makers</option>\r\n                                                <option value={\"Perception Analysis\"}>Perception Analysis</option>\r\n                                                <option value={\"Proposal/Price Quote\"}>Proposal/Price Quote</option>\r\n                                                <option value={\"Negotiation/Review\"}>Negotiation/Review</option>\r\n                                                <option value={\"Closed/Won\"}>Closed/Won</option>\r\n                                                <option value={\"Closed/Lost\"}>Closed/Lost</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.salesStage && formik?.touched.salesStage && formik?.errors.salesStage}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"salesStage\", data?.salesStage, \"Sales Stage\")}>{data?.salesStage ? data?.salesStage : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Probability</Text>\r\n                                {\r\n                                    editableField === \"probability\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"probability\"\r\n                                                type=\"number\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.probability}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.probability && formik?.touched?.probability ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.probability && formik?.touched.probability && formik?.errors.probability}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"probability\", data?.probability, \"Probability\")}>{data?.probability ? data?.probability : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"description\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.description}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description, \"Description\")}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n\r\n                            {/* <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\r\n                                <Link to={data?.assignTo ? opportunityAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\r\n                                    <Text color={(data?.category === 'contact' && (opportunityAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\r\n                                </Link>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"description\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.description}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                                {\r\n                                    editableField === \"notes\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"notes\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.notes}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                }\r\n                            </GridItem> */}\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </Grid>\r\n            {\r\n                (opportunityAccess?.update || opportunityAccess?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                        <GridItem colStart={6} >\r\n                            <Flex justifyContent={\"right\"}>\r\n                                {(opportunityAccess?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                                {(opportunityAccess?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                            </Flex>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </Card>\r\n            }\r\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\r\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Opportunities' handleDeleteData={handleDeleteOpportunities} ids={[id]} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default View\r\n"],"names":["props","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","JSON","parse","localStorage","getItem","opportunityAccess","accountAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","type","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","fetchViewData","Date","toISOString","split","async","result","getApi","initialValues","opportunityName","accountName","assignUser","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","modifiedBy","_id","formik","useFormik","validationSchema","opprtunitiesSchema","enableReinitialize","onSubmit","values","_ref","resetForm","payload","modifiedDate","putApi","status","toast","success","error","handleDoubleClick","fieldName","value","name","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","Link","to","view","sx","textDecoration","cursor","accountName2","assignUserName","Select","undefined","placeholder","dayjs","mt","colStart","background","AddEdit","isOpen","viewClose","selectedId","event","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log"],"sourceRoot":""}