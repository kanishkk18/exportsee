{"version":3,"file":"static/js/8096.334e3082.chunk.js","mappings":"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","sources":["schema/opprtunitiesSchema.js","components/commonTableModel/Contact.js","components/commonTableModel/ContactModel.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","views/admin/invoice/View.js"],"sourcesContent":["import * as yup from 'yup'\r\n\r\nexport const opprtunitiesSchema = yup.object({\r\n    opportunityName: yup.string().required(\"Opportunity Name Is required\"),\r\n    type: yup.string(),\r\n    leadSource: yup.string(),\r\n    currency: yup.string(),\r\n    opportunityAmount: yup.string().required(\"Opportunity Amount Is required\"),\r\n    amount: yup.string(),\r\n    expectedCloseDate: yup.string().required(\"Expected Close Date Is required\"),\r\n    nextStep: yup.string(),\r\n    salesStage: yup.string().required(\"Sales Stage Is required\"),\r\n    probability: yup.string(),\r\n    description: yup.string(),\r\n    createBy: yup.string(),\r\n})","import {\r\n  Box, Checkbox,\r\n  Flex, Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nimport { GrFormNext, GrFormPrevious } from \"react-icons/gr\";\r\n\r\n// Custom components\r\nimport Card from \"components/card/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport Pagination from \"components/pagination/Pagination\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\n\r\nexport default function ContactTable(props) {\r\n  const { columnsData, tableData, title, type, selectedValues, setSelectedValues } = props;\r\n\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n  const data = useMemo(() => tableData, [tableData]);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n  const [gopageValue, setGopageValue] = useState()\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n  if (pageOptions.length < gopageValue) {\r\n    setGopageValue(pageOptions.length)\r\n  }\r\n\r\n  const textColor = useColorModeValue(\"gray.500\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n\r\n  const handleCheckboxChange = (event, value) => {\r\n    if (type === \"multi\") {\r\n      if (event.target.checked) {\r\n        setSelectedValues((prevSelectedValues) => [...prevSelectedValues, value]);\r\n      } else {\r\n        setSelectedValues((prevSelectedValues) =>\r\n          prevSelectedValues.filter((selectedValue) => selectedValue !== value)\r\n        );\r\n      }\r\n    } else {\r\n      if (event.target.checked) {\r\n        setSelectedValues(value);\r\n      } else {\r\n        setSelectedValues(null);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Card\r\n      direction='column'\r\n      w='100%'\r\n      px='0px'\r\n      style={{ border: '1px solid gray.200' }}\r\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n      <Flex px='25px' justify='space-between' mb='20px' align='center'>\r\n        <Text\r\n          color={textColor}\r\n          fontSize='22px'\r\n          fontWeight='700'\r\n          lineHeight='100%'>\r\n          {title}  (<CountUpComponent key={data?.length} targetNumber={data?.length} />)\r\n        </Text>\r\n      </Flex>\r\n      <Box overflowY={'auto'} className=\"table-container-property\" >\r\n+\r\n+        <Table  {...getTableProps()} variant='simple' color='gray.500' mb='24px'>\r\n          <Thead zIndex={1}>\r\n            {headerGroups?.map((headerGroup, index) => (\r\n              <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                {headerGroup.headers.map((column, index) => (\r\n\r\n                  <Th\r\n                    {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                    pe=\"10px\"\r\n                    key={index}\r\n                    borderColor={borderColor}\r\n                  >\r\n                    <Flex\r\n                      align=\"center\"\r\n                      justifyContent={column.center ? \"center\" : \"start\"}\r\n                      fontSize={{ sm: \"14px\", lg: \"16px\" }}\r\n                      color=\" secondaryGray.900\"\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\", marginRight: \"8px\" }}>\r\n                        {column.render(\"Header\")}\r\n                      </span>\r\n\r\n                      {column.isSortable !== false && (\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                        </span>\r\n                      )}\r\n                    </Flex>\r\n                  </Th>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Thead>\r\n          <Tbody  {...getTableBodyProps()}>\r\n            {data?.length === 0 && (\r\n +\r\n +             <Tr>\r\n                <Td colSpan={columns.length}>\r\n                  img\r\n                </Td>\r\n              </Tr>\r\n            )}\r\n            {page?.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <Tr {...row?.getRowProps()} key={index}>\r\n                  {row?.cells?.map((cell, index) => {\r\n                    let data = \"\";\r\n                    if (cell?.column.Header === \"#\") {\r\n                      data = (\r\n                        <Flex align=\"center\">\r\n                          {type === \"multi\" ? <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues.includes(cell?.value)} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" /> :\r\n                            <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues === cell?.value} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" />}\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.row?.index + 1}\r\n                          </Text>\r\n                        </Flex>\r\n                      );\r\n                    } else if (cell?.column.Header === \"title\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"first Name\") {\r\n                      data = (\r\n                        // <Link to={`/contactView/${cell?.row?.original._id}`}>\r\n                        <Text\r\n                          me=\"10px\"\r\n                          // sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                        // </Link>\r\n                      );\r\n                    } else if (cell?.column.Header === \"last Name\") {\r\n                      data = (\r\n                        <Text\r\n                          me=\"10px\"\r\n                          color={textColor}\r\n                          fontSize=\"sm\"\r\n                          fontWeight=\"700\"\r\n                        >\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"phone Number\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Email Address\") {\r\n                      data = (\r\n                        <Text fontSize=\"sm\" fontWeight=\"700\"\r\n                          color={textColor}>\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"physical Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"mailing Address\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    } else if (cell?.column.Header === \"Contact Method\") {\r\n                      data = (\r\n                        <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                          {cell?.value}\r\n                        </Text>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <Td\r\n                        {...cell?.getCellProps()}\r\n                        key={index}\r\n                        fontSize={{ sm: \"14px\" }}\r\n                        minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                        borderColor='transparent'>\r\n                        {data}\r\n                      </Td>\r\n                    );\r\n                  })}\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      {data?.length > 5 && <Pagination gotoPage={gotoPage} gopageValue={gopageValue} setGopageValue={setGopageValue} pageCount={pageCount} canPreviousPage={canPreviousPage} previousPage={previousPage} canNextPage={canNextPage} pageOptions={pageOptions} setPageSize={setPageSize} nextPage={nextPage} pageSize={pageSize} pageIndex={pageIndex} />}\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ContactTable from './Contact.js'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { GiClick } from \"react-icons/gi\";\r\nimport CommonCheckTable from 'components/reactTable/checktable.js';\r\nimport { fetchContactCustomFiled } from '../../redux/slices/contactCustomFiledSlice.js';\r\nimport { fetchContactData } from '../../redux/slices/contactSlice.js';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ContactModel = (props) => {\r\n    const { onClose, isOpen, fieldName, setFieldValue, data } = props\r\n    const [selectedValues, setSelectedValues] = useState();\r\n    const [contactData, setContactData] = useState([]);\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [columns, setColumns] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            setFieldValue(fieldName, selectedValues)\r\n            onClose()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    const fetchCustomDataFields = async () => {\r\n        setIsLoding(true);\r\n        const result = await dispatch(fetchContactCustomFiled());\r\n        setContactData(result?.payload?.data);\r\n\r\n        const tempTableColumns = [\r\n            { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n            ...(result?.payload?.data?.[0]?.fields || [])\r\n                .filter(field => field?.isTableField === true)\r\n                .map(field => ({ Header: field?.label, accessor: field?.name }))\r\n        ];\r\n\r\n        setColumns(tempTableColumns);\r\n        setIsLoding(false);\r\n    };\r\n    useEffect(async () => {\r\n        await dispatch(fetchContactData())\r\n        fetchCustomDataFields();\r\n    }, []);\r\n    return (\r\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Select Contact</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    {isLoding ?\r\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                            <Spinner />\r\n                        </Flex>\r\n                        :\r\n                        <CommonCheckTable\r\n                            title={'Contacts'}\r\n                            isLoding={isLoding}\r\n                            columnData={columns ?? []}\r\n                            // dataColumn={columns ?? []}\r\n                            allData={data ?? []}\r\n                            tableData={data}\r\n                            tableCustomFields={contactData?.[0]?.fields?.filter((field) => field?.isTableField === true) || []}\r\n                            AdvanceSearch={() => \"\"}\r\n                            ManageGrid={false}\r\n                            deleteMany={false}\r\n                            selectedValues={selectedValues}\r\n                            setSelectedValues={setSelectedValues}\r\n                            selectType=\"single\"\r\n                            customSearch={false}\r\n                        />\r\n                    }\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' size='sm' me={2} onClick={handleSubmit} disabled={isLoding ? true : false} leftIcon={<GiClick />}> {isLoding ? <Spinner /> : 'Select'}</Button>\r\n                    <Button variant='outline' size='sm' colorScheme='red' onClick={() => onClose()}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nexport default ContactModel\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input, Select, Textarea } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport AddEdit from './AddEdit';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi, putApi, getApi } from '../../../services/api';\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { opprtunitiesSchema } from '../../../schema/opprtunitiesSchema';\r\nimport { useFormik } from 'formik';\r\nimport dayjs from 'dayjs';\r\nimport { toast } from 'react-toastify';\r\nimport { invoicesSchema } from '../../../schema/invoicesSchema';\r\nimport CommonCheckTable from \"components/reactTable/checktable\";\r\n\r\nconst View = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [invoiceAccess, accountAccess, contactAccess, quotesAccess] = HasAccess(['Invoices', 'Account', 'Contacts', 'Quotes'])\r\n\r\n    const [data, setData] = useState()\r\n    const [quotesData, setQuotesData] = useState([])\r\n    const { onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [type, setType] = useState(\"\")\r\n    const [editableField, setEditableField] = useState(null);\r\n    const [editableFieldName, setEditableFieldName] = useState(null);\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const todayTime = new Date().toISOString().split('.')[0];\r\n\r\n    const quotesColumns = [\r\n        { Header: \"Quote Number\", accessor: \"quoteNumber\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Title', accessor: 'title', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => navigate(`/quotesView/${cell?.row?.original._id}`)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: 'Quote Stage', accessor: 'quoteStage' },\r\n        {\r\n            Header: 'Contact', accessor: 'contact',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || contactAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.contact !== null && `/contactView/${cell?.row?.original.contact}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.contactName ? cell?.row?.original?.contactName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Account', accessor: 'account',\r\n            cell: (cell) => (\r\n                (user.role === 'superAdmin' || accountAccess?.view) ?\r\n                    <div className=\"selectOpt\">\r\n                        <Text\r\n                            onClick={() => navigate(cell?.row?.original.account !== null && `/accountView/${cell?.row?.original.account}`)}\r\n                            me=\"10px\"\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                            color='brand.600'\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                        >\r\n                            {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                        </Text>\r\n                    </div>\r\n                    :\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.accountName ? cell?.row?.original?.accountName : \"-\"}\r\n                    </Text>\r\n            )\r\n        },\r\n        {\r\n            Header: \"Grand Total\",\r\n            accessor: \"grandTotal\",\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                    >\r\n                        {cell?.row?.original?.grandTotal ? `$${cell?.row?.original?.grandTotal}` : '-'}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: \"valid Until\", accessor: \"validUntil\" },\r\n    ];\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            let result = await getApi('api/invoices/view/', id);\r\n            setData(result?.data?.result);\r\n            setQuotesData(result?.data?.quotesDetails)\r\n        }\r\n    }\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Invoice_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const handleDeleteAccount = async (ids) => {\r\n        try {\r\n            let response = await deleteManyApi('api/invoices/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                navigate('/invoices')\r\n                toast.success(`Invoices Delete successfully`)\r\n                setDeleteManyModel(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(`server error`)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        title: data?.title,\r\n        quoteNumber: data?.quoteNumber,\r\n        quoteDate: data?.quoteDate,\r\n        dueDate: data?.dueDate,\r\n        invoiceDate: data?.invoiceDate,\r\n        status: data?.status,\r\n        assignedTo: data?.assignedTo,\r\n        description: data?.description,\r\n        account: data?.account,\r\n        contact: data?.contact,\r\n        billingStreet: data?.billingStreet,\r\n        shippingStreet: data?.shippingStreet,\r\n        billingCity: data?.billingCity,\r\n        shippingCity: data?.shippingCity,\r\n        billingState: data?.billingState,\r\n        shippingState: data?.shippingState,\r\n        billingPostalCode: data?.billingPostalCode,\r\n        shippingPostalCode: data?.shippingPostalCode,\r\n        billingCountry: data?.billingCountry,\r\n        shippingCountry: data?.shippingCountry,\r\n        isCheck: data?.isCheck,\r\n        currency: data?.currency,\r\n        total: data?.total,\r\n        discount: data?.discount,\r\n        subtotal: data?.subtotal,\r\n        shipping: data?.shipping,\r\n        shippingTax: data?.shippingTax,\r\n        ptax: data?.ptax,\r\n        tax: data?.tax,\r\n        grandTotal: data?.grandTotal,\r\n        grandTotal: data?.grandTotal,\r\n        modifiedBy: JSON.parse(localStorage.getItem('user'))._id\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: invoicesSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (values, { resetForm }) => {\r\n            const payload = {\r\n                ...values,\r\n                modifiedDate: new Date()\r\n            }\r\n            let response = await putApi(`api/invoices/edit/${id}`, payload)\r\n            if (response.status === 200) {\r\n                setEditableField(null);\r\n                fetchViewData()\r\n                toast.success(`${editableFieldName} Update successfully`)\r\n            } else {\r\n                toast.error(`${editableFieldName} not Update`)\r\n            }\r\n        },\r\n    });\r\n    const handleDoubleClick = (fieldName, value, name) => {\r\n        formik.setFieldValue(fieldName, value);\r\n        setEditableField(fieldName)\r\n        setEditableFieldName(name)\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        formik.handleSubmit();\r\n    };\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Heading size=\"lg\" m={3}>\r\n                        {data?.title || \"\"}\r\n                    </Heading>\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Card >\r\n                        <Grid gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                        <Heading size=\"md\" mb={3}>\r\n                                            Invoice Details\r\n                                        </Heading>\r\n                                        <Flex id=\"hide-btn\">\r\n                                            <Menu>\r\n                                                {(user.role === 'superAdmin' || invoiceAccess?.create || invoiceAccess?.update || invoiceAccess?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                                    Actions\r\n                                                </MenuButton>}\r\n                                                <MenuDivider />\r\n                                                <MenuList minWidth={2}>\r\n                                                    {(user.role === 'superAdmin' || invoiceAccess?.create) && <MenuItem onClick={() => { setEdit(true); setType(\"add\"); formik.resetForm() }\r\n                                                    } alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                                    {(user.role === 'superAdmin' || invoiceAccess?.update) && <MenuItem onClick={() => { setEdit(true); setType(\"edit\") }} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n\r\n                                                    {(user.role === 'superAdmin' || invoiceAccess?.delete) && <>\r\n                                                        <MenuDivider />\r\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                                    </>}\r\n                                                </MenuList>\r\n                                            </Menu>\r\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\r\n                                                Back\r\n                                            </Button>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Invoice Number </Text>\r\n                                <Text>{data?.invoiceNumber ? data?.invoiceNumber : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Title </Text>\r\n                                {\r\n                                    editableField === \"title\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"title\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.title}\r\n                                                borderColor={formik?.errors?.title && formik?.touched?.title ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.title && formik?.touched.title && formik?.errors.title}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"title\", data?.title, \"Title\")}>{data?.title ? data?.title : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Quote Number</Text>\r\n                                <Text >{data?.quoteNumber ? data?.quoteNumber : ' - '}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Quote Date </Text>\r\n                                {\r\n                                    editableField === \"quoteDate\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"quoteDate\"\r\n                                                type=\"date\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={dayjs(formik.values.quoteDate).format(\"YYYY-MM-DD\")}\r\n                                                borderColor={formik?.errors?.quoteDate && formik?.touched?.quoteDate ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.quoteDate && formik?.touched.quoteDate && formik?.errors.quoteDate}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"quoteDate\", data?.quoteDate, \"Quote Date\")}>{data?.quoteDate ? dayjs(data?.quoteDate).format(\"YYYY-MM-DD\") : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Due Date</Text>\r\n                                {\r\n                                    editableField === \"dueDate\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"dueDate\"\r\n                                                type=\"date\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={dayjs(formik.values.dueDate).format(\"YYYY-MM-DD\")}\r\n                                                borderColor={formik?.errors?.dueDate && formik?.touched?.dueDate ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.dueDate && formik?.touched.dueDate && formik?.errors.dueDate}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"dueDate\", data?.dueDate, \"Due Date\")}>{data?.dueDate ? dayjs(data?.dueDate).format(\"YYYY-MM-DD\") : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Invoice Date</Text>\r\n                                {\r\n                                    editableField === \"invoiceDate\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"invoiceDate\"\r\n                                                type=\"date\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={dayjs(formik.values.invoiceDate).format(\"YYYY-MM-DD\")}\r\n                                                borderColor={formik?.errors?.invoiceDate && formik?.touched?.invoiceDate ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.invoiceDate && formik?.touched.invoiceDate && formik?.errors.invoiceDate}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"invoiceDate\", data?.invoiceDate, \"Invoice Date\")}>{data?.invoiceDate ? dayjs(data?.invoiceDate).format(\"YYYY-MM-DD\") : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Status </Text>\r\n                                {\r\n                                    editableField === \"status\" ?\r\n                                        <>\r\n                                            <Select\r\n                                                value={formik?.values.status}\r\n                                                name=\"status\"\r\n                                                onChange={formik?.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                mb={formik?.errors.status && formik?.touched.status ? undefined : '10px'}\r\n                                                fontWeight='500'\r\n                                                borderColor={formik?.errors.status && formik?.touched.status ? \"red.300\" : null}\r\n                                            >\r\n                                                <option value=\"Paid\">Paid</option>\r\n                                                <option value=\"Unpaid\">Unpaid</option>\r\n                                                <option value=\"Cancelled\">Cancelled</option>\r\n                                            </Select>\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.status && formik?.touched.status && formik?.errors.status}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"status\", data?.status, \"Status\")}>{data?.status ? data?.status : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Textarea\r\n                                                fontSize='sm'\r\n                                                value={formik?.values.description}\r\n                                                name=\"description\"\r\n                                                resize={\"none\"}\r\n                                                onBlur={handleBlur}\r\n                                                onChange={formik?.handleChange}\r\n                                                placeholder='Description'\r\n                                                fontWeight='500'\r\n                                                borderColor={formik?.errors.description && formik?.touched.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description, \"Description\")} style={{ width: \"300px\" }}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Account</Text>\r\n                                {\r\n                                    data?.account ?\r\n                                        <Link to={accountAccess?.view && `/accountView/${data?.account}`}>\r\n                                            <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.accountName ? data?.accountName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={accountAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: accountAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: accountAccess?.view ? 'underline' : 'none' } }}>{data?.accountName ? data?.accountName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Contact</Text>\r\n                                {\r\n                                    data?.contact ?\r\n                                        <Link to={contactAccess?.view && `/contactView/${data?.contact}`}>\r\n                                            <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.contactName ? data?.contactName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={contactAccess?.view ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.contactName ? data?.contactName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assigned To</Text>\r\n                                {\r\n                                    data?.assignedTo ?\r\n                                        <Link to={user.role === 'superAdmin' && `/userView/${data?.assignedTo}`}>\r\n                                            <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }} style={{ cursor: \"pointer\" }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n                                        </Link>\r\n                                        :\r\n                                        <Text color={user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900'} sx={{ '&:hover': { color: user.role === 'superAdmin' ? 'blue.500' : 'blackAlpha.900', textDecoration: user.role === 'superAdmin' ? 'underline' : 'none' } }}>{data?.assignUserName ? data?.assignUserName : ' - '}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Street</Text>\r\n                                {\r\n                                    editableField === \"billingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingStreet}\r\n                                                borderColor={formik?.errors?.billingStreet && formik?.touched?.billingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingStreet && formik?.touched.billingStreet && formik?.errors.billingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingStreet\", data?.billingStreet, \"Billing Street\")}>{data?.billingStreet ? data?.billingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Street</Text>\r\n                                {\r\n                                    editableField === \"shippingStreet\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingStreet\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingStreet}\r\n                                                borderColor={formik?.errors?.shippingStreet && formik?.touched?.shippingStreet ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingStreet && formik?.touched.shippingStreet && formik?.errors.shippingStreet}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingStreet\", data?.shippingStreet, \"Shipping Street\")}>{data?.shippingStreet ? data?.shippingStreet : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"billingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCity}\r\n                                                borderColor={formik?.errors?.billingCity && formik?.touched?.billingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCity && formik?.touched.billingCity && formik?.errors.billingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCity\", data?.billingCity, \"Billing City\")}>{data?.billingCity ? data?.billingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping City\r\n                                </Text>\r\n                                {\r\n                                    editableField === \"shippingCity\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCity}\r\n                                                borderColor={formik?.errors?.shippingCity && formik?.touched?.shippingCity ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCity && formik?.touched.shippingCity && formik?.errors.shippingCity}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCity\", data?.shippingCity, \"Shipping City\")}>{data?.shippingCity ? data?.shippingCity : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing State</Text>\r\n                                {\r\n                                    editableField === \"billingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingState}\r\n                                                borderColor={formik?.errors?.billingState && formik?.touched?.billingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingState && formik?.touched.billingState && formik?.errors.billingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingState\", data?.billingState, \"Billing State\")}>{data?.billingState ? data?.billingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping State</Text>\r\n                                {\r\n                                    editableField === \"shippingState\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingState\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingState}\r\n                                                borderColor={formik?.errors?.shippingState && formik?.touched?.shippingState ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingState && formik?.touched.shippingState && formik?.errors.shippingState}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingState\", data?.shippingState, \"Shipping State\")}>{data?.shippingState ? data?.shippingState : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Postal Code</Text>\r\n                                {\r\n                                    editableField === \"billingPostalCode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingPostalCode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingPostalCode}\r\n                                                borderColor={formik?.errors?.billingPostalCode && formik?.touched?.billingPostalCode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingPostalCode && formik?.touched.billingPostalCode && formik?.errors.billingPostalCode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingPostalCode\", data?.billingPostalCode, \"Billing Postal Code\")}>{data?.billingPostalCode ? data?.billingPostalCode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Postal Code</Text>\r\n                                {\r\n                                    editableField === \"shippingPostalCode\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingPostalCode\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingPostalCode}\r\n                                                borderColor={formik?.errors?.shippingPostalCode && formik?.touched?.shippingPostalCode ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingPostalCode && formik?.touched.shippingPostalCode && formik?.errors.shippingPostalCode}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingPostalCode\", data?.shippingPostalCode, \"Shipping Postal Code\")}>{data?.shippingPostalCode ? data?.shippingPostalCode : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Billing Country</Text>\r\n                                {\r\n                                    editableField === \"billingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"billingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.billingCountry}\r\n                                                borderColor={formik?.errors?.billingCountry && formik?.touched?.billingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.billingCountry && formik?.touched.billingCountry && formik?.errors.billingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"billingCountry\", data?.billingCountry, \"Billing Country\")}>{data?.billingCountry ? data?.billingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Country</Text>\r\n                                {\r\n                                    editableField === \"shippingCountry\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"shippingCountry\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.shippingCountry}\r\n                                                borderColor={formik?.errors?.shippingCountry && formik?.touched?.shippingCountry ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.shippingCountry && formik?.touched.shippingCountry && formik?.errors.shippingCountry}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"shippingCountry\", data?.shippingCountry, \"Shipping Country\")}>{data?.shippingCountry ? data?.shippingCountry : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Total</Text>\r\n                                <Text>{`${data?.currency}${data?.total ? data?.total : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Discount</Text>\r\n                                <Text >{`${data?.currency}${data?.discount || \"0\"}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Subtotal</Text>\r\n                                <Text>{`${data?.currency}${data?.subtotal ? data?.subtotal : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping</Text>\r\n                                <>{`${data?.currency}${data?.shipping ? data?.shipping : '0'}`}</>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Shipping Tax</Text>\r\n                                <Text >{`${data?.currency}${data?.shippingTax ? data?.shippingTax : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Tax</Text>\r\n                                <Text >{`${data?.currency}${data?.tax ? data?.tax : '0'}`}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>Grand Total</Text>\r\n                                <Text>{`${data?.currency}${data?.grandTotal ? data?.grandTotal : '0'}`}</Text>\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </Grid>\r\n            {quotesAccess?.view && <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Card overflow={'scroll'}>\r\n                    <CommonCheckTable\r\n                        title={\"Quotes\"}\r\n                        isLoding={isLoding}\r\n                        columnData={quotesColumns ?? []}\r\n                        allData={quotesData ?? []}\r\n                        tableData={quotesData ?? []}\r\n                        AdvanceSearch={false}\r\n                        tableCustomFields={[]}\r\n                        checkBox={false}\r\n                        deleteMany={true}\r\n                        ManageGrid={false}\r\n                        access={false}\r\n                    />\r\n                </Card>\r\n            </GridItem>}\r\n            {\r\n                (invoiceAccess?.update || invoiceAccess?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                    <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                        <GridItem colStart={6} >\r\n                            <Flex justifyContent={\"right\"}>\r\n                                {(invoiceAccess?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => { setEdit(true); setType(\"edit\") }} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                                {(invoiceAccess?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                            </Flex>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </Card>\r\n            }\r\n            <AddEdit isOpen={edit} size=\"lg\" onClose={() => setEdit(false)} viewClose={onClose} selectedId={id?.event ? id?.event?._def?.extendedProps?._id : id} type={type} />\r\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Account' handleDeleteData={handleDeleteAccount} ids={[id]} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default View\r\n"],"names":["opprtunitiesSchema","yup","opportunityName","required","type","leadSource","currency","opportunityAmount","amount","expectedCloseDate","nextStep","salesStage","probability","description","createBy","ContactTable","props","columnsData","tableData","title","selectedValues","setSelectedValues","columns","useMemo","data","gopageValue","setGopageValue","JSON","parse","localStorage","getItem","useState","tableInstance","useTable","initialState","pageIndex","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","length","textColor","useColorModeValue","borderColor","handleCheckboxChange","event","value","target","checked","prevSelectedValues","filter","selectedValue","_jsxs","Card","direction","w","px","style","border","overflowX","sm","lg","children","_jsx","Flex","justify","mb","align","Text","color","fontSize","fontWeight","lineHeight","CountUpComponent","targetNumber","Box","overflowY","className","Table","variant","Thead","zIndex","map","headerGroup","index","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","isSortable","getSortByToggleProps","pe","justifyContent","center","textTransform","marginRight","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","colSpan","row","_row$cells","getRowProps","cells","cell","_cell$row","Header","Checkbox","colorScheme","isChecked","includes","onChange","me","getCellProps","minW","md","Pagination","_contactData$","_contactData$$fields","onClose","isOpen","fieldName","setFieldValue","contactData","setContactData","isLoding","setIsLoding","setColumns","dispatch","useDispatch","useEffect","async","fetchContactData","_result$payload","_result$payload2","_result$payload2$data","_result$payload2$data2","result","fetchContactCustomFiled","payload","tempTableColumns","accessor","width","fields","field","isTableField","label","name","fetchCustomDataFields","Modal","size","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","alignItems","Spinner","CommonCheckTable","columnData","allData","tableCustomFields","AdvanceSearch","ManageGrid","deleteMany","selectType","customSearch","ModalFooter","Button","onClick","e","console","log","disabled","leftIcon","GiClick","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","textarea","cx","__css","__DEV__","displayName","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_formik$errors6","_formik$touched6","_formik$errors7","_formik$touched7","_formik$errors8","_formik$touched8","_formik$errors9","_formik$touched9","_formik$errors10","_formik$touched10","_formik$errors11","_formik$touched11","_formik$errors12","_formik$touched12","_formik$errors13","_formik$touched13","_formik$errors14","_formik$touched14","_id$event","_id$event$_def","_id$event$_def$extend","params","useParams","id","user","invoiceAccess","accountAccess","contactAccess","quotesAccess","HasAccess","setData","quotesData","setQuotesData","onOpen","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","setType","editableField","setEditableField","editableFieldName","setEditableFieldName","quotesColumns","Date","toISOString","split","original","_id","sx","textDecoration","cursor","_cell$row4","_cell$row4$original","_cell$row5","_cell$row5$original","_cell$row6","_cell$row6$original","_cell$row7","_cell$row7$original","role","view","_cell$row2","_cell$row3","contact","contactName","_cell$row10","_cell$row10$original","_cell$row11","_cell$row11$original","_cell$row12","_cell$row12$original","_cell$row13","_cell$row13$original","_cell$row8","_cell$row9","account","accountName","_cell$row14","_cell$row14$original","_cell$row15","_cell$row15$original","grandTotal","fetchViewData","_result$data","_result$data2","getApi","quotesDetails","initialValues","quoteNumber","quoteDate","dueDate","invoiceDate","status","assignedTo","billingStreet","shippingStreet","billingCity","shippingCity","billingState","shippingState","billingPostalCode","shippingPostalCode","billingCountry","shippingCountry","isCheck","total","discount","subtotal","shipping","shippingTax","ptax","tax","modifiedBy","formik","useFormik","validationSchema","invoicesSchema","enableReinitialize","onSubmit","values","_ref","resetForm","modifiedDate","putApi","toast","success","error","handleDoubleClick","handleBlur","handleSubmit","Grid","templateColumns","gap","GridItem","base","Heading","m","display","Menu","create","update","delete","MenuButton","va","mr","as","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","html2pdf","from","set","margin","filename","moment","format","image","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","FaFilePdf","_Fragment","DeleteIcon","IoIosArrowBack","HSeparator","invoiceNumber","Input","handleChange","onBlur","errors","touched","autoFocus","onDoubleClick","dayjs","Select","undefined","resize","placeholder","Link","to","assignUserName","overflow","checkBox","access","mt","colStart","background","AddEdit","viewClose","selectedId","_def","extendedProps","CommonDeleteModel","handleDeleteData","deleteManyApi","ids"],"sourceRoot":""}