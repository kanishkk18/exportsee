{"version":3,"file":"static/js/5615.b7736692.chunk.js","mappings":"gMAce,SAASA,EAAiBC,GAErC,MAAM,MAAEC,EAAK,KAAEC,EAAI,aAAEC,GAAiBH,EAEhCI,GAAmBC,EAAAA,EAAAA,IAAkB,oBAAqB,SAC1DC,GAAaD,EAAAA,EAAAA,IAAkB,YAAa,SAElD,OACIE,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,gBAAgB,kBAAkBC,IAAK,EAAEC,SAAA,EAC3CC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CACLC,EAAG,CAAEF,KAAM,QACXG,GAAG,OACHC,KAAM,IACNC,IAAc,oBAATlB,EAA6B,MAAQ,GAC1CmB,IAAK,MACLC,OAAQ,OACRnB,aAAcA,EACdoB,iBAAiB,EACjBC,SACIjB,EAAAA,EAAAA,MAACkB,EAAAA,IAAG,CAAAd,SAAA,EACAC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAIC,EAAAA,IAAUX,EAAE,OAAOY,EAAE,OAAOC,MAAOxB,KAC7CM,EAAAA,EAAAA,KAACmB,EAAAA,KAAI,CAACC,QAAQ,SAASC,GAAG,OAAOC,GAAG,OAAMvB,UACtCC,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAMP,MAAOxB,EAAWK,SAAC,kBAI3DV,EAAQ,IAAKM,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAMP,MAAM,oBAAmBnB,SAAA,CAAC,oBACvDV,aAMtCW,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,UAC5BJ,EAAAA,EAAAA,MAACwB,EAAAA,KAAI,CAACO,UAAU,SAAQ3B,SAAA,EACpBJ,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CACDL,MAAO1B,EACPiC,WAAW,OACXE,UAAU,QACVH,SAAS,MACTI,GAAI,CAAEzB,KAAM,QAASJ,SAAA,CAAC,UACdT,MAEZU,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CACDL,MAvCO,WAwCPM,SAAS,KACTK,GAAI,CAAE1B,KAAM,QACZkB,GAAG,OACHM,UAAU,QAAO5B,SAAC,sEAO1C,C,2TC5DA,MA2IA,EA3IiCX,IAC7B,MAAM,MAAE0C,EAAK,QAAEC,EAAO,cAAEC,EAAa,iBAAEC,EAAgB,SAAEC,EAAQ,gBAAEC,EAAe,qBAAEC,EAAoB,eAAEC,EAAc,aAAEC,GAAiBlD,EAErImD,GAAWC,EAAAA,EAAAA,MAOXC,EAAmBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,KACNE,YAAaF,EAAAA,KACbG,IAAKH,EAAAA,KACLI,aAAcJ,EAAAA,OAEZK,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAbkB,CAClBN,KAAM,GACNC,YAAa,GACbC,IAAK,GACLC,aAAc,IAUdL,iBAAkBA,EAClBS,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC5Bb,GAASe,EAAAA,EAAAA,IAAeH,IACxBZ,GAASgB,EAAAA,EAAAA,IAAc,CAAEJ,OAAQA,EAAQpB,QAASA,EAASyB,KAAM,aAQjE,MAAMC,EAAW,CACb,CACId,KAAM,CAAC,QACPe,MAAOP,EAAOR,MAElB,CACIA,KAAM,CAAC,eACPe,MAAOP,EAAOP,aAElB,CACID,KAAM,CAAC,OACPe,MAAOP,EAAON,KAElB,CACIF,KAAM,CAAC,gBACPe,MAAOP,EAAOL,eAGtBP,GAASoB,EAAAA,EAAAA,IAAgBF,EAASG,QAAOC,GAAQA,EAAKH,UACtDtB,GAAqB,GACrBH,GAAiB,GACjBoB,IACAf,EAAa,GAAG,KAIlB,OAAEwB,EAAM,QAAEC,EAAO,OAAEZ,EAAM,WAAEa,EAAU,aAAEC,EAAY,aAAEC,EAAY,cAAEC,EAAa,UAAEd,EAAS,MAAEe,GAAUrB,EAE7G,OACI/C,EAAAA,EAAAA,KAAAqE,EAAAA,SAAA,CAAAtE,UACIJ,EAAAA,EAAAA,MAAC2E,EAAAA,GAAK,CAACC,QAASA,KAAQtC,GAAiB,GAAQoB,GAAW,EAAImB,OAAQxC,EAAeyC,YAAU,EAAA1E,SAAA,EAC7FC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAY,KACb/E,EAAAA,EAAAA,MAACgF,EAAAA,GAAY,CAAA5E,SAAA,EACTC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAW,CAAA7E,SAAC,oBACbC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAgB,CAACC,QAASA,KAAQ7C,GAAiB,GAAQoB,GAAW,KACvErD,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACNJ,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,gBAAgB,kBAAkByB,GAAI,EAAGxB,IAAK,EAAEC,SAAA,EAClDJ,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACnCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CAACC,QAAQ,OAAOC,GAAG,MAAM3D,SAAS,KAAKC,WAAW,MAAMP,MAAO,OAAQI,GAAG,IAAIM,GAAI,EAAE7B,SAAC,kBAG/FC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACF5D,SAAS,KACT6D,SAAUpB,EAAcqB,OAAQtB,EAChCN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQR,KACfA,KAAK,OACL4C,YAAY,qBACZ9D,WAAW,SAEf9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAAC,IAAE+D,EAAOnB,MAAQoB,EAAQpB,MAAQmB,EAAOnB,YAE1EhD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACnCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CAACC,QAAQ,OAAOC,GAAG,MAAM3D,SAAS,KAAKC,WAAW,MAAMP,MAAO,OAAQI,GAAG,IAAIM,GAAI,EAAE7B,SAAC,kBAG/FC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACF5D,SAAS,KACT6D,SAAUpB,EAAcqB,OAAQtB,EAChCN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQP,YACfD,KAAK,cACLa,KAAK,SACL+B,YAAY,qBACZ9D,WAAW,SAEf9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAAC,IAAE+D,EAAOlB,aAAemB,EAAQnB,aAAekB,EAAOlB,mBAExFjD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACnCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CAACC,QAAQ,OAAOC,GAAG,MAAM3D,SAAS,KAAKC,WAAW,MAAMP,MAAO,OAAQI,GAAG,IAAIM,GAAI,EAAE7B,SAAC,SAG/FC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACF5D,SAAS,KACT6D,SAAUpB,EAAcqB,OAAQtB,EAChCN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQN,IACfF,KAAK,MACL4C,YAAY,YACZ/B,KAAK,SACL/B,WAAW,SAEf9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAAC,IAAE+D,EAAOjB,KAAOkB,EAAQlB,KAAOiB,EAAOjB,WAExElD,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,GAAI6E,GAAI,GAAIjF,SAAA,EACnCC,EAAAA,EAAAA,KAACiF,EAAAA,UAAS,CAACC,QAAQ,OAAOC,GAAG,MAAM3D,SAAS,KAAKC,WAAW,MAAMP,MAAO,OAAQI,GAAG,IAAIM,GAAI,EAAE7B,SAAC,mBAG/FC,EAAAA,EAAAA,KAACoF,EAAAA,MAAK,CACF5D,SAAS,KACT6D,SAAUpB,EAAcqB,OAAQtB,EAChCN,MAAa,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQL,aACfH,KAAK,eACL4C,YAAY,sBACZ/B,KAAK,QACL/B,WAAW,SAEf9B,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAAC,IAAE+D,EAAOhB,cAAgBiB,EAAQjB,cAAgBgB,EAAOhB,yBAMlGnD,EAAAA,EAAAA,MAAC6F,EAAAA,GAAW,CAAAzF,SAAA,EACRC,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CAACC,KAAK,KAAKC,QAAQ,QAAQC,GAAI,EAAGd,QAASZ,EAAc2B,YAAU3D,GAAakC,GAAqBrE,SAAGmC,GAAWlC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAO,IAAM,YACxI9F,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CAACC,KAAK,KAAKC,QAAQ,UAAUI,YAAY,MAAMjB,QAASA,IAAMzB,IAAYtD,SAAC,oBAI/F,E,qCC1IX,MAkEA,EAlEqBX,IACjB,MAAM,QAAEmF,EAAO,OAAEC,EAAM,KAAElF,EAAI,aAAE0G,GAAiB5G,GACzC8C,EAAU+D,IAAeC,EAAAA,EAAAA,WAAS,GACnCC,GAAWC,EAAAA,EAAAA,MAMXrD,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cALkB,CAClBoD,SAAU,IAKVnD,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC5BkD,IACAjD,GAAW,KAGb,OAAES,EAAM,QAAEC,EAAO,OAAEZ,EAAM,WAAEa,EAAU,aAAEC,EAAY,aAAEC,EAAY,cAAEC,EAAa,UAAEd,GAAcN,EAEhGuD,EAAUC,UACZ,IACIN,GAAY,GACZ5C,IAEIF,EAAOkD,WACP9B,IACA4B,EAAS,iBAAkB,CAAErE,MAAO,CAAE0E,SAAUrD,EAAOkD,SAAUL,aAAcA,KAGvF,CAAE,MAAOS,GACLC,QAAQC,IAAIF,EAChB,CAAC,QAEGR,GAAY,EAChB,GAGJ,OACItG,EAAAA,EAAAA,MAAC2E,EAAAA,GAAK,CAACC,QAASA,EAASC,OAAQA,EAAQC,YAAU,EAAA1E,SAAA,EAC/CC,EAAAA,EAAAA,KAAC0E,EAAAA,GAAY,KACb/E,EAAAA,EAAAA,MAACgF,EAAAA,GAAY,CAAA5E,SAAA,EACTC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAW,CAAA7E,SAAC,oBACbC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAgB,KACjB7E,EAAAA,EAAAA,KAAC+E,EAAAA,GAAS,CAAAhF,UACNC,EAAAA,EAAAA,KAACJ,EAAAA,KAAI,CAACC,gBAAgB,kBAAkBC,IAAK,EAAEC,UAC3CJ,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,QAAS,CAAEC,KAAM,IAAKJ,SAAA,EAC5BC,EAAAA,EAAAA,KAACb,EAAAA,EAAgB,CAACE,MAAO8D,EAAOkD,SAASO,OAAQrH,aAAesH,GAAS1C,EAAc,WAAY0C,GAAOvH,KAAMA,KAChHK,EAAAA,EAAAA,MAAC4B,EAAAA,KAAI,CAACD,GAAG,OAAOJ,MAAO,MAAMnB,SAAA,CAAC,IAAE+D,EAAOuC,UAAYtC,EAAQsC,WAAY1G,EAAAA,EAAAA,MAAA0E,EAAAA,SAAA,CAAAtE,SAAA,CAAE,iBAAeT,gBAIpGK,EAAAA,EAAAA,MAAC6F,EAAAA,GAAW,CAAAzF,SAAA,EACRC,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CAACC,KAAK,KAAKC,QAAQ,QAAQb,QAASZ,EAAc2B,WAAU3D,EAAwBnC,SAAGmC,GAAWlC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAO,IAAM,UACvH9F,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CAACqB,GAAI,CACRC,WAAY,EACZC,cAAe,cAChBrB,QAAQ,UACPI,YAAY,MAAML,KAAK,KAAKZ,QAASA,KACjCP,IACAxB,EAAOM,WAAW,EACpBtD,SAAC,kBAGX,ECgZhB,EAhceX,IACX,MAAO6H,EAAQC,IAAahB,EAAAA,EAAAA,WAAS,IAC/B,OAAE1B,EAAM,OAAE2C,EAAM,QAAE5C,IAAY6C,EAAAA,EAAAA,OAC7BC,EAAgBC,IAAqBpB,EAAAA,EAAAA,UAAS,KAC9ClE,EAAeC,IAAoBiE,EAAAA,EAAAA,WAAS,IAC5CqB,EAAqBC,IAA0BtB,EAAAA,EAAAA,UAAS,KACxDuB,EAAkBC,IAAuBxB,EAAAA,EAAAA,UAAS,IAEnDC,GADOwB,KAAKC,MAAMC,aAAaC,QAAQ,UAC5B1B,EAAAA,EAAAA,OACX7D,GAAWC,EAAAA,EAAAA,OACVN,EAAU+D,IAAeC,EAAAA,EAAAA,WAAS,IAClC6B,EAAMC,IAAW9B,EAAAA,EAAAA,UAAS,KAC1B+B,EAAmB7F,IAAwB8D,EAAAA,EAAAA,WAAS,IACpDgC,EAAc/F,IAAmB+D,EAAAA,EAAAA,UAAS,KAC1CiC,EAAYC,IAAiBlC,EAAAA,EAAAA,aAC7BmC,EAAaC,IAAapC,EAAAA,EAAAA,WAAS,IACnCqC,EAAMC,IAAWtC,EAAAA,EAAAA,WAAS,IAC1B1C,EAAMiF,IAAWvC,EAAAA,EAAAA,UAAS,KAC1BwC,EAAUC,IAAezC,EAAAA,EAAAA,WAAS,IAElC0C,IAAcC,EAAAA,EAAAA,GAAU,CAAC,YAE1BC,GAAe,CACjBC,OAAQ,SACRC,SAAU,SACVC,YAAY,EACZC,QAAQ,EACRC,KAAM/F,IAAA,IAAC,IAAEgG,EAAG,EAAEC,GAAGjG,EAAA,OACbpD,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CAACC,SAAS,KAAKC,WAAW,MAAME,UAAW,SAAS5B,UACrDJ,EAAAA,EAAAA,MAAC2J,EAAAA,GAAI,CAACC,QAAM,EAAAxJ,SAAA,EACRC,EAAAA,EAAAA,KAACwJ,EAAAA,GAAU,CAAAzJ,UACPC,EAAAA,EAAAA,KAACyJ,EAAAA,IAAW,OAEhB9J,EAAAA,EAAAA,MAAC+J,EAAAA,GAAQ,CACLC,KAAM,cACNC,UAAW,4BAA4B7J,SAAA,EAE5B,OAAV6I,QAAU,IAAVA,OAAU,EAAVA,EAAYiB,UACT7J,EAAAA,EAAAA,KAAC8J,EAAAA,GAAQ,CACLC,GAAI,IACJC,MAAMhK,EAAAA,EAAAA,KAACiK,EAAAA,SAAQ,CAACzI,SAAU,GAAIF,GAAI,IAClCwD,QAASA,KAAO,IAADoF,EACXzB,EAAQ,QACRtB,IACAiB,EAAiB,OAAHgB,QAAG,IAAHA,GAAW,QAARc,EAAHd,EAAKjG,cAAM,IAAA+G,OAAR,EAAHA,EAAaC,IAAI,EACjCpK,SACL,UAIM,OAAV6I,QAAU,IAAVA,OAAU,EAAVA,EAAYwB,QACTpK,EAAAA,EAAAA,KAAC8J,EAAAA,GAAQ,CACLC,GAAI,IACJ7I,MAAO,QACP8I,MAAMhK,EAAAA,EAAAA,KAACqK,EAAAA,SAAQ,CAAC/I,GAAI,EAAGE,SAAU,KACjCsD,QAASA,KAAO,IAADwF,EACXnE,EAAS,gBAAmB,OAAHiD,QAAG,IAAHA,GAAW,QAARkB,EAAHlB,EAAKjG,cAAM,IAAAmH,OAAR,EAAHA,EAAaH,MAAM,EAC9CpK,SACL,UAIM,OAAV6I,QAAU,IAAVA,OAAU,EAAVA,EAAY2B,UACTvK,EAAAA,EAAAA,KAAC8J,EAAAA,GAAQ,CACLC,GAAI,IACJ7I,MAAO,MACP8I,MAAMhK,EAAAA,EAAAA,KAACwK,EAAAA,WAAU,CAAChJ,SAAU,GAAIF,GAAI,IACpCwD,QAASA,KAAO,IAAD2F,EACXnC,GAAU,GACVhB,EAAkB,CAAI,OAAH8B,QAAG,IAAHA,GAAW,QAARqB,EAAHrB,EAAKjG,cAAM,IAAAsH,OAAR,EAAHA,EAAaN,KAAK,EACvCpK,SACL,kBAMV,GAGT2K,GAAe,CACjB,CAAE3B,OAAQ,IAAKC,SAAU,MAAOC,YAAY,EAAO0B,MAAO,IAC1D,CACI5B,OAAQ,eAAgBC,SAAU,OAAQG,KAAOA,IAC7CnJ,EAAAA,EAAAA,KAAA,OAAK4K,UAAU,YAAW7K,UACtBC,EAAAA,EAAAA,KAACuB,EAAAA,KAAI,CACDuD,QAASA,KAAA,IAAA+F,EAAA,OAAMC,GAAmB,OAAJ3B,QAAI,IAAJA,GAAS,QAAL0B,EAAJ1B,EAAMC,WAAG,IAAAyB,OAAL,EAAJA,EAAWE,SAASZ,IAAI,EACtD7J,GAAG,OACHwG,GAAI,CAAE,UAAW,CAAE5F,MAAO,WAAY8J,eAAgB,aAAeC,OAAQ,WAC7E/J,MAAM,YACNM,SAAS,KACTC,WAAW,MAAK1B,SAEX,OAAJoJ,QAAI,IAAJA,OAAI,EAAJA,EAAMzF,WAKvB,CACIqF,OAAQ,eAAgBC,SAAU,eAEtC,CACID,OAAQ,MAAOC,SAAU,OAE7B,CACID,OAAQ,gBAAiBC,SAAU,mBAEzB,OAAVJ,QAAU,IAAVA,GAAAA,EAAYiB,QAAoB,OAAVjB,QAAU,IAAVA,GAAAA,EAAYwB,MAAkB,OAAVxB,QAAU,IAAVA,GAAAA,EAAY2B,OAAS,CAACzB,IAAgB,IAGlFgC,GAAkBI,IACpB/E,EAAS,gBAAgB+E,IAAK,EA8QlC,OAJAC,EAAAA,EAAAA,YAAU,KAjBQ5E,WACdN,GAAY,GACZ,MAAMmF,QAAe7I,GAAS8I,EAAAA,EAAAA,MAEM,IAADC,EAAL,MAA1BF,EAAOG,QAAQC,OACfxD,EAAc,OAANoD,QAAM,IAANA,GAAe,QAATE,EAANF,EAAQG,eAAO,IAAAD,OAAT,EAANA,EAAiBvD,MAEzB0D,EAAAA,GAAMC,MAAM,uBAAwB,SAExCzF,GAAY,EAAM,EASlB0F,EAAW,GACZ,CAAC1E,KAGAtH,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAC4L,EAAAA,EAAgB,CACbC,MAAO,UACP3J,SAAUA,EACV4J,WAAwB,OAAZpB,SAAY,IAAZA,GAAAA,GAAgB,GAE5B3I,QAAa,OAAJgG,QAAI,IAAJA,EAAAA,EAAQ,GACjBgE,UAAWhE,EACXiE,cAAe/D,EACfgE,iBAAkB7J,EAClB8J,gBAAiBhE,EACjBiE,mBAAoBhK,EACpBiK,kBAAmB,GACnBC,OAAQzD,EAORD,YAAaA,EACbxB,OAnEUmF,KAClBnF,IACAsB,EAAQ,MAAM,EAkENpB,eAAgBA,EAChBC,kBAAmBA,EACnBgB,UAAWA,EACXiE,YAAY,EACZC,eACIxM,EAAAA,EAAAA,KAACyF,EAAAA,OAAM,CAACE,QAAQ,UAAUI,YAAY,QAAQ0G,UAAUzM,EAAAA,EAAAA,KAAC0M,EAAAA,WAAU,IAAK9K,GAAI,CAAE+K,GAAI,MAAO3H,GAAI,KAAOU,KAAK,KAAKZ,QAASA,IAAM7C,GAAiB,GAAMlC,SAAC,mBAEzJwH,oBAAqBA,EACrBE,iBAAkBA,EAClBD,uBAAwBA,EACxBE,oBAAqBA,EACrBkF,iBAAiB,mBAGrB5M,EAAAA,EAAAA,KAAC6M,EAAoB,CACjB7K,cAAeA,EACfC,iBAAkBA,EAClBE,gBAAiBA,EACjBC,qBAAsBA,EACtBL,QAAa,OAAJgG,QAAI,IAAJA,EAAAA,EAAQ,GACjBb,UAAWA,EACXvD,gBAAiB6D,EACjBlF,aAAcoF,KAGlB1H,EAAAA,EAAAA,KAAC8M,EAAAA,EAAO,CAACtI,OAAQA,EAAQkB,KAAM,KAAMnB,QAASA,EAAS2C,UAAWA,EAAW1D,KAAMA,EAAM2E,WAAYA,KACrGnI,EAAAA,EAAAA,KAAC+M,EAAAA,EAAiB,CACdvI,OAAQ6D,EACR9D,QAASA,IAAM+D,GAAU,GACzB9E,KAAK,UACLwJ,iBA7FSzG,UACjB,IACIN,GAAY,GAEY,aADHgH,EAAAA,EAAAA,IAAc,yBAA0BC,IAChD1B,SACTC,EAAAA,GAAM0B,QAAQ,+BACd7F,EAAkB,IAClBgB,GAAU,GACVpB,GAAWkG,IAASA,IAE5B,CAAE,MAAO1B,GACLhF,QAAQC,IAAI+E,GACZD,EAAAA,GAAMC,MAAM,eAEhB,CAAC,QACGzF,GAAY,EAChB,GA8EQiH,IAAK7F,KAGTrH,EAAAA,EAAAA,KAACqN,EAAW,CACR/N,KAAK,eACLkF,OAAQkE,EACRnE,QAASoE,EACT3C,aAzUS,CACjB,CACI,KAAQ,OACR,MAAS,eACT,KAAQ,OACR,OAAS,EACT,WAAa,EACb,QAAU,EACV,UAAa,KACb,YAAe,QACf,cAAgB,EAChB,QAAU,EACV,QAAW,CACP,CACI,KAAQ,GACR,MAAS,GACT,IAAO,4BAEX,CACI,KAAQ,GACR,MAAS,GACT,IAAO,6BAGf,WAAc,CACV,CACI,SAAW,EACX,QAAW,2BACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,MAAS,GACT,QAAW,GACX,OAAS,EACT,IAAO,4BAEX,CACI,QAAW,GACX,WAAc,GACd,IAAO,6BAGf,IAAO,4BAEX,CACI,KAAQ,cACR,MAAS,eACT,KAAQ,SACR,OAAS,EACT,WAAa,EACb,QAAU,EACV,UAAa,KACb,YAAe,QACf,cAAgB,EAChB,QAAU,EACV,QAAW,CACP,CACI,KAAQ,GACR,MAAS,GACT,IAAO,4BAEX,CACI,KAAQ,GACR,MAAS,GACT,IAAO,6BAGf,WAAc,CACV,CACI,SAAW,EACX,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,MAAS,GACT,QAAW,GACX,OAAS,EACT,IAAO,4BAEX,CACI,QAAW,GACX,WAAc,GACd,IAAO,6BAGf,IAAO,4BAEX,CACI,KAAQ,MACR,MAAS,MACT,KAAQ,SACR,OAAS,EACT,WAAa,EACb,QAAU,EACV,UAAa,KACb,YAAe,QACf,cAAgB,EAChB,QAAU,EACV,QAAW,CACP,CACI,KAAQ,GACR,MAAS,GACT,IAAO,4BAEX,CACI,KAAQ,GACR,MAAS,GACT,IAAO,6BAGf,WAAc,CACV,CACI,SAAW,EACX,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,MAAS,GACT,QAAW,GACX,OAAS,EACT,IAAO,4BAEX,CACI,QAAW,GACX,WAAc,GACd,IAAO,6BAGf,IAAO,4BAEX,CACI,KAAQ,eACR,MAAS,gBACT,KAAQ,OACR,OAAS,EACT,WAAa,EACb,QAAU,EACV,UAAa,KACb,YAAe,QACf,cAAgB,EAChB,QAAU,EACV,QAAW,CACP,CACI,KAAQ,GACR,MAAS,GACT,IAAO,4BAEX,CACI,KAAQ,GACR,MAAS,GACT,IAAO,6BAGf,WAAc,CACV,CACI,SAAW,EACX,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,KAAO,EACP,MAAS,GACT,QAAW,GACX,IAAO,4BAEX,CACI,MAAS,GACT,QAAW,GACX,OAAS,EACT,IAAO,4BAEX,CACI,QAAW,GACX,WAAc,QACd,IAAO,6BAGf,IAAO,iCAgHL,C","sources":["components/commonFileUpload/index.js","views/admin/account/components/AccountAdvanceSearch.js","views/admin/account/components/ImportModel.js","views/admin/account/index.js"],"sourcesContent":["// Chakra imports\r\nimport {\r\n    Box, Flex,\r\n    Grid,\r\n    GridItem,\r\n    Icon,\r\n    Text,\r\n    useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\n// Assets\r\nimport Dropzone from \"components/Dropzone\";\r\nimport { MdUpload } from \"react-icons/md\";\r\n\r\nexport default function CommonFileUpload(props) {\r\n    // const { used, total, count, ...rest } = props;\r\n    const { count, text, onFileSelect } = props;\r\n    // Chakra Color Mode\r\n    const textColorPrimary = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n    const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n    const textColorSecondary = \"gray.400\";\r\n    return (\r\n        <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Dropzone\r\n                    w={{ base: \"100%\" }}\r\n                    me='36px'\r\n                    minH={200}\r\n                    img={text === 'Property Photos' ? 'img' : ''}\r\n                    csv={'csv'}\r\n                    height={'100%'}\r\n                    onFileSelect={onFileSelect}\r\n                    isMultipleAllow={false}\r\n                    content={\r\n                        <Box>\r\n                            <Icon as={MdUpload} w='80px' h='80px' color={brandColor} />\r\n                            <Flex justify='center' mx='auto' mb='12px'>\r\n                                <Text fontSize='xl' fontWeight='700' color={brandColor}>\r\n                                    Upload File\r\n                                </Text>\r\n                            </Flex>\r\n                            {count > 0 && <Text fontSize='sm' fontWeight='500' color='secondaryGray.500'>\r\n                                Selected Files : {count}\r\n                            </Text>}\r\n                        </Box>\r\n                    }\r\n                />\r\n            </GridItem>\r\n            <GridItem colSpan={{ base: 12 }} >\r\n                <Flex direction='column' >\r\n                    <Text\r\n                        color={textColorPrimary}\r\n                        fontWeight='bold'\r\n                        textAlign='start'\r\n                        fontSize='2xl'\r\n                        mt={{ base: \"20px\" }}>\r\n                        Upload {text}\r\n                    </Text>\r\n                    <Text\r\n                        color={textColorSecondary}\r\n                        fontSize='md'\r\n                        my={{ base: \"auto\" }}\r\n                        mx='auto'\r\n                        textAlign='start'>\r\n                        Accepted File Type (csv, xlsx file - 15MB max) only 1 file\r\n                    </Text>\r\n                </Flex>\r\n            </GridItem>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Grid, GridItem, Input, FormLabel, Select, Text, Button, } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { setSearchValue, getSearchData, setGetTagValues } from '../../../../redux/slices/advanceSearchSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst OpprtunityAdvanceSearch = (props) => {\r\n    const { state, allData, advanceSearch, setAdvanceSearch, isLoding, setSearchedData, setDisplaySearchData, setSearchClear, setSearchbox } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const initialValues = {\r\n        name: '',\r\n        officePhone: '',\r\n        fax: '',\r\n        emailAddress: '',\r\n    }\r\n    const validationSchema = yup.object({\r\n        name: yup.string(),\r\n        officePhone: yup.string(),\r\n        fax: yup.string(),\r\n        emailAddress: yup.string()\r\n    });\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            dispatch(setSearchValue(values))\r\n            dispatch(getSearchData({ values: values, allData: allData, type: 'Account' }))\r\n            // const searchResult = allData?.filter(\r\n            //     (item) =>\r\n            //         (!values?.senderName || (item?.senderName && item?.senderName.toLowerCase().includes(values?.senderName?.toLowerCase()))) &&\r\n            //         (!values?.realetedTo || (values.realetedTo === \"contact\" ? item.createBy : item.createByLead)) &&\r\n            //         (!values?.createByName || (item?.createByName && item?.createByName.toLowerCase().includes(values?.createByName?.toLowerCase())))\r\n            // )\r\n            // let getValue = [values.senderName, values?.realetedTo, values?.createByName].filter(value => value);\r\n            const getValue = [\r\n                {\r\n                    name: [\"name\"],\r\n                    value: values.name\r\n                },\r\n                {\r\n                    name: [\"officePhone\"],\r\n                    value: values.officePhone\r\n                },\r\n                {\r\n                    name: [\"fax\"],\r\n                    value: values.fax\r\n                },\r\n                {\r\n                    name: [\"emailAddress\"],\r\n                    value: values.emailAddress\r\n                },\r\n            ]\r\n            dispatch(setGetTagValues(getValue.filter(item => item.value)))\r\n            setDisplaySearchData(true)\r\n            setAdvanceSearch(false)\r\n            resetForm();\r\n            setSearchbox('');\r\n        }\r\n    })\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm, dirty } = formik;\r\n\r\n    return (\r\n        <>\r\n            <Modal onClose={() => { setAdvanceSearch(false); resetForm() }} isOpen={advanceSearch} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Advance Search</ModalHeader>\r\n                    <ModalCloseButton onClick={() => { setAdvanceSearch(false); resetForm() }} />\r\n                    <ModalBody>\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" mb={3} gap={2}>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Account Name\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.name}\r\n                                    name=\"name\"\r\n                                    placeholder='Enter Account Name'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.name && touched.name && errors.name}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Office Phone\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.officePhone}\r\n                                    name=\"officePhone\"\r\n                                    type=\"number\"\r\n                                    placeholder='Enter Office Phone'\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.officePhone && touched.officePhone && errors.officePhone}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Fax\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.fax}\r\n                                    name=\"fax\"\r\n                                    placeholder='Enter Fax'\r\n                                    type=\"number\"\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.fax && touched.fax && errors.fax}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='600' color={\"#000\"} mb=\"0\" mt={2}>\r\n                                    Email Address\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values?.emailAddress}\r\n                                    name=\"emailAddress\"\r\n                                    placeholder='Enter Email Address'\r\n                                    type=\"email\"\r\n                                    fontWeight='500'\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.emailAddress && touched.emailAddress && errors.emailAddress}</Text>\r\n                            </GridItem>\r\n\r\n\r\n                        </Grid>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size=\"sm\" variant=\"brand\" mr={2} onClick={handleSubmit} disabled={isLoding || !dirty ? true : false} >{isLoding ? <Spinner /> : 'Search'}</Button>\r\n                        <Button size=\"sm\" variant=\"outline\" colorScheme=\"red\" onClick={() => resetForm()}>Clear</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpprtunityAdvanceSearch\r\n","import { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\r\nimport Spinner from 'components/spinner/Spinner'\r\nimport { useFormik } from 'formik'\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CommonFileUpload from 'components/commonFileUpload'\r\n\r\nconst ImportModal = (props) => {\r\n    const { onClose, isOpen, text, customFields } = props\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate();\r\n\r\n    const initialValues = {\r\n        accounts: ''\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData()\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, resetForm } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            resetForm()\r\n\r\n            if (values.accounts) {\r\n                onClose();\r\n                navigate('/accountImport', { state: { fileData: values.accounts, customFields: customFields } });\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Import Account</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <CommonFileUpload count={values.accounts.length} onFileSelect={(file) => setFieldValue('accounts', file)} text={text} />\r\n                            <Text mb='10px' color={'red'}> {errors.accounts && touched.accounts && <>Please Select {text}</>}</Text>\r\n                        </GridItem>\r\n                    </Grid>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button size=\"sm\" variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Save'}</Button>\r\n                    <Button sx={{\r\n                        marginLeft: 2,\r\n                        textTransform: \"capitalize\",\r\n                    }} variant=\"outline\"\r\n                        colorScheme=\"red\" size=\"sm\" onClick={() => {\r\n                            onClose()\r\n                            formik.resetForm()\r\n                        }}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ImportModal","import { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from '@chakra-ui/react';\r\nimport { getApi, deleteManyApi } from 'services/api';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport CommonCheckTable from '../../../components/reactTable/checktable';\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { CiMenuKebab } from 'react-icons/ci';\r\nimport moment from 'moment';\r\nimport { MdLeaderboard } from 'react-icons/md';\r\nimport { IoIosContact } from 'react-icons/io';\r\nimport AddEdit from './AddEdit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchEmailsData } from '../../../redux/slices/emailsSlice';\r\nimport { toast } from 'react-toastify';\r\nimport AccountAdvanceSearch from './components/AccountAdvanceSearch';\r\nimport { fetchAccountData } from '../../../redux/slices/accountSlice';\r\nimport CommonDeleteModel from '../../../components/commonDeleteModel'\r\nimport ImportModal from './components/ImportModel';\r\n\r\nconst Index = (props) => {\r\n    const [action, setAction] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\r\n    const [searchboxOutside, setSearchboxOutside] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [displaySearchData, setDisplaySearchData] = useState(false);\r\n    const [searchedData, setSearchedData] = useState([]);\r\n    const [selectedId, setSelectedId] = useState();\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [type, setType] = useState(\"\")\r\n    const [isImport, setIsImport] = useState(false);\r\n\r\n    const [permission] = HasAccess([\"Account\"]);\r\n\r\n    const actionHeader = {\r\n        Header: \"Action\",\r\n        accessor: \"action\",\r\n        isSortable: false,\r\n        center: true,\r\n        cell: ({ row, i }) => (\r\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\r\n                <Menu isLazy>\r\n                    <MenuButton>\r\n                        <CiMenuKebab />\r\n                    </MenuButton>\r\n                    <MenuList\r\n                        minW={\"fit-content\"}\r\n                        transform={\"translate(1520px, 173px);\"}\r\n                    >\r\n                        {permission?.update && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                icon={<EditIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setType(\"edit\");\r\n                                    onOpen();\r\n                                    setSelectedId(row?.values?._id);\r\n                                }}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                        )}\r\n                        {permission?.view && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"green\"}\r\n                                icon={<ViewIcon mb={1} fontSize={15} />}\r\n                                onClick={() => {\r\n                                    navigate(`/accountView/${row?.values?._id}`);\r\n                                }}\r\n                            >\r\n                                View\r\n                            </MenuItem>\r\n                        )}\r\n                        {permission?.delete && (\r\n                            <MenuItem\r\n                                py={2.5}\r\n                                color={\"red\"}\r\n                                icon={<DeleteIcon fontSize={15} mb={1} />}\r\n                                onClick={() => {\r\n                                    setDelete(true);\r\n                                    setSelectedValues([row?.values?._id]);\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Menu>\r\n            </Text>\r\n        ),\r\n    };\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        {\r\n            Header: 'Account Name', accessor: 'name', cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => handleViewOpen(cell?.row?.original._id)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            Header: 'Office Phone', accessor: 'officePhone',\r\n        },\r\n        {\r\n            Header: 'Fax', accessor: 'fax',\r\n        },\r\n        {\r\n            Header: 'Email Address', accessor: 'emailAddress',\r\n        },\r\n        ...(permission?.update || permission?.view || permission?.delete ? [actionHeader] : [])\r\n\r\n    ];\r\n    const handleViewOpen = (id) => {\r\n        navigate(`/accountView/${id}`)\r\n    }\r\n    const customFields = [\r\n        {\r\n            \"name\": \"name\",\r\n            \"label\": \"Account Name\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c0\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c1\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": true,\r\n                    \"message\": \"Account Name is required\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c2\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c3\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c4\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c5\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6694b8112cf3cbec6b5286c6\"\r\n                }\r\n            ],\r\n            \"_id\": \"6694b8112cf3cbec6b5286bf\"\r\n        },\r\n        {\r\n            \"name\": \"officePhone\",\r\n            \"label\": \"Office Phone\",\r\n            \"type\": \"number\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b5289fd\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b5289fe\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b5289ff\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b528a00\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b528a01\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6694b8662cf3cbec6b528a02\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6694b8662cf3cbec6b528a03\"\r\n                }\r\n            ],\r\n            \"_id\": \"6694b8662cf3cbec6b5289fc\"\r\n        },\r\n        {\r\n            \"name\": \"fax\",\r\n            \"label\": \"Fax\",\r\n            \"type\": \"number\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d52\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d53\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d54\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d55\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d56\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6694b8742cf3cbec6b528d57\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"\",\r\n                    \"_id\": \"6694b8742cf3cbec6b528d58\"\r\n                }\r\n            ],\r\n            \"_id\": \"6694b8742cf3cbec6b528d51\"\r\n        },\r\n        {\r\n            \"name\": \"emailAddress\",\r\n            \"label\": \"Email Address\",\r\n            \"type\": \"text\",\r\n            \"fixed\": false,\r\n            \"isDefault\": false,\r\n            \"delete\": false,\r\n            \"belongsTo\": null,\r\n            \"backendType\": \"Mixed\",\r\n            \"isTableField\": false,\r\n            \"isView\": false,\r\n            \"options\": [\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290bf\"\r\n                },\r\n                {\r\n                    \"name\": \"\",\r\n                    \"value\": \"\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c0\"\r\n                }\r\n            ],\r\n            \"validation\": [\r\n                {\r\n                    \"require\": false,\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c1\"\r\n                },\r\n                {\r\n                    \"min\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c2\"\r\n                },\r\n                {\r\n                    \"max\": false,\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c3\"\r\n                },\r\n                {\r\n                    \"value\": \"\",\r\n                    \"message\": \"\",\r\n                    \"match\": false,\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c4\"\r\n                },\r\n                {\r\n                    \"message\": \"\",\r\n                    \"formikType\": \"email\",\r\n                    \"_id\": \"6694b8942cf3cbec6b5290c5\"\r\n                }\r\n            ],\r\n            \"_id\": \"6694b8942cf3cbec6b5290be\"\r\n        }\r\n    ]\r\n\r\n    const handleOpenAdd = () => {\r\n        onOpen();\r\n        setType(\"add\")\r\n    }\r\n\r\n    const handleDelete = async (ids) => {\r\n        try {\r\n            setIsLoding(true);\r\n            let response = await deleteManyApi(\"api/account/deleteMany\", ids);\r\n            if (response.status === 200) {\r\n                toast.success(`Account Delete successfully`)\r\n                setSelectedValues([]);\r\n                setDelete(false);\r\n                setAction((pre) => !pre);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(`server error`)\r\n\r\n        } finally {\r\n            setIsLoding(false);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        const result = await dispatch(fetchAccountData())\r\n\r\n        if (result.payload.status === 200) {\r\n            setData(result?.payload?.data);\r\n        } else {\r\n            toast.error(\"Failed to fetch data\", \"error\");\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    // const [columns, setColumns] = useState([...tableColumns]);\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [action])\r\n\r\n    return (\r\n        <div>\r\n            <CommonCheckTable\r\n                title={\"Account\"}\r\n                isLoding={isLoding}\r\n                columnData={tableColumns ?? []}\r\n                // dataColumn={dataColumn ?? []}\r\n                allData={data ?? []}\r\n                tableData={data}\r\n                searchDisplay={displaySearchData}\r\n                setSearchDisplay={setDisplaySearchData}\r\n                searchedDataOut={searchedData}\r\n                setSearchedDataOut={setSearchedData}\r\n                tableCustomFields={[]}\r\n                access={permission}\r\n                // action={action}\r\n                // setAction={setAction}\r\n                // selectedColumns={selectedColumns}\r\n                // setSelectedColumns={setSelectedColumns}\r\n                // isOpen={isOpen}\r\n                // onClose={onclose}\r\n                setIsImport={setIsImport}\r\n                onOpen={handleOpenAdd}\r\n                selectedValues={selectedValues}\r\n                setSelectedValues={setSelectedValues}\r\n                setDelete={setDelete}\r\n                deleteMany={false}\r\n                AdvanceSearch={\r\n                    <Button variant=\"outline\" colorScheme='brand' leftIcon={<SearchIcon />} mt={{ sm: \"5px\", md: \"0\" }} size=\"sm\" onClick={() => setAdvanceSearch(true)}>Advance Search</Button>\r\n                }\r\n                getTagValuesOutSide={getTagValuesOutSide}\r\n                searchboxOutside={searchboxOutside}\r\n                setGetTagValuesOutside={setGetTagValuesOutside}\r\n                setSearchboxOutside={setSearchboxOutside}\r\n                handleSearchType=\"AccountSearch\"\r\n            />\r\n\r\n            <AccountAdvanceSearch\r\n                advanceSearch={advanceSearch}\r\n                setAdvanceSearch={setAdvanceSearch}\r\n                setSearchedData={setSearchedData}\r\n                setDisplaySearchData={setDisplaySearchData}\r\n                allData={data ?? []}\r\n                setAction={setAction}\r\n                setGetTagValues={setGetTagValuesOutside}\r\n                setSearchbox={setSearchboxOutside}\r\n            />\r\n\r\n            <AddEdit isOpen={isOpen} size={\"lg\"} onClose={onClose} setAction={setAction} type={type} selectedId={selectedId} />\r\n            <CommonDeleteModel\r\n                isOpen={deleteModel}\r\n                onClose={() => setDelete(false)}\r\n                type=\"Account\"\r\n                handleDeleteData={handleDelete}\r\n                ids={selectedValues}\r\n            />\r\n\r\n            <ImportModal\r\n                text=\"Account file\"\r\n                isOpen={isImport}\r\n                onClose={setIsImport}\r\n                customFields={customFields}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index"],"names":["CommonFileUpload","props","count","text","onFileSelect","textColorPrimary","useColorModeValue","brandColor","_jsxs","Grid","templateColumns","gap","children","_jsx","GridItem","colSpan","base","Dropzone","w","me","minH","img","csv","height","isMultipleAllow","content","Box","Icon","as","MdUpload","h","color","Flex","justify","mx","mb","Text","fontSize","fontWeight","direction","textAlign","mt","my","state","allData","advanceSearch","setAdvanceSearch","isLoding","setSearchedData","setDisplaySearchData","setSearchClear","setSearchbox","dispatch","useDispatch","validationSchema","yup","name","officePhone","fax","emailAddress","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","setSearchValue","getSearchData","type","getValue","value","setGetTagValues","filter","item","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","dirty","_Fragment","Modal","onClose","isOpen","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","onClick","ModalBody","md","FormLabel","display","ms","Input","onChange","onBlur","placeholder","ModalFooter","Button","size","variant","mr","disabled","Spinner","colorScheme","customFields","setIsLoding","useState","navigate","useNavigate","accounts","AddData","async","fileData","e","console","log","length","file","sx","marginLeft","textTransform","action","setAction","onOpen","useDisclosure","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","JSON","parse","localStorage","getItem","data","setData","displaySearchData","searchedData","selectedId","setSelectedId","deleteModel","setDelete","edit","setEdit","setType","isImport","setIsImport","permission","HasAccess","actionHeader","Header","accessor","isSortable","center","cell","row","i","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","_row$values","_id","view","ViewIcon","_row$values2","delete","DeleteIcon","_row$values3","tableColumns","width","className","_cell$row","handleViewOpen","original","textDecoration","cursor","id","useEffect","result","fetchAccountData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","tableData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","handleOpenAdd","deleteMany","AdvanceSearch","leftIcon","SearchIcon","sm","handleSearchType","AccountAdvanceSearch","AddEdit","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","success","pre","ImportModal"],"sourceRoot":""}