{"version":3,"file":"static/js/3204.4ebc17f1.chunk.js","mappings":"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","sources":["views/admin/emailTemplate/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons';\r\nimport { Button, Menu, MenuButton, MenuItem, MenuList, Select, Text, useDisclosure } from '@chakra-ui/react';\r\nimport { getApi } from 'services/api';\r\nimport { HasAccess } from '../../../redux/accessUtils';\r\nimport CommonCheckTable from '../../../components/reactTable/checktable';\r\nimport { CiMenuKebab } from 'react-icons/ci';\r\nimport { putApi } from 'services/api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { deleteManyApi } from 'services/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { fetchEmailTempData } from '../../../redux/slices/emailTempSlice';\r\n\r\nconst Index = () => {\r\n    const [action, setAction] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [edit, setEdit] = useState(false);\r\n    const [eventView, setEventView] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const [selectedId, setSelectedId] = useState();\r\n    const [selectedValues, setSelectedValues] = useState([]);\r\n    // const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [getTagValuesOutSide, setGetTagValuesOutside] = useState([]);\r\n    const [searchboxOutside, setSearchboxOutside] = useState('');\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [deleteMany, setDeleteMany] = useState(false);\r\n    const [isImportLead, setIsImportLead] = useState(false);\r\n    const [isLoding, setIsLoding] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [displaySearchData, setDisplaySearchData] = useState(false);\r\n    const [searchedData, setSearchedData] = useState([]);\r\n    const [userAction, setUserAction] = useState(\"\");\r\n    const [permission] = HasAccess([\"Email Template\"]);\r\n    const location = useLocation();\r\n    // const state = location.state;\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEditOpen = (row) => {\r\n        onOpen();\r\n        setUserAction(\"edit\")\r\n        navigate(`/email-template/email-template-addEdit`, { state: { type: 'edit', id: row?.values?._id } })\r\n        setSelectedId(row?.values?._id);\r\n    }\r\n\r\n    const actionHeader = {\r\n        Header: \"Action\", isSortable: false, center: true,\r\n        cell: ({ row }) => (\r\n            <Text fontSize=\"md\" fontWeight=\"900\" textAlign={\"center\"}>\r\n                <Menu isLazy >\r\n                    <MenuButton ><CiMenuKebab /></MenuButton>\r\n                    <MenuList minW={'fit-content'} transform={\"translate(1520px, 173px);\"}>\r\n                        {permission?.update &&\r\n                            <MenuItem py={2.5} icon={<EditIcon fontSize={15} mb={1} />} onClick={() => handleEditOpen(row)}>Edit</MenuItem>}\r\n                        {permission?.view &&\r\n                            <MenuItem py={2.5} color={\"green\"} icon={<ViewIcon fontSize={15} mb={1} />} onClick={() => navigate(`/email-template/${row?.values?._id}`)}>View</MenuItem>}\r\n                        {permission?.delete &&\r\n                            <MenuItem py={2.5} color={'red'} icon={<DeleteIcon fontSize={15} mb={1} />} onClick={() => { setDeleteMany(true); setSelectedValues([row?.values?._id]); }}>Delete</MenuItem>}\r\n                    </MenuList>\r\n                </Menu>\r\n            </Text>\r\n        )\r\n    }\r\n    const tableColumns = [\r\n        {\r\n            Header: \"#\",\r\n            accessor: \"_id\",\r\n            isSortable: false,\r\n            width: 5\r\n        },\r\n        {\r\n            Header: 'Template Name', accessor: 'templateName',\r\n            cell: (cell) => (\r\n                <div className=\"selectOpt\">\r\n                    <Text\r\n                        onClick={() => navigate(`/email-template/${cell?.row?.original._id}`)}\r\n                        me=\"10px\"\r\n                        sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' }, cursor: 'pointer' }}\r\n                        color='brand.600'\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"700\"\r\n                    >\r\n                        {cell?.value}\r\n                    </Text>\r\n                </div>\r\n            )\r\n        },\r\n        { Header: \"Description\", accessor: \"description\" },\r\n        ...(permission?.update || permission?.delete ? [actionHeader] : []),\r\n    ];\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        const result = await dispatch(fetchEmailTempData())\r\n        if (result.payload.status === 200) {\r\n            setData(result?.payload?.data);\r\n        } else {\r\n            toast.error(\"Failed to fetch data\", \"error\");\r\n        }\r\n        setIsLoding(false)\r\n    }\r\n\r\n    const handleDeleteTask = async (ids) => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await deleteManyApi('api/email-temp/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                setSelectedValues([])\r\n                setDeleteMany(false)\r\n                setAction((pre) => !pre)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n\r\n\r\n    // const [selectedColumns, setSelectedColumns] = useState([...tableColumns]);\r\n    // const dataColumn = tableColumns?.filter(item => selectedColumns?.find(colum => colum?.Header === item.Header))\r\n\r\n    const addBtn = () => {\r\n        navigate(`/email-template/email-template-addEdit`, { state: { type: 'add' } })\r\n        setUserAction(\"add\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [action])\r\n\r\n    return (\r\n        <div>\r\n            <CommonCheckTable\r\n                title={\"Email Template\"}\r\n                isLoding={isLoding}\r\n                columnData={tableColumns ?? []}\r\n                // dataColumn={dataColumn ?? []}\r\n                allData={data ?? []}\r\n                searchDisplay={displaySearchData}\r\n                setSearchDisplay={setDisplaySearchData}\r\n                searchedDataOut={searchedData}\r\n                setSearchedDataOut={setSearchedData}\r\n                tableCustomFields={[]}\r\n                access={permission}\r\n                // selectedColumns={selectedColumns}\r\n                // setSelectedColumns={setSelectedColumns}\r\n                // state={state}\r\n                onOpen={addBtn}\r\n                selectedValues={selectedValues}\r\n                setSelectedValues={setSelectedValues}\r\n                setDelete={setDeleteMany}\r\n                AdvanceSearch={false}\r\n                getTagValuesOutSide={getTagValuesOutSide}\r\n                searchboxOutside={searchboxOutside}\r\n                setGetTagValuesOutside={setGetTagValuesOutside}\r\n                setSearchboxOutside={setSearchboxOutside}\r\n                handleSearchType=\"template\"\r\n            />\r\n            <CommonDeleteModel isOpen={deleteMany} onClose={() => setDeleteMany(false)} type='Email Template' handleDeleteData={handleDeleteTask} ids={selectedValues} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n\r\n"],"names":["Index","action","setAction","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","eventView","setEventView","id","setId","selectedId","setSelectedId","selectedValues","setSelectedValues","getTagValuesOutSide","setGetTagValuesOutside","searchboxOutside","setSearchboxOutside","deleteMany","setDeleteMany","JSON","parse","localStorage","getItem","isImportLead","setIsImportLead","isLoding","setIsLoding","data","setData","displaySearchData","setDisplaySearchData","searchedData","setSearchedData","userAction","setUserAction","permission","HasAccess","navigate","useLocation","useNavigate","dispatch","useDispatch","actionHeader","Header","isSortable","center","cell","_ref","row","_jsx","Text","fontSize","fontWeight","textAlign","children","_jsxs","Menu","isLazy","MenuButton","CiMenuKebab","MenuList","minW","transform","update","MenuItem","py","icon","EditIcon","mb","onClick","_row$values","_row$values2","state","type","values","_id","handleEditOpen","view","color","ViewIcon","_row$values3","delete","DeleteIcon","_row$values4","tableColumns","accessor","width","className","_cell$row","original","me","sx","textDecoration","cursor","value","useEffect","async","result","fetchEmailTempData","_result$payload","payload","status","toast","error","fetchData","CommonCheckTable","title","columnData","allData","searchDisplay","setSearchDisplay","searchedDataOut","setSearchedDataOut","tableCustomFields","access","addBtn","setDelete","AdvanceSearch","handleSearchType","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","pre","console","log"],"sourceRoot":""}