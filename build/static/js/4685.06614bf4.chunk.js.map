{"version":3,"file":"static/js/4685.06614bf4.chunk.js","mappings":"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","sources":["views/admin/task/components/taskView.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure, Box, Heading, Input } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { getApi } from 'services/api'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { HasAccess } from '../../../../redux/accessUtils';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport AddEdit from './AddEdit';\r\nimport CommonDeleteModel from 'components/commonDeleteModel';\r\nimport { deleteManyApi } from 'services/api';\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport { TaskSchema } from 'schema';\r\nimport { useFormik } from 'formik';\r\nimport { putApi } from 'services/api';\r\nimport dayjs from 'dayjs';\r\n\r\nconst TaskView = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [permission, contactAccess, leadAccess] = HasAccess(['Tasks', 'Contacts', 'Leads'])\r\n\r\n    const [data, setData] = useState()\r\n    const { onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const [deleteManyModel, setDeleteManyModel] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [editableField, setEditableField] = useState(null);\r\n    const today = new Date().toISOString().split('T')[0];\r\n    const todayTime = new Date().toISOString().split('.')[0];\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            let result = await getApi('api/task/view/', id?.event ? id?.event?._def?.extendedProps?._id : id);\r\n            setData(result?.data);\r\n        }\r\n    }\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Task_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const handleDeleteTask = async (ids) => {\r\n        try {\r\n            let response = await deleteManyApi('api/task/deleteMany', ids)\r\n            if (response.status === 200) {\r\n                navigate('/task')\r\n                setDeleteManyModel(false)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const initialValues = {\r\n        title: data?.title,\r\n        description: data?.description,\r\n        notes: data?.notes,\r\n        start: data?.start,\r\n        end: data?.end,\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: TaskSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (values, { resetForm }) => {\r\n            let response = await putApi(`api/task/edit/${id}`, values)\r\n            if (response.status === 200) {\r\n                setEditableField(null);\r\n                fetchViewData()\r\n            }\r\n        },\r\n    });\r\n    const handleDoubleClick = (fieldName, value) => {\r\n        formik.setFieldValue(fieldName, value);\r\n        setEditableField(fieldName)\r\n    };\r\n\r\n    const handleBlur = (e) => {\r\n        formik.handleSubmit();\r\n    };\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n    const handleClick = () => {\r\n        onOpen()\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Heading size=\"lg\" m={3}>\r\n                        {data?.title || \"\"}\r\n                    </Heading>\r\n                </GridItem>\r\n                <GridItem colSpan={{ base: 4 }}>\r\n                    <Card >\r\n                        <Grid gap={4}>\r\n                            <GridItem colSpan={2}>\r\n                                <Box>\r\n                                    <Box display={\"flex\"} justifyContent={\"space-between\"} >\r\n                                        <Heading size=\"md\" mb={3}>\r\n                                            Task Details\r\n                                        </Heading>\r\n                                        <Flex id=\"hide-btn\" >\r\n                                            <Menu>\r\n                                                {(user.role === 'superAdmin' || permission?.create || permission?.update || permission?.delete) && <MenuButton variant=\"outline\" colorScheme='blackAlpha' size=\"sm\" va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                                    Actions\r\n                                                </MenuButton>}\r\n                                                <MenuDivider />\r\n                                                <MenuList minWidth={2}>\r\n                                                    {(user.role === 'superAdmin' || permission?.create) && <MenuItem onClick={() => handleClick()} alignItems={'start'} color={'blue'} icon={<AddIcon />}>Add</MenuItem>}\r\n                                                    {(user.role === 'superAdmin' || permission?.update) && <MenuItem onClick={() => setEdit(true)} alignItems={'start'} icon={<EditIcon />}>Edit</MenuItem>}\r\n                                                    <MenuItem onClick={generatePDF} alignItems={\"start\"} icon={<FaFilePdf />} display={\"flex\"} style={{ alignItems: \"center\" }}>Print as PDF</MenuItem >\r\n\r\n                                                    {(user.role === 'superAdmin' || permission?.delete) && <>\r\n                                                        <MenuDivider />\r\n                                                        <MenuItem alignItems={'start'} onClick={() => setDeleteManyModel(true)} color={'red'} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                                    </>}\r\n                                                </MenuList>\r\n                                            </Menu>\r\n                                            <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} >\r\n                                                Back\r\n                                            </Button>\r\n                                        </Flex>\r\n                                    </Box>\r\n                                    <HSeparator />\r\n                                </Box>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Title </Text>\r\n                                {\r\n                                    editableField === \"title\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"title\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.title}\r\n                                                borderColor={formik?.errors?.title && formik?.touched?.title ? \"red.300\" : null}\r\n                                                autoFocus\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.title && formik?.touched.title && formik?.errors.title}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"title\", data?.title)}>{data?.title ? data?.title : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Related To </Text>\r\n                                <Text>{data?.category ? data?.category : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task start </Text>\r\n                                {\r\n                                    editableField === \"start\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"start\"\r\n                                                type={data?.allDay ? 'date' : 'datetime-local'}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={data.allDay === true\r\n                                                    ? moment(formik.values.start).format('YYYY-MM-DD')\r\n                                                    : moment(formik.values.start).format('YYYY-MM-DD HH:mm A')}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.start && formik?.touched?.start ? \"red.300\" : null}\r\n                                                min={data?.allDay ? dayjs(today).format('YYYY-MM-DD') : dayjs(todayTime).format('YYYY-MM-DD HH:mm')}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.start && formik?.touched.start && formik?.errors.start}</Text>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"start\", data?.start)}>\r\n                                            {data && data?.start ? (\r\n                                                data.allDay === true\r\n                                                    ? moment(data.start).format('DD-MM-YYYY')\r\n                                                    : moment(data.start).format('DD-MM-YYYY HH:mm A')\r\n                                            ) : (\r\n                                                \"-\"\r\n                                            )}\r\n                                        </Text>\r\n                                }\r\n\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task end  </Text>\r\n                                {\r\n                                    editableField === \"end\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                name=\"end\"\r\n                                                type={data?.allDay ? 'date' : 'datetime-local'}\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                min={formik.values.start}\r\n                                                value={data.allDay === true\r\n                                                    ? moment(formik.values.end).format('YYYY-MM-DD')\r\n                                                    : moment(formik.values.end).format('YYYY-MM-DD HH:mm A')}\r\n                                                autoFocus\r\n                                                borderColor={formik.errors?.end && formik.touched?.end ? \"red.300\" : null}\r\n\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik.errors.end && formik.touched.end && formik.errors.end}</Text>\r\n                                        </>\r\n\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"end\", data?.end)}>{data?.allDay === true ? moment(data?.end).format('DD-MM-YYYY') : moment(data?.end).format('DD-MM-YYYY HH:mm A')}</Text>\r\n\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Link </Text>\r\n                                {data?.url ?\r\n                                    <a target='_blank' href={data?.url}>\r\n                                        <IconButton borderRadius=\"10px\" size=\"md\" icon={<BiLink />} />\r\n                                    </a> : '-'\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                                <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Assign To  </Text>\r\n                                <Link to={data?.assignTo ? contactAccess?.view && `/contactView/${data?.assignTo}` : leadAccess?.view && `/leadView/${data?.assignToLead}`}>\r\n                                    <Text color={(data?.category === 'contact' && (contactAccess?.view || user?.role === 'superAdmin')) ? 'brand.600' : (leadAccess?.view || user?.role === 'superAdmin' && data?.category === 'lead') ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignToName ? data?.assignToName : ' - '}</Text>\r\n                                </Link>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2, md: 1 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                                <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                                {\r\n                                    editableField === \"description\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"description\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.description}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.description && formik?.touched?.description ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.description && formik?.touched.description && formik?.errors.description}</Text>\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"description\", data?.description)}>{data?.description ? data?.description : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 2 }} >\r\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                                {\r\n                                    editableField === \"notes\" ?\r\n                                        <>\r\n                                            <Input\r\n                                                id=\"text\"\r\n                                                name=\"notes\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={formik.values.notes}\r\n                                                autoFocus\r\n                                                borderColor={formik?.errors?.notes && formik?.touched?.notes ? \"red.300\" : null}\r\n                                            />\r\n                                            <Text mb='10px' color={'red'}> {formik?.errors.notes && formik?.touched.notes && formik?.errors.notes}</Text>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <Text onDoubleClick={() => handleDoubleClick(\"notes\", data?.notes)}>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                }\r\n                            </GridItem>\r\n                        </Grid>\r\n                    </Card>\r\n                </GridItem>\r\n\r\n            </Grid>\r\n            {(permission?.update || permission?.delete || user?.role === 'superAdmin') && <Card mt={3}>\r\n                <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                    <GridItem colStart={6} >\r\n                        <Flex justifyContent={\"right\"}>\r\n                            {(permission?.update || user?.role === 'superAdmin') && <Button size=\"sm\" onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>}\r\n                            {(permission?.delete || user?.role === 'superAdmin') && <Button size=\"sm\" style={{ background: 'red.800' }} onClick={() => setDeleteManyModel(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>}\r\n            <AddEdit isOpen={edit} onClose={() => setEdit(false)} viewClose={onClose} id={id?.event ? id?.event?._def?.extendedProps?._id : id} userAction={\"edit\"} />\r\n            <CommonDeleteModel isOpen={deleteManyModel} onClose={() => setDeleteManyModel(false)} type='Task' handleDeleteData={handleDeleteTask} ids={[id]} />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TaskView\r\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n"],"names":["props","_formik$errors","_formik$touched","_formik$errors2","_formik$touched2","_formik$errors3","_formik$touched3","_formik$errors4","_formik$touched4","_formik$errors5","_formik$touched5","_id$event2","_id$event2$_def","_id$event2$_def$exten","params","useParams","id","user","JSON","parse","localStorage","getItem","permission","contactAccess","leadAccess","HasAccess","data","setData","useState","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","deleteManyModel","setDeleteManyModel","loading","setLoading","navigate","useNavigate","editableField","setEditableField","today","Date","toISOString","split","todayTime","fetchViewData","async","_id$event","_id$event$_def","_id$event$_def$extend","result","getApi","event","_def","extendedProps","_id","initialValues","title","description","notes","start","end","formik","useFormik","validationSchema","TaskSchema","enableReinitialize","onSubmit","values","_ref","resetForm","putApi","status","handleDoubleClick","fieldName","value","setFieldValue","handleBlur","e","handleSubmit","useEffect","_jsxs","children","Grid","templateColumns","gap","_jsx","GridItem","colSpan","base","Heading","size","m","Card","Box","display","justifyContent","mb","Flex","Menu","role","create","update","delete","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","minWidth","MenuItem","onClick","alignItems","color","icon","AddIcon","EditIcon","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","error","FaFilePdf","_Fragment","DeleteIcon","leftIcon","IoIosArrowBack","HSeparator","md","Text","fontSize","fontWeight","Input","name","onChange","handleChange","onBlur","borderColor","errors","touched","autoFocus","onDoubleClick","category","allDay","min","dayjs","url","target","href","IconButton","borderRadius","BiLink","reminder","Link","to","assignTo","view","assignToLead","sx","textDecoration","assignToName","createByName","mt","colStart","background","AddEdit","isOpen","viewClose","userAction","CommonDeleteModel","handleDeleteData","deleteManyApi","ids","log","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","textarea","cx","__css","__DEV__","displayName"],"sourceRoot":""}