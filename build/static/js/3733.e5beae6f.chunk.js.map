{"version":3,"file":"static/js/3733.e5beae6f.chunk.js","mappings":"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","sources":["views/admin/reports/components/reportChart.js","components/icons/IconBox.js","components/charts/LineChart.js","components/charts/PieChart.js","views/admin/default/index.jsx","components/card/MiniStatistics.js"],"sourcesContent":["\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport ReactDatePicker from \"react-datepicker\"\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { postApi } from \"services/api\"\r\n\r\nconst ReportChart = ({ dashboard = false }) => {\r\n  const [reportChart, setReportChart] = useState({})\r\n  const [startDate, setStartDate] = useState(new Date(new Date().setDate(new Date().getDate() - 14)))\r\n  const [endDate, setEndDate] = useState(new Date())\r\n  const [select, setSelect] = useState('all')\r\n  const [selection, setSelection] = useState('day')\r\n  const modules = useSelector((state) => state?.modules?.data)\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n  const isEmailsActive = modules?.find((item) => item?.moduleName === \"Emails\")?.isActive\r\n  const isCallsActive = modules?.find((item) => item?.moduleName === \"Calls\")?.isActive\r\n\r\n  const fetchChart = async () => {\r\n    const data = {\r\n      startDate: moment(startDate).format('YYYY-MM-DD'),\r\n      endDate: moment(endDate).format('YYYY-MM-DD'),\r\n      filter: selection\r\n    }\r\n    const result = await postApi(user.role === 'superAdmin' ? 'api/reporting/index' : `api/reporting/index?sender=${user._id}`, data)\r\n    if (result.status === 200) {\r\n      setReportChart(result?.data)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchChart()\r\n  }, [startDate, endDate, selection])\r\n\r\n  const series = Object.keys(reportChart).map((key) => {\r\n    const dataSet = reportChart[key][0]\r\n    let seriesData = []\r\n\r\n    if (dataSet?.Emails && isEmailsActive) {\r\n      seriesData = seriesData.concat(\r\n        dataSet?.Emails?.map((item) => ({ x: new Date(item?.date).getTime(), y: item?.Emailcount }))\r\n      )\r\n    }\r\n    if (dataSet?.Calls && isCallsActive) {\r\n      seriesData = seriesData.concat(\r\n        dataSet?.Calls?.map((item) => ({ x: new Date(item?.date).getTime(), y: item?.Callcount }))\r\n      )\r\n    }\r\n\r\n    return {\r\n      name: key === \"Email\" ? \"Emails\" : key === \"Call\" ? \"Calls\" : \"\",\r\n      data: seriesData,\r\n    }\r\n  }).filter(series => series.name !== \"\")\r\n\r\n  const selectedSeries = select === 'all' ? series : series.filter(s => s.name === select)\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'area-chart',\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: false\r\n      }\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      labels: {\r\n        style: {\r\n          colors: '#64748b',\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Count',\r\n        style: {\r\n          color: '#64748b',\r\n          fontSize: '14px',\r\n          fontWeight: 500,\r\n        },\r\n      },\r\n      labels: {\r\n        style: {\r\n          colors: '#64748b',\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2,\r\n    },\r\n    colors: ['#3b82f6', '#10b981'],\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.3,\r\n        stops: [0, 90, 100]\r\n      }\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd MMM yyyy'\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      labels: {\r\n        colors: '#64748b',\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white/10 w-full rounded-lg shadow-md overflow-hidden\">\r\n      <div className=\"p-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Activity Report</h2>\r\n        <p className=\"text-sm text-gray-600 mb-6\">Overview of emails and calls over time</p>\r\n        \r\n        {!dashboard && (\r\n          <div className=\"flex flex-col space-y-4 md:flex-row md:items-center md:justify-between md:space-y-0 mb-6\">\r\n            <select \r\n              value={select} \r\n              onChange={(e) => setSelect(e.target.value)}\r\n              className=\"w-full md:w-40 px-3 py-2 text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"Email\">Emails</option>\r\n              <option value=\"Call\">Calls</option>\r\n            </select>\r\n            \r\n            <div className=\"flex space-x-2\">\r\n              <ReactDatePicker\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                className=\"w-40 px-3 py-2 text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n              <ReactDatePicker\r\n                selected={endDate}\r\n                onChange={(date) => setEndDate(date)}\r\n                className=\"w-40 px-3 py-2 text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <label className=\"inline-flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-radio text-blue-600\"\r\n                  name=\"interval\"\r\n                  value=\"day\"\r\n                  checked={selection === 'day'}\r\n                  onChange={(e) => setSelection(e.target.value)}\r\n                />\r\n                <span className=\"ml-2 text-gray-700\">Daily</span>\r\n              </label>\r\n              <label className=\"inline-flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-radio text-blue-600\"\r\n                  name=\"interval\"\r\n                  value=\"week\"\r\n                  checked={selection === 'week'}\r\n                  onChange={(e) => setSelection(e.target.value)}\r\n                />\r\n                <span className=\"ml-2 text-gray-700\">Weekly</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"w-full h-[400px]\">\r\n          <ReactApexChart\r\n            options={options}\r\n            series={selectedSeries}\r\n            type=\"area\"\r\n            height=\"100%\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportChart\r\n\r\n","import React from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function IconBox(props) {\r\n  const { icon, ...rest } = props;\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      borderRadius={\"50%\"}\r\n      {...rest}>\r\n      {icon}\r\n    </Flex>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar, BarChart, XAxis, YAxis, ResponsiveContainer, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nfunction ShadcnStyleBarChart({ data, className, title, description }) {\r\n  const chartData = useMemo(() => {\r\n    return data\r\n      .map((item) => ({\r\n        name: item.name,\r\n        value: item.length,\r\n      }))\r\n      .filter((item) => item.value !== 0);\r\n  }, [data]);\r\n\r\n  const maxValue = useMemo(() => {\r\n    return chartData.length > 0\r\n      ? Math.max(...chartData.map((item) => item.value))\r\n      : 0;\r\n  }, [chartData]);\r\n\r\n  // Calculate suggested tick values for Y axis\r\n  const yAxisTicks = useMemo(() => {\r\n    const tickCount = 5;\r\n    const step = Math.ceil(maxValue / (tickCount - 1));\r\n    return Array.from({ length: tickCount }, (_, i) => i * step);\r\n  }, [maxValue]);\r\n\r\n  return (\r\n    <div className={`w-full  ${className}`}>\r\n      <div className=\"header\">\r\n        <h3 className=\"text-lg font-semibold\">{title || 'Data Distribution'}</h3>\r\n        <p>{description || 'Distribution of data across categories'}</p>\r\n      </div>\r\n      <div className=\" hover:bg-transparent\">\r\n        <div className=\"h-[500px] w-full mt-4 hover:bg-transparent\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart\r\n              data={chartData}\r\n              margin={{ top: 10, right: 10, left: 10, bottom: 20 }}\r\n            >\r\n              <CartesianGrid \r\n                strokeDasharray=\"3 3\" \r\n                vertical={false} \r\n                stroke=\"hsl(var(--muted-foreground))\" \r\n                opacity={0.2}\r\n              />\r\n              <XAxis\r\n                dataKey=\"name\"\r\n                stroke=\"hsl(var(--muted-foreground))\"\r\n                fontSize={12}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                dy={8}\r\n                tick={{ fill: 'hsl(var(--muted-foreground))' }}\r\n              />\r\n              <YAxis\r\n                stroke=\"hsl(var(--muted-foreground))\"\r\n                fontSize={12}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                tickFormatter={(value) => `${value}`}\r\n                domain={[0, maxValue]}\r\n                ticks={yAxisTicks}\r\n                tick={{ fill: 'hsl(var(--muted-foreground))' }}\r\n              />\r\n              <Tooltip\r\n                cursor={{ fill: 'hsl(var(--muted))' }}\r\n                contentStyle={{\r\n                  backgroundColor: 'hsl(var(--card))',\r\n                  border: '1px solid hsl(var(--border))',\r\n                  borderRadius: 'var(--radius)',\r\n                  boxShadow: '0 1px 3px 0 rgb(0 0 0 / 0.1)',\r\n                }}\r\n                labelStyle={{\r\n                  color: 'hsl(var(--foreground))',\r\n                  fontWeight: 500,\r\n                  marginBottom: '0.25rem',\r\n                }}\r\n                itemStyle={{\r\n                  color: 'hsl(var(--muted-foreground))',\r\n                  fontSize: '0.875rem',\r\n                }}\r\n                formatter={(value) => [`${value}`, 'Count']}\r\n                labelFormatter={(label) => `${label}`}\r\n              />\r\n              <Bar\r\n                dataKey=\"value\"\r\n                radius={[6, 6, 0, 0]}\r\n                fill=\"hsl(var(--primary))\"\r\n                maxBarSize={60}\r\n                animationDuration={1000}\r\n                animationBegin={0}\r\n                onMouseEnter={(data, index) => {\r\n                  // Add hover effect by changing the bar's opacity\r\n                  const bars = document.querySelectorAll('.recharts-bar-rectangle');\r\n                  bars.forEach((bar, i) => {\r\n                    if (i !== index) {\r\n                      bar.style.opacity = '0.5';\r\n                    }\r\n                  });\r\n                }}\r\n                onMouseLeave={() => {\r\n                  // Reset opacity on mouse leave\r\n                  const bars = document.querySelectorAll('.recharts-bar-rectangle');\r\n                  bars.forEach((bar) => {\r\n                    bar.style.opacity = '1';\r\n                  });\r\n                }}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nShadcnStyleBarChart.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      length: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n};\r\n\r\nexport default ShadcnStyleBarChart;\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, Label } from \"recharts\";\r\n\r\nconst CustomRadialChart = ({ leadData = [] }) => {\r\n  const activeLength = leadData.filter(lead => lead.leadStatus === \"active\").length;\r\n  const pendingLength = leadData.filter(lead => lead.leadStatus === \"pending\").length;\r\n  const soldLength = leadData.filter(lead => lead.leadStatus === \"sold\").length;\r\n\r\n  const series = [activeLength, pendingLength, soldLength];\r\n  const totalLeads = leadData.length;\r\n  const scaledSeries = series.map(value => (totalLeads === 0 ? NaN : (value * 100) / totalLeads));\r\n\r\n  const data = [\r\n    { name: \"Active\", value: scaledSeries[0] },\r\n    { name: \"Pending\", value: scaledSeries[1] },\r\n    { name: \"Sold\", value: scaledSeries[2] },\r\n  ];\r\n\r\n  const COLORS = [\"#25BE87\", \"#ECC94B\", \"#ff5959\"];\r\n\r\n  return (\r\n    <div className=\"w-full max-w-md h-full mx-auto my-4 rounded-xl mb-4 shadow-md p-6\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-2\">Lead Status Distribution</h2>\r\n      <div className=\"relative my-auto\">\r\n        <PieChart width={330} height={320}>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            innerRadius={60}\r\n            outerRadius={80}\r\n            startAngle={180}\r\n            endAngle={-180}\r\n            paddingAngle={5}\r\n            dataKey=\"value\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n            <Label\r\n              content={({ viewBox }) => {\r\n                const { cx, cy } = viewBox;\r\n                return (\r\n                  <text x={cx} y={cy} fill=\"#1F7EEB\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n                    <tspan x={cx} y={cy} dy=\"-0.5em\" fontSize=\"22px\" fontWeight=\"bold\">\r\n                      {totalLeads}\r\n                    </tspan>\r\n                    <tspan x={cx} y={cy} dy=\"1.5em\" fontSize=\"16px\">\r\n                      Total\r\n                    </tspan>\r\n                  </text>\r\n                );\r\n              }}\r\n            />\r\n          </Pie>\r\n        </PieChart>\r\n      </div>\r\n      <div className=\"flex justify-center mt-4 space-x-4\">\r\n        {data.map((entry, index) => (\r\n          <div key={`legend-${index}`} className=\"flex items-center\">\r\n            <div\r\n              className=\"w-3 h-3 rounded-full mr-2\"\r\n              style={{ backgroundColor: COLORS[index] }}\r\n            ></div>\r\n            <span className=\"text-sm\">\r\n              {entry.name}: {Math.round((entry.value / 100) * totalLeads)}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomRadialChart;\r\n","// Chakra imports\r\nimport {\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  IconButton,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  Grid,\r\n  GridItem,\r\n  Progress,\r\n  Box,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Assets\r\n// Custom components\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\nimport Card from \"components/card/Card\";\r\nimport MiniStatistics from \"components/card/MiniStatistics\";\r\nimport IconBox from \"components/icons/IconBox\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { LuBuilding2 } from \"react-icons/lu\";\r\nimport { MdAddTask, MdContacts, MdLeaderboard } from \"react-icons/md\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\nimport ReportChart from \"../reports/components/reportChart\";\r\nimport Chart from \"components/charts/LineChart.js\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport PieChart from \"components/charts/PieChart\";\r\nimport CountUpComponent from \"../../../../src/components/countUpComponent/countUpComponent\";\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function UserReports() {\r\n  // Chakra Color Mode\r\n  const brandColor = useColorModeValue(\"brand.500\", \"white\");\r\n  const boxBg = useColorModeValue(\"secondaryGray.300\", \"whiteAlpha.100\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [isLoding, setIsLoding] = useState(false);\r\n\r\n  const [allData, setAllData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const modules = useSelector((state) => state?.modules?.data)\r\n  const [contactsView, taskView, leadView, proprtyView] = HasAccess([\"Contacts\", \"Tasks\", \"Leads\", \"Properties\"]);\r\n\r\n  const fetchData = async () => {\r\n    let responseData = await getApi(user?.role === 'superAdmin' ? `api/status/` : `api/status/?createBy=${user?._id}`);\r\n    setAllData(responseData?.data?.data);\r\n  };\r\n\r\n\r\n  const fetchProgressChart = async () => {\r\n    setIsLoding(true);\r\n    let result = await getApi(user?.role === 'superAdmin' ? 'api/reporting/line-chart' : `api/reporting/line-chart?createBy=${user?._id}`);\r\n    if (result && result?.status === 200) {\r\n      setData(result?.data)\r\n    }\r\n    setIsLoding(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchProgressChart()\r\n  }, [])\r\n\r\n\r\n  const findModuleData = (title) => {\r\n    const filterData = data?.find(item => item?.name === title)\r\n    return filterData?.length || 0\r\n  }\r\n\r\n  const findLeadStatus = (title) => {\r\n    const filterData = allData?.leadData?.filter(item => item?.leadStatus === title)\r\n    return filterData?.length || 0\r\n  }\r\n  const findTaskStatus = (title) => {\r\n    const filterData = allData?.taskData?.filter(item => item?.status === title)\r\n    return filterData?.length || 0\r\n  }\r\n\r\n  const leadModule = modules?.find(({ moduleName }) => moduleName === \"Leads\")\r\n  const contactModule = modules?.find(({ moduleName }) => moduleName === \"Contacts\")\r\n  // const propertiesModule = modules?.find(({ moduleName }) => moduleName === \"Properties\")\r\n  const tasksModule = modules?.find(({ moduleName }) => moduleName === \"Tasks\")\r\n  const reportModule = modules?.find(({ moduleName }) => moduleName === \"Reporting and Analytics\")\r\n  const emailModule = modules?.find(({ moduleName }) => moduleName === \"Emails\")\r\n  const callModule = modules?.find(({ moduleName }) => moduleName === \"Calls\")\r\n\r\n  const taskStatus = [\r\n    {\r\n      name: \"Completed\",\r\n      status: 'completed',\r\n      length: findTaskStatus('completed'),\r\n      color: \"#22c55e\"\r\n    },\r\n    {\r\n      name: \"Pending\",\r\n      status: 'pending',\r\n      length: findTaskStatus('pending'),\r\n      color: \"#eab308\"\r\n    },\r\n    {\r\n      name: \"In Progress\",\r\n      status: 'inProgress',\r\n      length: findTaskStatus('inProgress'),\r\n      color: \"#8b5cf6\"\r\n    },\r\n    {\r\n      name: \"Todo\",\r\n      status: 'todo',\r\n      length: findTaskStatus('todo'),\r\n      color: \"#2563eb\"\r\n    },\r\n    {\r\n      name: \"On Hold\",\r\n      status: 'onHold',\r\n      length: findTaskStatus('onHold'),\r\n      color: \"#DB5436\"\r\n    },\r\n  ]\r\n  const navigateTo = {\r\n    Lead: '/lead',\r\n    Contact: '/contacts',\r\n    Meeting: '/metting',\r\n    Call: '/phone-call',\r\n    Task: '/task',\r\n    Email: '/email',\r\n    Property: '/properties',\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [user?._id]);\r\n\r\n  return (\r\n    <>\r\n      <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} gap=\"20px\" mb=\"20px\">\r\n        {(taskView?.create || taskView?.update || taskView?.delete || taskView?.view) && (tasksModule?.isActive) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/task\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg=\"linear-gradient(220.55deg, #3793FF 0%, #0017E4 100%);\"\r\n                icon={<Icon w=\"28px\" h=\"28px\" as={MdAddTask} color=\"white\" />}\r\n              />\r\n            }\r\n            name=\"Tasks\"\r\n            value={findModuleData(\"Tasks\")}\r\n          />}\r\n        {(contactsView?.create || contactsView?.update || contactsView?.delete || contactsView?.view) && (contactModule?.isActive) &&\r\n          < MiniStatistics\r\n            onClick={() => navigate(\"/contacts\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg=\"linear-gradient(220.55deg, #3793FF 0%, #0017E4 100%);\"\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={MdContacts} color=\"white\" />\r\n                }\r\n              />\r\n            }\r\n            name=\"Contacts\"\r\n            value={findModuleData(\"Contacts\")}\r\n          />}\r\n        {(leadView?.create || leadView?.update || leadView?.delete || leadView?.view) && (leadModule?.isActive) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/lead\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg=\"linear-gradient(220.55deg, #3793FF 0%, #0017E4 100%);\"\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={MdLeaderboard}  color=\"white\"/>\r\n                }\r\n              />\r\n            }\r\n            name=\"Leads\"\r\n            value={findModuleData(\"Leads\")}\r\n          />}\r\n        {/* {(proprtyView?.create || proprtyView?.update || proprtyView?.delete || proprtyView?.view) && (propertiesModule?.isActive) &&\r\n          <MiniStatistics\r\n            onClick={() => navigate(\"/properties\")}\r\n            startContent={\r\n              <IconBox\r\n                w=\"56px\"\r\n                h=\"56px\"\r\n                bg=\"linear-gradient(220.55deg, #3793FF 0%, #0017E4 100%);\"\r\n                icon={\r\n                  <Icon w=\"32px\" h=\"32px\" as={LuBuilding2} color=\"white\" />\r\n                }\r\n              />\r\n            }\r\n            name=\"Property\"\r\n            value={findModuleData(\"Properties\")}\r\n          />} */}\r\n      </SimpleGrid>\r\n\r\n      <Grid Grid templateColumns=\"repeat(12, 1fr)\" gap={3} >\r\n        {\r\n          (emailModule?.isActive || callModule?.isActive) &&\r\n          <GridItem rowSpan={2} colSpan={{ base: 12, md: 6 }}>\r\n            <Card>\r\n              <Flex mb={3} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n                <Heading size=\"md\">{(emailModule?.isActive && callModule?.isActive) ? \"Email and Call\" : emailModule?.isActive ? \"Email\" : callModule?.isActive ? \"Call\" : \"\"} Report</Heading>\r\n                {\r\n                  reportModule?.isActive &&\r\n                  <IconButton\r\n                    color={\"green.500\"}\r\n                    onClick={() => navigate(\"/reporting-analytics\")}\r\n                    aria-label=\"Call Fred\"\r\n                    borderRadius=\"10px\"\r\n                    size=\"md\"\r\n                    icon={<ViewIcon />}\r\n                  />\r\n                }\r\n              </Flex>\r\n              <HSeparator />\r\n              <ReportChart dashboard={\"dashboard\"} />\r\n            </Card>\r\n          </GridItem>\r\n        }\r\n        <GridItem rowSpan={2} colSpan={{ base: 12, md: 6 }}>\r\n          <Card>\r\n            <Flex mb={5} alignItems={\"center\"} justifyContent={\"space-between\"}>\r\n              <Heading size=\"md\" >Module Data Report</Heading>\r\n\r\n            </Flex>\r\n            <Box mb={3}>\r\n              <HSeparator />\r\n            </Box>\r\n            <Chart dashboard={\"dashboard\"} data={data} />\r\n          </Card>\r\n        </GridItem>\r\n      </Grid>\r\n      <SimpleGrid gap=\"20px\" columns={{\r\n        base: 1, md: leadView?.view && taskView?.view ? 2 : 2, lg:\r\n          leadView?.view && taskView?.view ? 3 : 2\r\n      }} my=\"20px\">\r\n\r\n        {\r\n          data && data.length > 0 &&\r\n          <Card >\r\n            <Heading size=\"md\" pb={3}>Statistics</Heading>\r\n            <p className=\"pb-2\">Overview of your data</p>\r\n\r\n            {\r\n              !isLoding ?\r\n                data && data.length > 0 && data?.map((item, i) => (\r\n                  <>\r\n                    <Box className=\"shadow-md pt=4  p-3 rounded-lg m-1.5 cursor-pointer hover:shadow-md\"  cursor={'pointer'} key={i} onClick={() => navigate(navigateTo[item.name])}>\r\n                      <Flex justifyContent={\"space-between\"}>\r\n                        <Text fontSize=\"sm\" fontWeight={600} pb={2}>{item?.name}</Text>\r\n                        <Text fontSize=\"sm\" fontWeight={600} pb={2}><CountUpComponent targetNumber={item?.length} /></Text>\r\n                      </Flex>\r\n                      <Progress\r\n                        colorScheme={item?.color}\r\n                        size='xs' value={item?.length} width={\"100%\"} />\r\n                    </Box>\r\n                  </>\r\n\r\n                )) : <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><Spinner /></div>\r\n            }\r\n          </Card>\r\n        }\r\n\r\n        {leadView?.view && (leadModule?.isActive) && <Card>\r\n          <Heading size=\"md\" pb={2}>Lead Statistics</Heading>\r\n          {(leadView?.view) &&\r\n            <Grid templateColumns=\"repeat(12, 1fr)\" gap={2}>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#ebf5ff\"}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead')}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#1f7eeb\"}>Total Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#1f7eeb\"}><CountUpComponent targetNumber={allData?.leadData?.length || 0} /> </Text>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#eaf9e6\"}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead', { state: 'active' })}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#43882f\"} >Active Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#43882f\"}><CountUpComponent targetNumber={findLeadStatus(\"active\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#fbf4dd\"}\r\n                  onClick={() => navigate('/lead', { state: 'pending' })}\r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#a37f08\"}>Pending Leads</Heading>\r\n                  <Text fontWeight={600} color={\"#a37f08\"}><CountUpComponent targetNumber={findLeadStatus(\"pending\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n\r\n              <GridItem colSpan={{ base: 12, md: 6 }}>\r\n                <Box backgroundColor={\"#ffeeeb\"} \r\n                  borderRadius={\"10px\"}\r\n                  cursor={\"pointer\"}\r\n                  onClick={() => navigate('/lead', { state: 'sold' })}\r\n                  p={2} m={1} textAlign={\"center\"}>\r\n                  <Heading size=\"sm\" pb={3} color={\"#d6401d\"}>Sold Leads </Heading>\r\n                  <Text fontWeight={600} color={\"#d6401d\"}><CountUpComponent targetNumber={findLeadStatus(\"sold\")} /></Text>\r\n                </Box>\r\n              </GridItem>\r\n            </Grid>\r\n          }\r\n          <Flex justifyContent={\"center\"}  >\r\n            <PieChart leadData={allData?.leadData} />\r\n          </Flex>\r\n\r\n        </Card>}\r\n\r\n        {taskView?.view && (tasksModule?.isActive) && <Card >\r\n          <Heading size=\"md\" pb={3}>Task Statistics</Heading>\r\n          <Grid templateColumns=\"repeat(12, 1fr)\" gap={2} mb={2}>\r\n            <GridItem colSpan={{ base: 12 }}>\r\n              <Box backgroundColor={\"#bfdbfe\"}\r\n                onClick={() => navigate('/task')}\r\n                borderRadius={\"10px\"} cursor={'pointer'}\r\n                p={2} m={1} textAlign={\"center\"}>\r\n                <Heading size=\"sm\" pb={3} color={\"#1f7eeb\"}>Total Tasks </Heading>\r\n                <Text fontWeight={600} color={\"#1f7eeb\"}><CountUpComponent targetNumber={allData?.taskData?.length || 0} /></Text>\r\n              </Box>\r\n            </GridItem>\r\n          </Grid>\r\n          {taskStatus && taskStatus.length > 0 && taskStatus?.map((item, i) => (\r\n            <Box my={1.5} key={i}>\r\n              {/* <Flex justifyContent={\"space-between\"} cursor={'pointer'} onClick={() => navigate('/task', { state: item.status })} alignItems={\"center\"} padding={4} backgroundColor={\"#0b0b0b17\"} borderRadius={\"10px\"}> */}\r\n              <Flex justifyContent={\"space-between\"} cursor={'pointer'} alignItems={\"center\"} padding={4} backgroundColor={\"#f1f5f9\"} borderRadius={\"10px\"}>\r\n                <Flex alignItems={\"center\"}>\r\n                  <Box height={\"18px\"} width={\"18px\"} lineHeight={\"18px\"} textAlign={\"center\"} border={`1px solid ${item.color}`} display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"} borderRadius={\"50%\"} margin={\"0 auto\"} >\r\n                    <Box backgroundColor={`${item.color}`} height={\"10px\"} width={\"10px\"} borderRadius={\"50%\"}></Box>\r\n                  </Box>\r\n\r\n                  <Text ps={2} fontWeight={\"bold\"} color={`${item.color}`}>{item.name}</Text>\r\n\r\n                </Flex>\r\n                <Box fontWeight={\"bold\"} color={`${item.color}`}><CountUpComponent targetNumber={item?.length} /></Box>\r\n              </Flex>\r\n            </Box>\r\n          ))}\r\n        </Card>}\r\n      </SimpleGrid>\r\n\r\n    </>\r\n  );\r\n}\r\n","// Chakra imports\r\n// Chakra imports\r\nimport {\r\n  Flex,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  useColorModeValue,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Custom components\r\nimport Card from \"components/card/Card.js\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\n// Custom icons\r\nimport React from \"react\";\r\n\r\nexport default function Default(props) {\r\n  const { startContent, endContent, name, growth, value } = props;\r\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n  const textColorSecondary = \"secondaryGray.600\";\r\n\r\n  return (\r\n    <Card cursor={'pointer'} py='15px' onClick={props.onClick} >\r\n      <Flex\r\n        my='auto'\r\n        h='100%'\r\n        align={{ base: \"center\", xl: \"start\" }}\r\n        justify={{ base: \"center\", xl: \"center\" }}>\r\n        {startContent}\r\n\r\n        <Stat my='auto' ms={startContent ? \"18px\" : \"0px\"}>\r\n          <StatLabel\r\n            lineHeight='100%'\r\n            color={textColorSecondary}\r\n            fontSize={{\r\n              base: props.fontsize ? props.fontsize : \"sm\",\r\n            }}>\r\n            {name}\r\n          </StatLabel>\r\n          <StatNumber\r\n            color={textColor}\r\n            fontSize={{\r\n              base: \"2xl\",\r\n            }}>\r\n            <CountUpComponent targetNumber={value} />\r\n            {/* {value} */}\r\n          </StatNumber>\r\n          {growth ? (\r\n            <Flex align='center'>\r\n              <Text color='green.500' fontSize='xs' fontWeight='700' me='5px'>\r\n                {growth}\r\n              </Text>\r\n              <Text color='secondaryGray.600' fontSize='xs' fontWeight='400'>\r\n                since last month\r\n              </Text>\r\n            </Flex>\r\n          ) : null}\r\n        </Stat>\r\n        <Flex ms='auto' w='max-content'>\r\n          {endContent}\r\n        </Flex>\r\n      </Flex>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":["_ref","_modules$find","_modules$find2","dashboard","reportChart","setReportChart","useState","startDate","setStartDate","Date","setDate","getDate","endDate","setEndDate","select","setSelect","selection","setSelection","modules","useSelector","state","_state$modules","data","user","JSON","parse","localStorage","getItem","isEmailsActive","find","item","moduleName","isActive","isCallsActive","useEffect","async","moment","format","filter","result","postApi","role","_id","status","fetchChart","series","Object","keys","map","key","dataSet","seriesData","_dataSet$Emails","_dataSet$Calls","Emails","concat","x","date","getTime","y","Emailcount","Calls","Callcount","name","selectedSeries","s","_jsx","className","children","_jsxs","value","onChange","e","target","ReactDatePicker","selected","type","checked","ReactApexChart","options","chart","id","toolbar","show","zoom","enabled","xaxis","labels","style","colors","fontSize","yaxis","title","text","color","fontWeight","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","tooltip","legend","position","horizontalAlign","height","IconBox","props","icon","rest","Flex","alignItems","justifyContent","borderRadius","description","chartData","useMemo","length","maxValue","Math","max","yAxisTicks","step","ceil","Array","from","_","i","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","opacity","XAxis","dataKey","tickLine","axisLine","dy","tick","YAxis","tickFormatter","domain","ticks","Tooltip","cursor","contentStyle","backgroundColor","border","boxShadow","labelStyle","marginBottom","itemStyle","formatter","labelFormatter","label","Bar","radius","maxBarSize","animationDuration","animationBegin","onMouseEnter","index","document","querySelectorAll","forEach","bar","onMouseLeave","leadData","lead","leadStatus","totalLeads","scaledSeries","NaN","COLORS","PieChart","Pie","cx","cy","innerRadius","outerRadius","startAngle","endAngle","paddingAngle","entry","Cell","Label","content","_ref2","viewBox","textAnchor","dominantBaseline","round","UserReports","_allData$leadData2","_allData$taskData2","useColorModeValue","isLoding","setIsLoding","allData","setAllData","setData","navigate","useNavigate","contactsView","taskView","leadView","proprtyView","HasAccess","getApi","fetchProgressChart","findModuleData","filterData","findLeadStatus","_allData$leadData","findTaskStatus","_allData$taskData","taskData","leadModule","contactModule","tasksModule","_ref3","reportModule","_ref4","emailModule","_ref5","callModule","_ref6","taskStatus","navigateTo","Lead","Contact","Meeting","Call","Task","Email","Property","_responseData$data","responseData","fetchData","_Fragment","SimpleGrid","columns","base","md","lg","gap","mb","create","update","delete","view","MiniStatistics","onClick","startContent","w","h","bg","Icon","as","MdAddTask","MdContacts","MdLeaderboard","Grid","templateColumns","GridItem","rowSpan","colSpan","Card","Heading","size","IconButton","ViewIcon","HSeparator","ReportChart","Box","Chart","my","pb","display","Spinner","Text","CountUpComponent","targetNumber","Progress","colorScheme","p","m","textAlign","padding","lineHeight","ps","Default","endContent","growth","textColor","py","align","xl","justify","Stat","ms","StatLabel","fontsize","StatNumber","me"],"sourceRoot":""}