{"version":3,"file":"static/js/4629.0bf3c969.chunk.js","mappings":"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","sources":["views/admin/emailHistory/View.js"],"sourcesContent":["import { Box, Button, Flex, Grid, GridItem, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { HasAccess } from \"../../../redux/accessUtils\";\r\nimport { getApi } from \"services/api\";\r\nimport { FaFilePdf } from \"react-icons/fa\";\r\nimport html2pdf from \"html2pdf.js\";\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const size = \"lg\";\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/email/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n\r\n    const generatePDF = () => {\r\n        setLoading(true)\r\n        const element = document.getElementById(\"reports\");\r\n        const hideBtn = document.getElementById(\"hide-btn\");\r\n\r\n        if (element) {\r\n            hideBtn.style.display = 'none';\r\n            html2pdf()\r\n                .from(element)\r\n                .set({\r\n                    margin: [0, 0, 0, 0],\r\n                    filename: `Email_Details_${moment().format(\"DD-MM-YYYY\")}.pdf`,\r\n                    image: { type: \"jpeg\", quality: 0.98 },\r\n                    html2canvas: { scale: 2, useCORS: true, allowTaint: true },\r\n                    jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n                })\r\n                .save().then(() => {\r\n                    setLoading(false)\r\n                    hideBtn.style.display = '';\r\n                })\r\n            // }, 500);\r\n        } else {\r\n            console.error(\"Element with ID 'reports' not found.\");\r\n            setLoading(false)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const [contactAccess, leadAccess] = HasAccess(['Contacts', 'Leads'])\r\n\r\n    return (\r\n        <>\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3} id=\"reports\">\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Heading size=\"lg\" m={3}>\r\n                                {data?.senderEmail}\r\n                            </Heading>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Box display={\"flex\"} justifyContent={\"space-between\"}>\r\n                                                <Heading size=\"md\" mb={3}>\r\n                                                    Email Details\r\n                                                </Heading>\r\n                                                <Box id=\"hide-btn\">\r\n                                                    <Button leftIcon={<FaFilePdf />} size='sm' variant=\"brand\" onClick={generatePDF} disabled={loading}>\r\n                                                        {loading ? \"Please Wait...\" : \"Print as PDF\"}\r\n                                                    </Button>\r\n                                                    <Button leftIcon={<IoIosArrowBack />} size='sm' variant=\"brand\" onClick={() => navigate(-1)} style={{ marginLeft: 10 }}>\r\n                                                        Back\r\n                                                    </Button>\r\n                                                </Box>\r\n                                            </Box>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Sender </Text>\r\n                                        <Text>{data?.senderEmail ? data?.senderEmail : ' - '}</Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Recipient </Text>\r\n                                        <Text>{data?.recipient ? data?.recipient : ' - '}</Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Create From </Text>\r\n                                        {data?.createBy ?\r\n                                            <Link to={`/contactView/${data?.createBy}`}>\r\n                                                <Text color={contactAccess?.view ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: contactAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: contactAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                            </Link> : <Link to={`/leadView/${data?.createByLead}`}>\r\n                                                <Text color={leadAccess?.view ? 'brand.600' : 'blackAlpha.900'} sx={{ '&:hover': { color: leadAccess?.view ? 'blue.500' : 'blackAlpha.900', textDecoration: leadAccess?.view ? 'underline' : 'none' } }}>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                            </Link>\r\n                                        }\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Realeted To </Text>\r\n                                        <Text>{data?.createBy ? \"Contact\" : data?.createByLead && \"Lead\"}</Text>\r\n                                    </GridItem>\r\n\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Start Date </Text>\r\n                                        <Text> {data?.startDate ? moment(data?.startDate).format('lll ') : ' - '} </Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>End Date </Text>\r\n                                        <Text> {data?.endDate ? moment(data?.endDate).format('lll ') : ' - '} </Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Time stamp </Text>\r\n                                        <Text> {data?.timestamp ? moment(data?.timestamp).format('lll ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2 }}>\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Subject </Text>\r\n                                        <Text>{data?.subject ? data?.subject : ' - '}</Text>\r\n                                    </GridItem>\r\n                                    <GridItem colSpan={{ base: 2 }} >\r\n                                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Message </Text>\r\n                                        {\r\n                                            data?.type === \"message\" ?\r\n                                                <Text>{data?.message ? data?.message : '-'}</Text>\r\n                                                :\r\n                                                <div dangerouslySetInnerHTML={{ __html: data?.html }} />\r\n                                        }\r\n                                    </GridItem>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n                </>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n"],"names":["View","param","useParams","data","setData","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","JSON","parse","localStorage","getItem","navigate","useNavigate","loading","setLoading","useEffect","async","response","getApi","id","fetchData","contactAccess","leadAccess","HasAccess","_jsx","_Fragment","children","Flex","justifyContent","alignItems","width","Spinner","_jsxs","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","size","m","senderEmail","Card","Box","display","mb","Button","leftIcon","FaFilePdf","variant","onClick","generatePDF","element","document","getElementById","hideBtn","style","html2pdf","from","set","margin","filename","moment","format","image","type","quality","html2canvas","scale","useCORS","allowTaint","jsPDF","unit","orientation","save","then","console","error","disabled","IoIosArrowBack","marginLeft","HSeparator","md","Text","fontSize","fontWeight","color","recipient","createBy","Link","to","view","sx","textDecoration","createByName","createByLead","startDate","endDate","timestamp","toNow","subject","message","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}